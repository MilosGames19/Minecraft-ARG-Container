
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.minecraftalphaargmod.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.RegisterColorHandlersEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.mcreator.minecraftalphaargmod.block.ZMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.YesBlockBlock;
import net.mcreator.minecraftalphaargmod.block.YellowPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.YellowPlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.YellowPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.YellowLogBlock;
import net.mcreator.minecraftalphaargmod.block.YellowLampBlock;
import net.mcreator.minecraftalphaargmod.block.YellowGrassBlock;
import net.mcreator.minecraftalphaargmod.block.YZ01CommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.YMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.YMonitor1Block;
import net.mcreator.minecraftalphaargmod.block.XMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.XMonitor1Block;
import net.mcreator.minecraftalphaargmod.block.WorkplaceLampBlock;
import net.mcreator.minecraftalphaargmod.block.WorkplaceHallBlockBlock;
import net.mcreator.minecraftalphaargmod.block.WorkbenchBlock;
import net.mcreator.minecraftalphaargmod.block.WoodenStairsBlock;
import net.mcreator.minecraftalphaargmod.block.WoodenPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.WoodenDoorBlock;
import net.mcreator.minecraftalphaargmod.block.WoodPillarBlockBlock;
import net.mcreator.minecraftalphaargmod.block.WoodBlock;
import net.mcreator.minecraftalphaargmod.block.WireframeBlockBlock;
import net.mcreator.minecraftalphaargmod.block.WireframeBlock;
import net.mcreator.minecraftalphaargmod.block.WindowBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteStarMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.WhitePSIMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteMojangBlockTBOTVBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteMojangBlockBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteLampBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteGlassBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteColumnCrossBlock;
import net.mcreator.minecraftalphaargmod.block.WhiteColumnBlock;
import net.mcreator.minecraftalphaargmod.block.WhereIsSkyBlockBlock;
import net.mcreator.minecraftalphaargmod.block.WeirdBricksBlock;
import net.mcreator.minecraftalphaargmod.block.WeaponUpgraderBlock;
import net.mcreator.minecraftalphaargmod.block.WeCatCubeBlock;
import net.mcreator.minecraftalphaargmod.block.WallgpBlock;
import net.mcreator.minecraftalphaargmod.block.WallgBlock;
import net.mcreator.minecraftalphaargmod.block.WallTileBlock;
import net.mcreator.minecraftalphaargmod.block.WallTile9Block;
import net.mcreator.minecraftalphaargmod.block.WallTile7Block;
import net.mcreator.minecraftalphaargmod.block.WallTile6Block;
import net.mcreator.minecraftalphaargmod.block.WallTile5Block;
import net.mcreator.minecraftalphaargmod.block.WallTile4Block;
import net.mcreator.minecraftalphaargmod.block.WallTile3Block;
import net.mcreator.minecraftalphaargmod.block.WallTile2Block;
import net.mcreator.minecraftalphaargmod.block.WallTile1Block;
import net.mcreator.minecraftalphaargmod.block.WallTIle8Block;
import net.mcreator.minecraftalphaargmod.block.WallPaintingBlock4Block;
import net.mcreator.minecraftalphaargmod.block.WallPaintingBlock3Block;
import net.mcreator.minecraftalphaargmod.block.WallPaintingBlock2Block;
import net.mcreator.minecraftalphaargmod.block.WallPaintingBlock1Block;
import net.mcreator.minecraftalphaargmod.block.WallBlockBlock;
import net.mcreator.minecraftalphaargmod.block.WallBlock4Block;
import net.mcreator.minecraftalphaargmod.block.WallBlock3Block;
import net.mcreator.minecraftalphaargmod.block.WallBlock2Block;
import net.mcreator.minecraftalphaargmod.block.WallBlock1Block;
import net.mcreator.minecraftalphaargmod.block.Wall6Block;
import net.mcreator.minecraftalphaargmod.block.Wall5Block;
import net.mcreator.minecraftalphaargmod.block.Wall4Block;
import net.mcreator.minecraftalphaargmod.block.Wall3Block;
import net.mcreator.minecraftalphaargmod.block.Wall2Block;
import net.mcreator.minecraftalphaargmod.block.Wall1Block;
import net.mcreator.minecraftalphaargmod.block.WMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.W3Block;
import net.mcreator.minecraftalphaargmod.block.W2Block;
import net.mcreator.minecraftalphaargmod.block.W1Block;
import net.mcreator.minecraftalphaargmod.block.Voidwallvarient4Block;
import net.mcreator.minecraftalphaargmod.block.Voidwallvarient3Block;
import net.mcreator.minecraftalphaargmod.block.Voidsupportvarient4Block;
import net.mcreator.minecraftalphaargmod.block.Voidsupportvarient3Block;
import net.mcreator.minecraftalphaargmod.block.Voidfencevarient4Block;
import net.mcreator.minecraftalphaargmod.block.Voidfencevarient3Block;
import net.mcreator.minecraftalphaargmod.block.VoidWallVarient2Block;
import net.mcreator.minecraftalphaargmod.block.VoidWallVarient1Block;
import net.mcreator.minecraftalphaargmod.block.VoidVineBlock;
import net.mcreator.minecraftalphaargmod.block.VoidTorchBlock;
import net.mcreator.minecraftalphaargmod.block.VoidTileBlock;
import net.mcreator.minecraftalphaargmod.block.VoidTile2Block;
import net.mcreator.minecraftalphaargmod.block.VoidTile1Block;
import net.mcreator.minecraftalphaargmod.block.VoidSupportVarientBlock;
import net.mcreator.minecraftalphaargmod.block.VoidSupportVarient1Block;
import net.mcreator.minecraftalphaargmod.block.VoidPillarBlock;
import net.mcreator.minecraftalphaargmod.block.VoidPillar1Block;
import net.mcreator.minecraftalphaargmod.block.VoidPathBlock;
import net.mcreator.minecraftalphaargmod.block.VoidPath2Block;
import net.mcreator.minecraftalphaargmod.block.VoidPath1Block;
import net.mcreator.minecraftalphaargmod.block.VoidLightOffBlock;
import net.mcreator.minecraftalphaargmod.block.VoidLightOff1Block;
import net.mcreator.minecraftalphaargmod.block.VoidLightBlock;
import net.mcreator.minecraftalphaargmod.block.VoidLight1Block;
import net.mcreator.minecraftalphaargmod.block.VoidGemOreBlock;
import net.mcreator.minecraftalphaargmod.block.VoidFenceVarient2Block;
import net.mcreator.minecraftalphaargmod.block.VoidFenceVarient1Block;
import net.mcreator.minecraftalphaargmod.block.VoidCrossBlock;
import net.mcreator.minecraftalphaargmod.block.VoidCross1Block;
import net.mcreator.minecraftalphaargmod.block.VoidBlockBlock;
import net.mcreator.minecraftalphaargmod.block.VoidAlitySymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.VinnyBlock;
import net.mcreator.minecraftalphaargmod.block.VinesBlock;
import net.mcreator.minecraftalphaargmod.block.VerticalLineStopBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineShopBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineShop2Block;
import net.mcreator.minecraftalphaargmod.block.VendingMachineReviveTopBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineReviveBottomBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineHealthTopBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineHealthBottomBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineDashTopBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineDashBottomBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineArrmorTopBlock;
import net.mcreator.minecraftalphaargmod.block.VendingMachineArmorBottomBlock;
import net.mcreator.minecraftalphaargmod.block.VMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.UpdateBlockBlock;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock9Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock8Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock7Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock6Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock5Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock4Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock3Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock2Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock11Block;
import net.mcreator.minecraftalphaargmod.block.UnusedBlock10Block;
import net.mcreator.minecraftalphaargmod.block.Unused9Block;
import net.mcreator.minecraftalphaargmod.block.Unused8Block;
import net.mcreator.minecraftalphaargmod.block.Unused7Block;
import net.mcreator.minecraftalphaargmod.block.Unused6Block;
import net.mcreator.minecraftalphaargmod.block.Unused5Block;
import net.mcreator.minecraftalphaargmod.block.Unused4Block;
import net.mcreator.minecraftalphaargmod.block.Unused3Block;
import net.mcreator.minecraftalphaargmod.block.Unused2Block;
import net.mcreator.minecraftalphaargmod.block.Unused1Block;
import net.mcreator.minecraftalphaargmod.block.Unused13Block;
import net.mcreator.minecraftalphaargmod.block.Unused12Block;
import net.mcreator.minecraftalphaargmod.block.Unused11Block;
import net.mcreator.minecraftalphaargmod.block.Unused10Block;
import net.mcreator.minecraftalphaargmod.block.Unknownsymbol3monitorBlock;
import net.mcreator.minecraftalphaargmod.block.Unknownsymbol2monitorBlock;
import net.mcreator.minecraftalphaargmod.block.Unknownsymbol1monitorBlock;
import net.mcreator.minecraftalphaargmod.block.Unknownsymbol0monitorBlock;
import net.mcreator.minecraftalphaargmod.block.UnknownSymbolMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.UnknownPlantBlock;
import net.mcreator.minecraftalphaargmod.block.UnknownPlant1Block;
import net.mcreator.minecraftalphaargmod.block.UnknownBlock;
import net.mcreator.minecraftalphaargmod.block.Unknown9Block;
import net.mcreator.minecraftalphaargmod.block.Unknown8Block;
import net.mcreator.minecraftalphaargmod.block.Unknown7Block;
import net.mcreator.minecraftalphaargmod.block.Unknown6Block;
import net.mcreator.minecraftalphaargmod.block.Unknown5Block;
import net.mcreator.minecraftalphaargmod.block.Unknown4Block;
import net.mcreator.minecraftalphaargmod.block.Unknown3Block;
import net.mcreator.minecraftalphaargmod.block.Unknown2Block;
import net.mcreator.minecraftalphaargmod.block.Unknown26Block;
import net.mcreator.minecraftalphaargmod.block.Unknown25Block;
import net.mcreator.minecraftalphaargmod.block.Unknown24Block;
import net.mcreator.minecraftalphaargmod.block.Unknown23Block;
import net.mcreator.minecraftalphaargmod.block.Unknown22Block;
import net.mcreator.minecraftalphaargmod.block.Unknown21Block;
import net.mcreator.minecraftalphaargmod.block.Unknown20Block;
import net.mcreator.minecraftalphaargmod.block.Unknown1Block;
import net.mcreator.minecraftalphaargmod.block.Unknown19Block;
import net.mcreator.minecraftalphaargmod.block.Unknown18Block;
import net.mcreator.minecraftalphaargmod.block.Unknown17Block;
import net.mcreator.minecraftalphaargmod.block.Unknown16Block;
import net.mcreator.minecraftalphaargmod.block.Unknown15Block;
import net.mcreator.minecraftalphaargmod.block.Unknown14Block;
import net.mcreator.minecraftalphaargmod.block.Unknown13Block;
import net.mcreator.minecraftalphaargmod.block.Unknown12Block;
import net.mcreator.minecraftalphaargmod.block.Unknown11Block;
import net.mcreator.minecraftalphaargmod.block.Unknown10Block;
import net.mcreator.minecraftalphaargmod.block.UmbrellaMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.UltimacySymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.UVWXCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.UMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.U1Block;
import net.mcreator.minecraftalphaargmod.block.TvBlock;
import net.mcreator.minecraftalphaargmod.block.TrinityPlateBlock;
import net.mcreator.minecraftalphaargmod.block.TriangleBlockBlock;
import net.mcreator.minecraftalphaargmod.block.TreeteaBlock;
import net.mcreator.minecraftalphaargmod.block.TowerTransporterBlock;
import net.mcreator.minecraftalphaargmod.block.ToughTrapDoorBlock;
import net.mcreator.minecraftalphaargmod.block.ToughGridBlock;
import net.mcreator.minecraftalphaargmod.block.ToughDoorBlock;
import net.mcreator.minecraftalphaargmod.block.ToughBrickStairsBlock;
import net.mcreator.minecraftalphaargmod.block.ToughBrickSlabBlock;
import net.mcreator.minecraftalphaargmod.block.ToughBlatteaBricksBlock;
import net.mcreator.minecraftalphaargmod.block.TorchBlock;
import net.mcreator.minecraftalphaargmod.block.TiledSmoothSlabsBlock;
import net.mcreator.minecraftalphaargmod.block.TileStairsBlock;
import net.mcreator.minecraftalphaargmod.block.TileSlabBlock;
import net.mcreator.minecraftalphaargmod.block.TileBlockBlock;
import net.mcreator.minecraftalphaargmod.block.TileBlock;
import net.mcreator.minecraftalphaargmod.block.Tile7Block;
import net.mcreator.minecraftalphaargmod.block.Tile6Block;
import net.mcreator.minecraftalphaargmod.block.Tile5Block;
import net.mcreator.minecraftalphaargmod.block.Tile4Block;
import net.mcreator.minecraftalphaargmod.block.Tile3Block;
import net.mcreator.minecraftalphaargmod.block.Tile2Block;
import net.mcreator.minecraftalphaargmod.block.Tile1Block;
import net.mcreator.minecraftalphaargmod.block.TheGardenSignSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.TestChamberWallUpBlock;
import net.mcreator.minecraftalphaargmod.block.TestChamberWallDownBlock;
import net.mcreator.minecraftalphaargmod.block.TestChamberTileBlock;
import net.mcreator.minecraftalphaargmod.block.TestChamberTile1Block;
import net.mcreator.minecraftalphaargmod.block.TerrenBlockBlock;
import net.mcreator.minecraftalphaargmod.block.TerminalBlock;
import net.mcreator.minecraftalphaargmod.block.TeetreeleavesBlock;
import net.mcreator.minecraftalphaargmod.block.TeeplancksBlock;
import net.mcreator.minecraftalphaargmod.block.TeedoorBlock;
import net.mcreator.minecraftalphaargmod.block.TeecrafterBlock;
import net.mcreator.minecraftalphaargmod.block.TealquartzwallBlock;
import net.mcreator.minecraftalphaargmod.block.TealQuartzStairsBlock;
import net.mcreator.minecraftalphaargmod.block.TealQuartzSlabBlock;
import net.mcreator.minecraftalphaargmod.block.TealQuartzGlassBlock;
import net.mcreator.minecraftalphaargmod.block.TealQuartzFenceBlock;
import net.mcreator.minecraftalphaargmod.block.TealQuartzColumnBlock;
import net.mcreator.minecraftalphaargmod.block.TealQuartzBlock;
import net.mcreator.minecraftalphaargmod.block.TealPrismarineStairsBlock;
import net.mcreator.minecraftalphaargmod.block.TealPrismarineSlabBlock;
import net.mcreator.minecraftalphaargmod.block.TealPrismarineBlock;
import net.mcreator.minecraftalphaargmod.block.TealMarineQuartzBlock;
import net.mcreator.minecraftalphaargmod.block.TealMarineColumnBlock;
import net.mcreator.minecraftalphaargmod.block.TeaPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.TeaPlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.TbotvbricksstairsBlock;
import net.mcreator.minecraftalphaargmod.block.TbotvTrophyBlock;
import net.mcreator.minecraftalphaargmod.block.TbotvBricksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.TargetBlock;
import net.mcreator.minecraftalphaargmod.block.TallRedRoseBlock;
import net.mcreator.minecraftalphaargmod.block.TallDandelionBlock;
import net.mcreator.minecraftalphaargmod.block.TMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.TBOTVDoorBlock;
import net.mcreator.minecraftalphaargmod.block.TBOTVBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SymbolOfSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.SyllablesPlateBlock;
import net.mcreator.minecraftalphaargmod.block.SwitchstepBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SwitchStepTileBlock;
import net.mcreator.minecraftalphaargmod.block.SwitchStepChiseledBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SwitchPlateBlock;
import net.mcreator.minecraftalphaargmod.block.SunbornFlowerTopazBlock;
import net.mcreator.minecraftalphaargmod.block.SunDecorationBlock;
import net.mcreator.minecraftalphaargmod.block.SunBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SummerStoneBlock;
import net.mcreator.minecraftalphaargmod.block.SummerSandBlock;
import net.mcreator.minecraftalphaargmod.block.SummerLogBlock;
import net.mcreator.minecraftalphaargmod.block.SummerLog1Block;
import net.mcreator.minecraftalphaargmod.block.SummerLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.SummerGrassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SummerGrassBlock;
import net.mcreator.minecraftalphaargmod.block.SummerDirtBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SummerCobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.SummerBedrockBlock;
import net.mcreator.minecraftalphaargmod.block.Subject113PlushieBlock;
import net.mcreator.minecraftalphaargmod.block.StructureBuilderBlock;
import net.mcreator.minecraftalphaargmod.block.StoreBlock2FBlock;
import net.mcreator.minecraftalphaargmod.block.StoreBlock1FBlock;
import net.mcreator.minecraftalphaargmod.block.StorageSignSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.StoneWoodTileBlock;
import net.mcreator.minecraftalphaargmod.block.StoneWoodLogBlock;
import net.mcreator.minecraftalphaargmod.block.StoneWoodLog1Block;
import net.mcreator.minecraftalphaargmod.block.StoneTileBlockBlock;
import net.mcreator.minecraftalphaargmod.block.StoneTileBlock;
import net.mcreator.minecraftalphaargmod.block.StoneGrassBlock;
import net.mcreator.minecraftalphaargmod.block.StoneBricksBlock;
import net.mcreator.minecraftalphaargmod.block.StoneBlock;
import net.mcreator.minecraftalphaargmod.block.StaticBlockBlock;
import net.mcreator.minecraftalphaargmod.block.StaticBlock1Block;
import net.mcreator.minecraftalphaargmod.block.StarlitGrassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.StarPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.StarBlockBlock;
import net.mcreator.minecraftalphaargmod.block.StairLadderBlock;
import net.mcreator.minecraftalphaargmod.block.SquirmingOrganismBlock;
import net.mcreator.minecraftalphaargmod.block.SpringStoneBlock;
import net.mcreator.minecraftalphaargmod.block.SpringLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.SpringIceBlock;
import net.mcreator.minecraftalphaargmod.block.SpringGravelBlock;
import net.mcreator.minecraftalphaargmod.block.SpringGrassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SpringGrassBlock;
import net.mcreator.minecraftalphaargmod.block.SpringCobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.SpringBedrockBlock;
import net.mcreator.minecraftalphaargmod.block.SpiralSymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.SpeedUpBlock;
import net.mcreator.minecraftalphaargmod.block.SpeedBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SoulWorkbenchBlock;
import net.mcreator.minecraftalphaargmod.block.SoulWoodBlock;
import net.mcreator.minecraftalphaargmod.block.SoulTNTBlock;
import net.mcreator.minecraftalphaargmod.block.SoulStoneBlock;
import net.mcreator.minecraftalphaargmod.block.SoulSpogeBlock;
import net.mcreator.minecraftalphaargmod.block.SoulSandBlock;
import net.mcreator.minecraftalphaargmod.block.SoulPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.SoulPlankBlock;
import net.mcreator.minecraftalphaargmod.block.SoulObsidianBlock;
import net.mcreator.minecraftalphaargmod.block.SoulMossyCobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.SoulLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.SoulIronOreBlock;
import net.mcreator.minecraftalphaargmod.block.SoulIronBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SoulGravelBlock;
import net.mcreator.minecraftalphaargmod.block.SoulGrassBlock;
import net.mcreator.minecraftalphaargmod.block.SoulGoldOreBlock;
import net.mcreator.minecraftalphaargmod.block.SoulGoldBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SoulDirtBlock;
import net.mcreator.minecraftalphaargmod.block.SoulCobblesotneBlock;
import net.mcreator.minecraftalphaargmod.block.SoulCoalOreBlock;
import net.mcreator.minecraftalphaargmod.block.SoulCageFullBlock;
import net.mcreator.minecraftalphaargmod.block.SoulCageEmptyBlock;
import net.mcreator.minecraftalphaargmod.block.SoulBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SoulBookshelfBlock;
import net.mcreator.minecraftalphaargmod.block.SoralPlateBlock;
import net.mcreator.minecraftalphaargmod.block.SonyaBlock;
import net.mcreator.minecraftalphaargmod.block.SolidLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.SoftLimboCrownBlock;
import net.mcreator.minecraftalphaargmod.block.SnowyGrassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SnowBrickBlock;
import net.mcreator.minecraftalphaargmod.block.SmoothStoneFBlock;
import net.mcreator.minecraftalphaargmod.block.SmoothStoneBlock;
import net.mcreator.minecraftalphaargmod.block.SmoothLimestoneBlock;
import net.mcreator.minecraftalphaargmod.block.SmoothInfusedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.SmilePlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.SmilePlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.SmilePlanksBlock;
import net.mcreator.minecraftalphaargmod.block.SmileLogBlock;
import net.mcreator.minecraftalphaargmod.block.SmileLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.SmileBlock;
import net.mcreator.minecraftalphaargmod.block.SlowBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SlightlyTintedGlassPaneMagentaBlock;
import net.mcreator.minecraftalphaargmod.block.SlightlyTintedGlassMagentaBlock;
import net.mcreator.minecraftalphaargmod.block.SlatePillarBlock;
import net.mcreator.minecraftalphaargmod.block.SlateBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SlateBeaconBlock;
import net.mcreator.minecraftalphaargmod.block.Slaize90Block;
import net.mcreator.minecraftalphaargmod.block.Slaize80Block;
import net.mcreator.minecraftalphaargmod.block.Slaize70Block;
import net.mcreator.minecraftalphaargmod.block.Slaize60Block;
import net.mcreator.minecraftalphaargmod.block.Slaize50Block;
import net.mcreator.minecraftalphaargmod.block.Slaize40Block;
import net.mcreator.minecraftalphaargmod.block.Slaize30Block;
import net.mcreator.minecraftalphaargmod.block.Slaize290Block;
import net.mcreator.minecraftalphaargmod.block.Slaize280Block;
import net.mcreator.minecraftalphaargmod.block.Slaize270Block;
import net.mcreator.minecraftalphaargmod.block.Slaize260Block;
import net.mcreator.minecraftalphaargmod.block.Slaize250Block;
import net.mcreator.minecraftalphaargmod.block.Slaize240Block;
import net.mcreator.minecraftalphaargmod.block.Slaize230Block;
import net.mcreator.minecraftalphaargmod.block.Slaize220Block;
import net.mcreator.minecraftalphaargmod.block.Slaize210Block;
import net.mcreator.minecraftalphaargmod.block.Slaize20Block;
import net.mcreator.minecraftalphaargmod.block.Slaize200Block;
import net.mcreator.minecraftalphaargmod.block.Slaize190Block;
import net.mcreator.minecraftalphaargmod.block.Slaize180Block;
import net.mcreator.minecraftalphaargmod.block.Slaize170Block;
import net.mcreator.minecraftalphaargmod.block.Slaize160Block;
import net.mcreator.minecraftalphaargmod.block.Slaize150Block;
import net.mcreator.minecraftalphaargmod.block.Slaize140Block;
import net.mcreator.minecraftalphaargmod.block.Slaize130Block;
import net.mcreator.minecraftalphaargmod.block.Slaize120Block;
import net.mcreator.minecraftalphaargmod.block.Slaize110Block;
import net.mcreator.minecraftalphaargmod.block.Slaize10Block;
import net.mcreator.minecraftalphaargmod.block.Slaize100Block;
import net.mcreator.minecraftalphaargmod.block.Slaize00Block;
import net.mcreator.minecraftalphaargmod.block.SkyflameBlock;
import net.mcreator.minecraftalphaargmod.block.SkyFlameInGlassBlock;
import net.mcreator.minecraftalphaargmod.block.ShelveBlock;
import net.mcreator.minecraftalphaargmod.block.ShatteredCommandBlock;
import net.mcreator.minecraftalphaargmod.block.ShaperIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.ServerCoolingFanBlock;
import net.mcreator.minecraftalphaargmod.block.ServerContainersBlock;
import net.mcreator.minecraftalphaargmod.block.SeltarLineBlock;
import net.mcreator.minecraftalphaargmod.block.SeltarConnectorBlock;
import net.mcreator.minecraftalphaargmod.block.SandYcarps8PlushieBlock;
import net.mcreator.minecraftalphaargmod.block.SandBlock;
import net.mcreator.minecraftalphaargmod.block.SaltBricksBlock;
import net.mcreator.minecraftalphaargmod.block.SaltBlockBlock;
import net.mcreator.minecraftalphaargmod.block.SafeBlock;
import net.mcreator.minecraftalphaargmod.block.SadCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.STARMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.SMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.RubySoulerBlock;
import net.mcreator.minecraftalphaargmod.block.RubyOreBlock;
import net.mcreator.minecraftalphaargmod.block.RubyBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RtcdWallBlock;
import net.mcreator.minecraftalphaargmod.block.RtcdDecorativeBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RtcdDecorativeBlock2Block;
import net.mcreator.minecraftalphaargmod.block.RtcdDecorativeBlock1Block;
import net.mcreator.minecraftalphaargmod.block.RtcdConsoleBlock;
import net.mcreator.minecraftalphaargmod.block.RoseFlowerBlock;
import net.mcreator.minecraftalphaargmod.block.RoseBlock;
import net.mcreator.minecraftalphaargmod.block.RedstonelanternBlock;
import net.mcreator.minecraftalphaargmod.block.RedlightBlock;
import net.mcreator.minecraftalphaargmod.block.RedWallBlock;
import net.mcreator.minecraftalphaargmod.block.RedTerminalBlock;
import net.mcreator.minecraftalphaargmod.block.RedSymbolBlock;
import net.mcreator.minecraftalphaargmod.block.RedRoseBlock;
import net.mcreator.minecraftalphaargmod.block.RedPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.RedPlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.RedPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.RedPillarUpdatedVersionBlock;
import net.mcreator.minecraftalphaargmod.block.RedPillarBlock;
import net.mcreator.minecraftalphaargmod.block.RedMojangLogoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RedLogBlock;
import net.mcreator.minecraftalphaargmod.block.RedLampBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersStoneBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersSmoothStoneBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersPolishedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersPillarBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersGlassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersGenericBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RedKeepersChiseledBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RedGreenCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RealityspaceTileBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RealityspacePatternBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RealityspaceMsPacmanBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RealityspaceCrossBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RealityspaceArrowBlockBlock;
import net.mcreator.minecraftalphaargmod.block.RTCDblockBlock;
import net.mcreator.minecraftalphaargmod.block.RMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.QuestionMarkMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.QuestGiverBlock;
import net.mcreator.minecraftalphaargmod.block.QuartzumPrismarineStairsBlock;
import net.mcreator.minecraftalphaargmod.block.QuartzumPrismarineSlabBlock;
import net.mcreator.minecraftalphaargmod.block.QuartzumPrismarineFenceBlock;
import net.mcreator.minecraftalphaargmod.block.QuartzumPrismarineBlock;
import net.mcreator.minecraftalphaargmod.block.QuantumBlockBlock;
import net.mcreator.minecraftalphaargmod.block.QRSTCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.QMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.PyriteOreBlock;
import net.mcreator.minecraftalphaargmod.block.PyriteOre1Block;
import net.mcreator.minecraftalphaargmod.block.PyriteBlockBlock;
import net.mcreator.minecraftalphaargmod.block.PurpurbricksstairsBlock;
import net.mcreator.minecraftalphaargmod.block.PurpurBricksBlock;
import net.mcreator.minecraftalphaargmod.block.PurplePillarBlock;
import net.mcreator.minecraftalphaargmod.block.PurpleLampBlock;
import net.mcreator.minecraftalphaargmod.block.PurpleAternoshroomBlock;
import net.mcreator.minecraftalphaargmod.block.PurgAbyssServerBlockONBlock;
import net.mcreator.minecraftalphaargmod.block.PurgAbyssServerBlockON2dBlock;
import net.mcreator.minecraftalphaargmod.block.PurgAbyssServerBlockOFFBlock;
import net.mcreator.minecraftalphaargmod.block.PurgAbyssServerBlockOFF2dBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodTrapdoorBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodStairsBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodSlabBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodPressurePlateBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodFenceGateBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodFenceBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodDoorBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodButtonBlock;
import net.mcreator.minecraftalphaargmod.block.PurePaperwoodBlock;
import net.mcreator.minecraftalphaargmod.block.Proj132FloorBlock;
import net.mcreator.minecraftalphaargmod.block.PortalRestrictedBlock;
import net.mcreator.minecraftalphaargmod.block.PortalEnabledBlock;
import net.mcreator.minecraftalphaargmod.block.PortalDisabledBlock;
import net.mcreator.minecraftalphaargmod.block.PolishedToughStairsBlock;
import net.mcreator.minecraftalphaargmod.block.PolishedToughSlabBlock;
import net.mcreator.minecraftalphaargmod.block.PolishedToughFenceBlock;
import net.mcreator.minecraftalphaargmod.block.PolishedToughFence1Block;
import net.mcreator.minecraftalphaargmod.block.PolishedLimboCloudBlock;
import net.mcreator.minecraftalphaargmod.block.PolishedBricksBlock;
import net.mcreator.minecraftalphaargmod.block.PoisonerBlock;
import net.mcreator.minecraftalphaargmod.block.PipeBlock;
import net.mcreator.minecraftalphaargmod.block.PinkLampBlock;
import net.mcreator.minecraftalphaargmod.block.PinkAternoshroomBlock;
import net.mcreator.minecraftalphaargmod.block.PillargBlock;
import net.mcreator.minecraftalphaargmod.block.PillarBlock;
import net.mcreator.minecraftalphaargmod.block.PetrichorBlockBlock;
import net.mcreator.minecraftalphaargmod.block.PerlineBlueBlockBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinStairsBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinLightBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinKeyblockBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinGemBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDbgRedStarBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDbgRedLineBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDbgBlueStarBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDbgBlueLineBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDarkStarBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDarkBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinDBGBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinBlueStarBlock;
import net.mcreator.minecraftalphaargmod.block.PerlinAdminspaceBlock;
import net.mcreator.minecraftalphaargmod.block.PerilBlockBlock;
import net.mcreator.minecraftalphaargmod.block.PearlianBlock;
import net.mcreator.minecraftalphaargmod.block.PavementBlock;
import net.mcreator.minecraftalphaargmod.block.PatternBlockBlock;
import net.mcreator.minecraftalphaargmod.block.PartPlateBlock;
import net.mcreator.minecraftalphaargmod.block.PaperwoodWallBlockBlock;
import net.mcreator.minecraftalphaargmod.block.PaperwoodLogBlock;
import net.mcreator.minecraftalphaargmod.block.PaddedLacunaTileBlock;
import net.mcreator.minecraftalphaargmod.block.PSIMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.PMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.OxidisedStorageBlockBlock;
import net.mcreator.minecraftalphaargmod.block.OtherJukeboxBlock;
import net.mcreator.minecraftalphaargmod.block.OstruteneWoodBlock;
import net.mcreator.minecraftalphaargmod.block.OstruteneWoodAternofestationBlock;
import net.mcreator.minecraftalphaargmod.block.OstruteneWood6sideBlock;
import net.mcreator.minecraftalphaargmod.block.OstruteneSaplingBlock;
import net.mcreator.minecraftalphaargmod.block.OstruteneSapling1Block;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksPressurePlateBlock;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksFenceGateBlock;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksFenceBlock;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksButtonBlock;
import net.mcreator.minecraftalphaargmod.block.OstrutenePlanksBlock;
import net.mcreator.minecraftalphaargmod.block.OstruteneActivatedWoodAternofestationBlock;
import net.mcreator.minecraftalphaargmod.block.OslabBlock;
import net.mcreator.minecraftalphaargmod.block.OrnamentedWhiteGlassPaneBlock;
import net.mcreator.minecraftalphaargmod.block.OrnamentedWhiteGlassBlock;
import net.mcreator.minecraftalphaargmod.block.OrnamentedRedGlassPaneBlock;
import net.mcreator.minecraftalphaargmod.block.OrnamentedRedGlassBlock;
import net.mcreator.minecraftalphaargmod.block.OrnamentedPurpleGlassPaneBlock;
import net.mcreator.minecraftalphaargmod.block.OrnamentedPurpleGlassBlock;
import net.mcreator.minecraftalphaargmod.block.OriginatorIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.OrganismBlock;
import net.mcreator.minecraftalphaargmod.block.OrengeMojangLogoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.OrangeLampBlock;
import net.mcreator.minecraftalphaargmod.block.Or2Block;
import net.mcreator.minecraftalphaargmod.block.Or1Block;
import net.mcreator.minecraftalphaargmod.block.OperatorSymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.OfficialUserSymbolonSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeWallBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeWall1Block;
import net.mcreator.minecraftalphaargmod.block.OfficeTerminalBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeStairsBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeNumberBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber9Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber8Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber7Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber6Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber5Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber4Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber3Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber2Block;
import net.mcreator.minecraftalphaargmod.block.OfficeNumber1Block;
import net.mcreator.minecraftalphaargmod.block.OfficeLogoBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeLanternBlock;
import net.mcreator.minecraftalphaargmod.block.OfficeBricksBlock;
import net.mcreator.minecraftalphaargmod.block.ObsidianInfusedLilyBlock;
import net.mcreator.minecraftalphaargmod.block.ObsidianForgeBlock;
import net.mcreator.minecraftalphaargmod.block.ObsidianFlameInGlassBlock;
import net.mcreator.minecraftalphaargmod.block.ObsidianBrickBlock;
import net.mcreator.minecraftalphaargmod.block.ObsidianBlock;
import net.mcreator.minecraftalphaargmod.block.OMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.NoteMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.NoteBlockBlock;
import net.mcreator.minecraftalphaargmod.block.NoneBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemWallBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemTileStairsBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemTileSlabBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemTileBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemMiniTilesBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemLargeBricksBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemCloserMiniTilesBlock;
import net.mcreator.minecraftalphaargmod.block.NoiseGemBricksBlock;
import net.mcreator.minecraftalphaargmod.block.NoNameBlockBlock;
import net.mcreator.minecraftalphaargmod.block.NoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.NicknamePlushieBlock;
import net.mcreator.minecraftalphaargmod.block.NexuswallBlock;
import net.mcreator.minecraftalphaargmod.block.NexusTilesBlock;
import net.mcreator.minecraftalphaargmod.block.NexusTestBlock;
import net.mcreator.minecraftalphaargmod.block.NexusOldDataWoodBlock;
import net.mcreator.minecraftalphaargmod.block.NexusOldDataWallBlock;
import net.mcreator.minecraftalphaargmod.block.NexusOldDataBlock;
import net.mcreator.minecraftalphaargmod.block.NexusDisposalSectorBlock;
import net.mcreator.minecraftalphaargmod.block.NexusCautionBlockBlock;
import net.mcreator.minecraftalphaargmod.block.NexusBricksBlock;
import net.mcreator.minecraftalphaargmod.block.NewPyriteOreBlock;
import net.mcreator.minecraftalphaargmod.block.NewMalachiteOreBlock;
import net.mcreator.minecraftalphaargmod.block.NewLaceAgateOreBlock;
import net.mcreator.minecraftalphaargmod.block.NewClinohumiteOreBlock;
import net.mcreator.minecraftalphaargmod.block.NewBismuthOreBlock;
import net.mcreator.minecraftalphaargmod.block.NationalSymbolOfAbyssBlock;
import net.mcreator.minecraftalphaargmod.block.NarratorSymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.NMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.MysteryBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MysteryBlock1Block;
import net.mcreator.minecraftalphaargmod.block.MyconplanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.MyconWorkbenchBlock;
import net.mcreator.minecraftalphaargmod.block.MyconStemBlock;
import net.mcreator.minecraftalphaargmod.block.MyconPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.MyconPlankBlock;
import net.mcreator.minecraftalphaargmod.block.MyconPillarBlock;
import net.mcreator.minecraftalphaargmod.block.MyconDoorBlock;
import net.mcreator.minecraftalphaargmod.block.MyconCapBlock;
import net.mcreator.minecraftalphaargmod.block.MusicPlayerBlock;
import net.mcreator.minecraftalphaargmod.block.MoonBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MoonBlock6Block;
import net.mcreator.minecraftalphaargmod.block.MoonBlock5Block;
import net.mcreator.minecraftalphaargmod.block.MoonBlock4Block;
import net.mcreator.minecraftalphaargmod.block.MoonBlock3Block;
import net.mcreator.minecraftalphaargmod.block.MoonBlock2Block;
import net.mcreator.minecraftalphaargmod.block.MoonBlock1Block;
import net.mcreator.minecraftalphaargmod.block.MonitorBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MonitorBlock;
import net.mcreator.minecraftalphaargmod.block.Monitor24Block;
import net.mcreator.minecraftalphaargmod.block.MojangTileBlock;
import net.mcreator.minecraftalphaargmod.block.MojangLogoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MojangBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MissingDBGBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MirrorsPlateBlock;
import net.mcreator.minecraftalphaargmod.block.MinewatchCameraBlock;
import net.mcreator.minecraftalphaargmod.block.MinewatchCamera1Block;
import net.mcreator.minecraftalphaargmod.block.MinesweeperTriggeredMineBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperQuestionmarkButtonBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperQuestionmarkBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperMineBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperFlagBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperEmptyBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperCrossedMineBlock;
import net.mcreator.minecraftalphaargmod.block.MinesweeperBlockBlock;
import net.mcreator.minecraftalphaargmod.block.Minesweeper8Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper7Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper6Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper5Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper4Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper3Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper2Block;
import net.mcreator.minecraftalphaargmod.block.Minesweeper1Block;
import net.mcreator.minecraftalphaargmod.block.MineWatchTrophyBlock;
import net.mcreator.minecraftalphaargmod.block.Miki110PlushieBlock;
import net.mcreator.minecraftalphaargmod.block.MidgemSquaredFrameBlock;
import net.mcreator.minecraftalphaargmod.block.MidgemRhombdFrameBlock;
import net.mcreator.minecraftalphaargmod.block.MichiganBlock;
import net.mcreator.minecraftalphaargmod.block.MessedUpTileBlock;
import net.mcreator.minecraftalphaargmod.block.Message2Block;
import net.mcreator.minecraftalphaargmod.block.Message1Block;
import net.mcreator.minecraftalphaargmod.block.MeshBlockUPBlock;
import net.mcreator.minecraftalphaargmod.block.MeshBlockDBlock;
import net.mcreator.minecraftalphaargmod.block.MeltedVoidBeingRockBlock;
import net.mcreator.minecraftalphaargmod.block.MedroomLitCrossBlock;
import net.mcreator.minecraftalphaargmod.block.MedroomCrossBlock;
import net.mcreator.minecraftalphaargmod.block.MeCatCubeBlock;
import net.mcreator.minecraftalphaargmod.block.MariooodPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.MarblePillarBlock;
import net.mcreator.minecraftalphaargmod.block.MarbleBlock;
import net.mcreator.minecraftalphaargmod.block.Marble1Block;
import net.mcreator.minecraftalphaargmod.block.MalachiteOreBlock;
import net.mcreator.minecraftalphaargmod.block.MalachiteOre1Block;
import net.mcreator.minecraftalphaargmod.block.MalachiteBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MagentaLampBlock;
import net.mcreator.minecraftalphaargmod.block.MagentaGlassBlock;
import net.mcreator.minecraftalphaargmod.block.MagentaClothPanelBlock;
import net.mcreator.minecraftalphaargmod.block.MachinationConverterBlock;
import net.mcreator.minecraftalphaargmod.block.MWriterymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.MWDBlock;
import net.mcreator.minecraftalphaargmod.block.MNOPCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.MMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.LowWineBlock;
import net.mcreator.minecraftalphaargmod.block.LowWartBlock;
import net.mcreator.minecraftalphaargmod.block.LowRiverbedBlock;
import net.mcreator.minecraftalphaargmod.block.LowRiverStoneBlock;
import net.mcreator.minecraftalphaargmod.block.LowMyconBlock;
import net.mcreator.minecraftalphaargmod.block.LowLiliBlock;
import net.mcreator.minecraftalphaargmod.block.LowFlameInGlassBlock;
import net.mcreator.minecraftalphaargmod.block.LoopPlateBlock;
import net.mcreator.minecraftalphaargmod.block.LivingVoidGrassBlock;
import net.mcreator.minecraftalphaargmod.block.LivingVoidBlockBlock;
import net.mcreator.minecraftalphaargmod.block.LineStopBlock;
import net.mcreator.minecraftalphaargmod.block.LineBlock;
import net.mcreator.minecraftalphaargmod.block.LiminalPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.LimestoneBlock;
import net.mcreator.minecraftalphaargmod.block.LimeLampBlock;
import net.mcreator.minecraftalphaargmod.block.LimbopolishedStairsBlock;
import net.mcreator.minecraftalphaargmod.block.LimbopolishedSlabBlock;
import net.mcreator.minecraftalphaargmod.block.LimbopolishedBlock;
import net.mcreator.minecraftalphaargmod.block.LimbopillarBlock;
import net.mcreator.minecraftalphaargmod.block.LimbolanternBlock;
import net.mcreator.minecraftalphaargmod.block.LimbofloorSlabBlock;
import net.mcreator.minecraftalphaargmod.block.LimbofloorBlock;
import net.mcreator.minecraftalphaargmod.block.LimbodoorlowerBlock;
import net.mcreator.minecraftalphaargmod.block.LimbochiseledBlock;
import net.mcreator.minecraftalphaargmod.block.LimboSquareBlockBlock;
import net.mcreator.minecraftalphaargmod.block.LimboFloorStairsBlock;
import net.mcreator.minecraftalphaargmod.block.LimboCloudBlock;
import net.mcreator.minecraftalphaargmod.block.Lilypad112Block;
import net.mcreator.minecraftalphaargmod.block.Lilypad1123Block;
import net.mcreator.minecraftalphaargmod.block.Lilypad1122Block;
import net.mcreator.minecraftalphaargmod.block.Lilypad1121Block;
import net.mcreator.minecraftalphaargmod.block.LightBlueWallBlock;
import net.mcreator.minecraftalphaargmod.block.LightBlueLampBlock;
import net.mcreator.minecraftalphaargmod.block.LightBlockBlock;
import net.mcreator.minecraftalphaargmod.block.LichenMassBlock;
import net.mcreator.minecraftalphaargmod.block.LichenCobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.LichenBricksBlock;
import net.mcreator.minecraftalphaargmod.block.LichenBlock;
import net.mcreator.minecraftalphaargmod.block.Leaves1Block;
import net.mcreator.minecraftalphaargmod.block.LacunaTileBlock;
import net.mcreator.minecraftalphaargmod.block.LacunaKeypadBlock;
import net.mcreator.minecraftalphaargmod.block.LaceAgateOreBlock;
import net.mcreator.minecraftalphaargmod.block.LaceAgateOre1Block;
import net.mcreator.minecraftalphaargmod.block.LaceAgateBlockBlock;
import net.mcreator.minecraftalphaargmod.block.LRRedstoneBlock;
import net.mcreator.minecraftalphaargmod.block.LRIronBlock;
import net.mcreator.minecraftalphaargmod.block.LRGoldBlock;
import net.mcreator.minecraftalphaargmod.block.LRDiamondBlock;
import net.mcreator.minecraftalphaargmod.block.LRCoalBlock;
import net.mcreator.minecraftalphaargmod.block.LMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.KeySlotterBlock;
import net.mcreator.minecraftalphaargmod.block.Kargosh1pZPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.KMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.JumperBlock;
import net.mcreator.minecraftalphaargmod.block.JljljljljlPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.JarBlock;
import net.mcreator.minecraftalphaargmod.block.James22PlushieBlock;
import net.mcreator.minecraftalphaargmod.block.JMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.ItemchestBlock;
import net.mcreator.minecraftalphaargmod.block.IronSoulerBlock;
import net.mcreator.minecraftalphaargmod.block.IronBrickBlock;
import net.mcreator.minecraftalphaargmod.block.InventorIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.IntelLeaderPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.IntegritieCubeBlock;
import net.mcreator.minecraftalphaargmod.block.InstigatorIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.InfusedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.InfusedCobblestoneFanceBlock;
import net.mcreator.minecraftalphaargmod.block.InfusedCobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.InfusedBricksBlock;
import net.mcreator.minecraftalphaargmod.block.InfusedAfliteOreBlock;
import net.mcreator.minecraftalphaargmod.block.InfinitiesBlock;
import net.mcreator.minecraftalphaargmod.block.InfestedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.InfestedBlatteaOreBlock;
import net.mcreator.minecraftalphaargmod.block.InfestCrystalBlock;
import net.mcreator.minecraftalphaargmod.block.IkenPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.IkenLogBlock;
import net.mcreator.minecraftalphaargmod.block.IkenLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.IkenDoorBlock;
import net.mcreator.minecraftalphaargmod.block.IdkBlock;
import net.mcreator.minecraftalphaargmod.block.IceDoorBlock;
import net.mcreator.minecraftalphaargmod.block.IceBlock;
import net.mcreator.minecraftalphaargmod.block.IMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.IJKLCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.IDKSomethingcoolBlock;
import net.mcreator.minecraftalphaargmod.block.IDKSKBlock;
import net.mcreator.minecraftalphaargmod.block.HydrangeaBlock;
import net.mcreator.minecraftalphaargmod.block.HubWallBlockBlock;
import net.mcreator.minecraftalphaargmod.block.HubWallBlock;
import net.mcreator.minecraftalphaargmod.block.HubTileYellowBlock;
import net.mcreator.minecraftalphaargmod.block.HubTileBlueBlock;
import net.mcreator.minecraftalphaargmod.block.HubTileBlockBlock;
import net.mcreator.minecraftalphaargmod.block.HubTileBlock;
import net.mcreator.minecraftalphaargmod.block.HubStoneTileBlock;
import net.mcreator.minecraftalphaargmod.block.HubSmoothStoneSlabBlock;
import net.mcreator.minecraftalphaargmod.block.HubSlatePillarBlock;
import net.mcreator.minecraftalphaargmod.block.HubSlateBricksBlock;
import net.mcreator.minecraftalphaargmod.block.HubSlateBeaconBlock;
import net.mcreator.minecraftalphaargmod.block.HubPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.HubPillarBlock;
import net.mcreator.minecraftalphaargmod.block.HubMojangBlockBlock;
import net.mcreator.minecraftalphaargmod.block.HubMojangBlock2Block;
import net.mcreator.minecraftalphaargmod.block.HubMojangBlock1Block;
import net.mcreator.minecraftalphaargmod.block.HubHubTileBlock;
import net.mcreator.minecraftalphaargmod.block.HubHighwoodRootsBlock;
import net.mcreator.minecraftalphaargmod.block.HubHighwoodLogBlock;
import net.mcreator.minecraftalphaargmod.block.HubHighwoodLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.HubGlassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.HubGlassBlock;
import net.mcreator.minecraftalphaargmod.block.HubFakeStoneBlock;
import net.mcreator.minecraftalphaargmod.block.HubFakeSandBlock;
import net.mcreator.minecraftalphaargmod.block.HubFakeGrassBlock;
import net.mcreator.minecraftalphaargmod.block.HubFakeDirtBlock;
import net.mcreator.minecraftalphaargmod.block.HubDoorBlock;
import net.mcreator.minecraftalphaargmod.block.HubBricksBlock;
import net.mcreator.minecraftalphaargmod.block.HubAshBlock2Block;
import net.mcreator.minecraftalphaargmod.block.HivemindSymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodplanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodplanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodWorkbenchBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodRootsBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodPillarBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodLogBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.HighwoodDoorBlock;
import net.mcreator.minecraftalphaargmod.block.HiddeniteoreblockBlock;
import net.mcreator.minecraftalphaargmod.block.HiddeniteoreBlock;
import net.mcreator.minecraftalphaargmod.block.HellBulbBlock;
import net.mcreator.minecraftalphaargmod.block.HeaterBlock;
import net.mcreator.minecraftalphaargmod.block.HappyCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.HallwayblockBlock;
import net.mcreator.minecraftalphaargmod.block.Hallwayblock2Block;
import net.mcreator.minecraftalphaargmod.block.HallowedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.HallowedPillarBlock;
import net.mcreator.minecraftalphaargmod.block.HallowedBricksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.HallowedBricksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.HallowedBricksBlock;
import net.mcreator.minecraftalphaargmod.block.HalfSoulPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.HMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.GroundspongeflapBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GridstoneBlock;
import net.mcreator.minecraftalphaargmod.block.GridPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementTileBlock;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementTile5Block;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementTile4Block;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementTile3Block;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementTile2Block;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementTile1Block;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementMonitor1Block;
import net.mcreator.minecraftalphaargmod.block.GrejangBasementBrickBlock;
import net.mcreator.minecraftalphaargmod.block.GreenstoneTorchBlock;
import net.mcreator.minecraftalphaargmod.block.GreenstoneBrickBlock;
import net.mcreator.minecraftalphaargmod.block.GreenscreenblockBlock;
import net.mcreator.minecraftalphaargmod.block.GreenPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.GreenPlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.GreenPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.GreenMojangBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GreenLogBlock;
import net.mcreator.minecraftalphaargmod.block.GreenLog2Block;
import net.mcreator.minecraftalphaargmod.block.GreenLog1Block;
import net.mcreator.minecraftalphaargmod.block.GreenLampBlock;
import net.mcreator.minecraftalphaargmod.block.GreenGrassBlock;
import net.mcreator.minecraftalphaargmod.block.GreenGlassBlock;
import net.mcreator.minecraftalphaargmod.block.GreenDimensionFloorBlock;
import net.mcreator.minecraftalphaargmod.block.GreenClothPanelBlock;
import net.mcreator.minecraftalphaargmod.block.GreenBricksSummerSlabBlock;
import net.mcreator.minecraftalphaargmod.block.GreenBricksSummerBlock;
import net.mcreator.minecraftalphaargmod.block.GreenBricksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.GreenBricks1Block;
import net.mcreator.minecraftalphaargmod.block.GreenBlueCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GrayscaledOakStairsBlock;
import net.mcreator.minecraftalphaargmod.block.GrayscaledOakSlabBlock;
import net.mcreator.minecraftalphaargmod.block.GrayscaledOakPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.GrayRedCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GrayLampBlock;
import net.mcreator.minecraftalphaargmod.block.GravelBlock;
import net.mcreator.minecraftalphaargmod.block.GrateBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GrassPathwayBlock;
import net.mcreator.minecraftalphaargmod.block.GrassLayerBlock;
import net.mcreator.minecraftalphaargmod.block.GrassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GrassBlock1Block;
import net.mcreator.minecraftalphaargmod.block.Grass2Block;
import net.mcreator.minecraftalphaargmod.block.Grass1Block;
import net.mcreator.minecraftalphaargmod.block.GradientedTileBlock;
import net.mcreator.minecraftalphaargmod.block.GradientLeavesPurpleBlock;
import net.mcreator.minecraftalphaargmod.block.GradientLeavesPinkBlock;
import net.mcreator.minecraftalphaargmod.block.GradientLeavesCentralBlock;
import net.mcreator.minecraftalphaargmod.block.GradientLeavesBlueBlock;
import net.mcreator.minecraftalphaargmod.block.GradientLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.GoogogoStairsBlock;
import net.mcreator.minecraftalphaargmod.block.GoogogoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GoldenAppleBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GoldSoulerBlock;
import net.mcreator.minecraftalphaargmod.block.GoldInfusedLilyBlock;
import net.mcreator.minecraftalphaargmod.block.GoldFlameInGlassBlock;
import net.mcreator.minecraftalphaargmod.block.GoldElderBrickBlock;
import net.mcreator.minecraftalphaargmod.block.GoldBrickBlock;
import net.mcreator.minecraftalphaargmod.block.GolFruitSeedBlock;
import net.mcreator.minecraftalphaargmod.block.GnawmonPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.GlowingObsidianBlock;
import net.mcreator.minecraftalphaargmod.block.GlowingMyconCapBlock;
import net.mcreator.minecraftalphaargmod.block.GlowingCaseBlock;
import net.mcreator.minecraftalphaargmod.block.GlitchyBlock;
import net.mcreator.minecraftalphaargmod.block.Glitchedtile4Block;
import net.mcreator.minecraftalphaargmod.block.Glitchedtile3Block;
import net.mcreator.minecraftalphaargmod.block.Glitchedtile2Block;
import net.mcreator.minecraftalphaargmod.block.Glitchedtile1Block;
import net.mcreator.minecraftalphaargmod.block.GlitchedTileBlock;
import net.mcreator.minecraftalphaargmod.block.GlitchedStructurePointBlock;
import net.mcreator.minecraftalphaargmod.block.GlassBricksBlock;
import net.mcreator.minecraftalphaargmod.block.GlassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GlassBlock;
import net.mcreator.minecraftalphaargmod.block.Glass4Block;
import net.mcreator.minecraftalphaargmod.block.Glass3Block;
import net.mcreator.minecraftalphaargmod.block.Glass2Block;
import net.mcreator.minecraftalphaargmod.block.Glass1Block;
import net.mcreator.minecraftalphaargmod.block.GhostBlockBlock;
import net.mcreator.minecraftalphaargmod.block.GMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.GI4MonitorBlock;
import net.mcreator.minecraftalphaargmod.block.FrugidTrunkBlock;
import net.mcreator.minecraftalphaargmod.block.FrigidLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.FreezerBlock;
import net.mcreator.minecraftalphaargmod.block.FracturedMistBlockBlock;
import net.mcreator.minecraftalphaargmod.block.FracturedInfluenceBlockBlock;
import net.mcreator.minecraftalphaargmod.block.FounderIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.FortifiedMagentaGlassBlock;
import net.mcreator.minecraftalphaargmod.block.FortifiedGreenGlassBlock;
import net.mcreator.minecraftalphaargmod.block.FortifiedGlassBlock;
import net.mcreator.minecraftalphaargmod.block.FortifiedBlueGlassBlock;
import net.mcreator.minecraftalphaargmod.block.FortifiedBlackGlassBlock;
import net.mcreator.minecraftalphaargmod.block.ForseersLayerBlockBlock;
import net.mcreator.minecraftalphaargmod.block.FlowerLayerBlock;
import net.mcreator.minecraftalphaargmod.block.FlowerGrassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.FlowdevBlockBlock;
import net.mcreator.minecraftalphaargmod.block.FloorcarpetBlock;
import net.mcreator.minecraftalphaargmod.block.FloorTilesBlock;
import net.mcreator.minecraftalphaargmod.block.FloorPatternBlock;
import net.mcreator.minecraftalphaargmod.block.FloorNoncarpetHardBlock;
import net.mcreator.minecraftalphaargmod.block.FloorCarpetStairsBlock;
import net.mcreator.minecraftalphaargmod.block.FloorCarpetSlabBlock;
import net.mcreator.minecraftalphaargmod.block.FlamewoodPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.FlamewoodPlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.FlamewoodPillarBlock;
import net.mcreator.minecraftalphaargmod.block.FlamelilipadBlock;
import net.mcreator.minecraftalphaargmod.block.FlameInfusedLilyBlock;
import net.mcreator.minecraftalphaargmod.block.FishMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodWorkbenchBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodSaplingBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodDoorFBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodDoorBlock;
import net.mcreator.minecraftalphaargmod.block.FirewoodBlock;
import net.mcreator.minecraftalphaargmod.block.Ff33d5Block;
import net.mcreator.minecraftalphaargmod.block.FernBlock;
import net.mcreator.minecraftalphaargmod.block.FakedirtBlock;
import net.mcreator.minecraftalphaargmod.block.FakeStoneBlock;
import net.mcreator.minecraftalphaargmod.block.FakeSandBlock;
import net.mcreator.minecraftalphaargmod.block.FakeGrassBlock;
import net.mcreator.minecraftalphaargmod.block.FMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.EyeblockBlock;
import net.mcreator.minecraftalphaargmod.block.ExperimentGlassPaneBlock;
import net.mcreator.minecraftalphaargmod.block.ExperimentGlassBlock;
import net.mcreator.minecraftalphaargmod.block.Exec05PlushieBlock;
import net.mcreator.minecraftalphaargmod.block.EtherealSapLogBlock;
import net.mcreator.minecraftalphaargmod.block.EssencefountainBlock;
import net.mcreator.minecraftalphaargmod.block.EssenceTransformerBlock;
import net.mcreator.minecraftalphaargmod.block.EssenceClonerBlock;
import net.mcreator.minecraftalphaargmod.block.EssenceCacheBlock;
import net.mcreator.minecraftalphaargmod.block.ErrorContainmentBlockBlock;
import net.mcreator.minecraftalphaargmod.block.ErrorBlockBlock;
import net.mcreator.minecraftalphaargmod.block.EnvelopmentBlockBlock;
import net.mcreator.minecraftalphaargmod.block.EnvelopedCobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.EncasedLampBlock;
import net.mcreator.minecraftalphaargmod.block.EmptyLogoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.EmptyBookshelfAlphaBlock;
import net.mcreator.minecraftalphaargmod.block.ElderstoneBlock;
import net.mcreator.minecraftalphaargmod.block.EldersPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.ElderSmoothStoneBlock;
import net.mcreator.minecraftalphaargmod.block.ElderPillarBlock;
import net.mcreator.minecraftalphaargmod.block.ElderDecoratedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.ElderBrickBlock;
import net.mcreator.minecraftalphaargmod.block.EMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.EFGHCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DylandominecraftPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.DutytimeSandBlock;
import net.mcreator.minecraftalphaargmod.block.DutytimeNoteBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DutytimeGrassBlock;
import net.mcreator.minecraftalphaargmod.block.DutytimeBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DoubleArrowMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.DottychPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.Door2Block;
import net.mcreator.minecraftalphaargmod.block.Door1Block;
import net.mcreator.minecraftalphaargmod.block.DividedPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.DiscoBallBlock;
import net.mcreator.minecraftalphaargmod.block.DirtBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DirtBlock;
import net.mcreator.minecraftalphaargmod.block.DimwallBlock;
import net.mcreator.minecraftalphaargmod.block.DiminishFlowerBlock;
import net.mcreator.minecraftalphaargmod.block.DimflowBlock;
import net.mcreator.minecraftalphaargmod.block.Dim2Block;
import net.mcreator.minecraftalphaargmod.block.Dim1Block;
import net.mcreator.minecraftalphaargmod.block.DiamondBrickBlock;
import net.mcreator.minecraftalphaargmod.block.DialectPlateBlock;
import net.mcreator.minecraftalphaargmod.block.DeveloperPortalBlock;
import net.mcreator.minecraftalphaargmod.block.DevWallBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DevBlockBlock;
import net.mcreator.minecraftalphaargmod.block.Dev1PlushyBlock;
import net.mcreator.minecraftalphaargmod.block.DenialPlateBlock;
import net.mcreator.minecraftalphaargmod.block.DeltaQuestLogBlock;
import net.mcreator.minecraftalphaargmod.block.DeltaEndStoneBlock;
import net.mcreator.minecraftalphaargmod.block.DeltaEndSkyBlock;
import net.mcreator.minecraftalphaargmod.block.DeltaCommandInterfaceBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DefectedWoodBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DecorativeBlock2Block;
import net.mcreator.minecraftalphaargmod.block.DecorativeBlock1Block;
import net.mcreator.minecraftalphaargmod.block.DecayedStoneBricksBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedSmoothStoneSlabBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedOakStairsBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedOakPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedOakDoorBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedLilacBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedIronDoorBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedGlowstoneBlock;
import net.mcreator.minecraftalphaargmod.block.DecayedBookshelfBlock;
import net.mcreator.minecraftalphaargmod.block.DebugXBlock;
import net.mcreator.minecraftalphaargmod.block.DebugBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DebugBlock1Block;
import net.mcreator.minecraftalphaargmod.block.DebugBlock;
import net.mcreator.minecraftalphaargmod.block.DebugAreaWallBlock;
import net.mcreator.minecraftalphaargmod.block.DebugAreaFloorBlock;
import net.mcreator.minecraftalphaargmod.block.DeadVoidBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DeadRoseBlock;
import net.mcreator.minecraftalphaargmod.block.DataDaisyBlock;
import net.mcreator.minecraftalphaargmod.block.DarkWoodBlock;
import net.mcreator.minecraftalphaargmod.block.DarkSaplingBlock;
import net.mcreator.minecraftalphaargmod.block.DarkPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOfficeBricksBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakTileSwapPatternBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakTileDarkenedBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakTileBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakLogBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakDeskInnerBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakDeskBlock;
import net.mcreator.minecraftalphaargmod.block.DarkOakDesk3Block;
import net.mcreator.minecraftalphaargmod.block.DarkOakDesk2Block;
import net.mcreator.minecraftalphaargmod.block.DarkOakDesk1Block;
import net.mcreator.minecraftalphaargmod.block.DarkLeavesBlockBlock;
import net.mcreator.minecraftalphaargmod.block.DarkLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.DarkGlowstoneBlock;
import net.mcreator.minecraftalphaargmod.block.DarkDoorBlock;
import net.mcreator.minecraftalphaargmod.block.DarkCraftingTableBlock;
import net.mcreator.minecraftalphaargmod.block.DarkBricksBlock;
import net.mcreator.minecraftalphaargmod.block.DarkBlueWallBlock;
import net.mcreator.minecraftalphaargmod.block.DandelionBlock;
import net.mcreator.minecraftalphaargmod.block.DMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.CyberspaceWallBlock;
import net.mcreator.minecraftalphaargmod.block.CyberspaceStandBlock;
import net.mcreator.minecraftalphaargmod.block.CyberspaceEyeBlock;
import net.mcreator.minecraftalphaargmod.block.CyberspaceDataBlock;
import net.mcreator.minecraftalphaargmod.block.CyberspaceBoddyBlock;
import net.mcreator.minecraftalphaargmod.block.CyanLampBlock;
import net.mcreator.minecraftalphaargmod.block.CutMarbleBlock;
import net.mcreator.minecraftalphaargmod.block.CutLacunaTileBlock;
import net.mcreator.minecraftalphaargmod.block.CubePatternonSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.CubeOfHeavenBlock;
import net.mcreator.minecraftalphaargmod.block.CrudePillarBlock;
import net.mcreator.minecraftalphaargmod.block.CresiahSpottedBlock;
import net.mcreator.minecraftalphaargmod.block.CresiahBlock;
import net.mcreator.minecraftalphaargmod.block.CreepersHeartBlock;
import net.mcreator.minecraftalphaargmod.block.CreatorIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CreativeSymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.CrateBlock;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrockBlock;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock9Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock8Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock7Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock6Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock5Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock4Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock3Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock2Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock27Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock26Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock25Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock24Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock23Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock22Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock21Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock20Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock1Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock19Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock18Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock17Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock16Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock15Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock14Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock13Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock12Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock11Block;
import net.mcreator.minecraftalphaargmod.block.CrackedWallBrock10Block;
import net.mcreator.minecraftalphaargmod.block.CorruptedCardReaderBlock;
import net.mcreator.minecraftalphaargmod.block.Corridorsupports1Block;
import net.mcreator.minecraftalphaargmod.block.Corridornetting1Block;
import net.mcreator.minecraftalphaargmod.block.CorridorTracksBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorTiledPipesBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorSupportsBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorSmoothBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorRailingBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorPillarBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorNettingBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorMachineryBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorLightBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorLanternBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorFenceBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorExposedPipesBlock;
import net.mcreator.minecraftalphaargmod.block.CorridorDebugSphereBlock;
import net.mcreator.minecraftalphaargmod.block.ConnectorRhombusBlock;
import net.mcreator.minecraftalphaargmod.block.ConcreteBlock;
import net.mcreator.minecraftalphaargmod.block.CompressedStaticPortalBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CompressedStaticBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CompressedRiftBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CompressedCobbleplateBlock;
import net.mcreator.minecraftalphaargmod.block.CompactedCelestialFlameBlock;
import net.mcreator.minecraftalphaargmod.block.CommunicationBlock6789Block;
import net.mcreator.minecraftalphaargmod.block.CommunicationBlock2345Block;
import net.mcreator.minecraftalphaargmod.block.ColoredTileBlock;
import net.mcreator.minecraftalphaargmod.block.ColoredTile1Block;
import net.mcreator.minecraftalphaargmod.block.CobblestoneStairsBlock;
import net.mcreator.minecraftalphaargmod.block.CobblestoneFanceBlock;
import net.mcreator.minecraftalphaargmod.block.CobblestoneBlock;
import net.mcreator.minecraftalphaargmod.block.CobbledLimestoneBlock;
import net.mcreator.minecraftalphaargmod.block.CoalBrickBlock;
import net.mcreator.minecraftalphaargmod.block.ClothPanelBlock;
import net.mcreator.minecraftalphaargmod.block.ClinohumiteOreBlock;
import net.mcreator.minecraftalphaargmod.block.ClinohumiteOre1Block;
import net.mcreator.minecraftalphaargmod.block.ClinohumiteBlockBlock;
import net.mcreator.minecraftalphaargmod.block.ClimberBlock;
import net.mcreator.minecraftalphaargmod.block.ClaymoresBlock;
import net.mcreator.minecraftalphaargmod.block.ClassicMinecraftTrophyBlock;
import net.mcreator.minecraftalphaargmod.block.ClassicLimboCrownBlock;
import net.mcreator.minecraftalphaargmod.block.CircleMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.CinderBlockCarvedBlock;
import net.mcreator.minecraftalphaargmod.block.CinderBlockBlock;
import net.mcreator.minecraftalphaargmod.block.ChtshtPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.ChiseledTealQuartzBlock;
import net.mcreator.minecraftalphaargmod.block.ChiseledTealMarineQuartzBlock;
import net.mcreator.minecraftalphaargmod.block.ChiseledHallowedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.ChiseledAquaQuartzBlock;
import net.mcreator.minecraftalphaargmod.block.CheckerboardStairsBlock;
import net.mcreator.minecraftalphaargmod.block.CheckerboardBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CheckerboardBlock;
import net.mcreator.minecraftalphaargmod.block.CheatydevportalBlock;
import net.mcreator.minecraftalphaargmod.block.ChatBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CharedPlanksStairsBlock;
import net.mcreator.minecraftalphaargmod.block.CharedPlanksSlabBlock;
import net.mcreator.minecraftalphaargmod.block.CharedPlanksBlock;
import net.mcreator.minecraftalphaargmod.block.CharedLogBlock;
import net.mcreator.minecraftalphaargmod.block.CharedLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.ChamberSustainersBlock;
import net.mcreator.minecraftalphaargmod.block.ChainBlock;
import net.mcreator.minecraftalphaargmod.block.CeilingTileBlock;
import net.mcreator.minecraftalphaargmod.block.CeilingLampBlock;
import net.mcreator.minecraftalphaargmod.block.CatwalkStairsBlock;
import net.mcreator.minecraftalphaargmod.block.CatwalkSlabBlock;
import net.mcreator.minecraftalphaargmod.block.CatCubeBlock;
import net.mcreator.minecraftalphaargmod.block.CarvedSeltarToughBrickBlock;
import net.mcreator.minecraftalphaargmod.block.CarvedSeltarToughBrick3Block;
import net.mcreator.minecraftalphaargmod.block.CarvedSeltarToughBrick2Block;
import net.mcreator.minecraftalphaargmod.block.CarvedSeltarToughBrick1Block;
import net.mcreator.minecraftalphaargmod.block.CarpetedSmoothStoneBlock;
import net.mcreator.minecraftalphaargmod.block.CarpetBlock;
import net.mcreator.minecraftalphaargmod.block.CardReaderBlock;
import net.mcreator.minecraftalphaargmod.block.CapsCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.CameraSymbolOnSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.CMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.CMailboxBlock;
import net.mcreator.minecraftalphaargmod.block.BugnationPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.BrownLampBlock;
import net.mcreator.minecraftalphaargmod.block.BrightnessBlockOffBlock;
import net.mcreator.minecraftalphaargmod.block.BrightnessBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BricksBlock;
import net.mcreator.minecraftalphaargmod.block.BrickWallStairsBlock;
import net.mcreator.minecraftalphaargmod.block.BrickWallSlabBlock;
import net.mcreator.minecraftalphaargmod.block.BrickWallBlock;
import net.mcreator.minecraftalphaargmod.block.BrickTilesBlock;
import net.mcreator.minecraftalphaargmod.block.BrickTiles1Block;
import net.mcreator.minecraftalphaargmod.block.BredasBlock;
import net.mcreator.minecraftalphaargmod.block.Br1Block;
import net.mcreator.minecraftalphaargmod.block.Botom2BlockBlock;
import net.mcreator.minecraftalphaargmod.block.BookshelfAlphaBlock;
import net.mcreator.minecraftalphaargmod.block.BluewireBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueWallBlock;
import net.mcreator.minecraftalphaargmod.block.BlueWall1Block;
import net.mcreator.minecraftalphaargmod.block.BluePSIMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.BlueMojangLogoBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueMojangBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueLampBlock;
import net.mcreator.minecraftalphaargmod.block.BlueKeepersStoneBlock;
import net.mcreator.minecraftalphaargmod.block.BlueKeepersPolishedStoneBlock;
import net.mcreator.minecraftalphaargmod.block.BlueKeepersPillarBlock;
import net.mcreator.minecraftalphaargmod.block.BlueKeepersGlassBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueKeepersGenericBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueKeepersChiseledBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueGrayCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BlueGlassBlock;
import net.mcreator.minecraftalphaargmod.block.BlueClothPanelBlock;
import net.mcreator.minecraftalphaargmod.block.BlueAternoshroomBlock;
import net.mcreator.minecraftalphaargmod.block.BlockredBlock;
import net.mcreator.minecraftalphaargmod.block.BlockpurifiedBlock;
import net.mcreator.minecraftalphaargmod.block.BlackGlassBlock;
import net.mcreator.minecraftalphaargmod.block.BlackFloorBlock;
import net.mcreator.minecraftalphaargmod.block.BlackFloor1Block;
import net.mcreator.minecraftalphaargmod.block.BlackClothPanelBlock;
import net.mcreator.minecraftalphaargmod.block.BismuthOreBlock;
import net.mcreator.minecraftalphaargmod.block.BirchTileSwapPatternBlock;
import net.mcreator.minecraftalphaargmod.block.BirchTileDarkenedBlock;
import net.mcreator.minecraftalphaargmod.block.BirchTileBlock;
import net.mcreator.minecraftalphaargmod.block.BedrockGlassBlock;
import net.mcreator.minecraftalphaargmod.block.BallsOnlineBlockBlock;
import net.mcreator.minecraftalphaargmod.block.BZonePanelBlock;
import net.mcreator.minecraftalphaargmod.block.BMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.AuthorPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.AuthorIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.AuthenticatorBlock;
import net.mcreator.minecraftalphaargmod.block.AtomPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.AternoshroomSoilPurpleBlock;
import net.mcreator.minecraftalphaargmod.block.AternoshroomSoilPinkBlock;
import net.mcreator.minecraftalphaargmod.block.AternoshroomSoilBlueBlock;
import net.mcreator.minecraftalphaargmod.block.AssociationPlateBlock;
import net.mcreator.minecraftalphaargmod.block.AshesBlock;
import net.mcreator.minecraftalphaargmod.block.AshWoodBlock;
import net.mcreator.minecraftalphaargmod.block.AshTorchBlock;
import net.mcreator.minecraftalphaargmod.block.AshLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.AshGrassBlock;
import net.mcreator.minecraftalphaargmod.block.AshGrass1Block;
import net.mcreator.minecraftalphaargmod.block.AshDirtBlock;
import net.mcreator.minecraftalphaargmod.block.AshBricksBlock;
import net.mcreator.minecraftalphaargmod.block.ArrowMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.ArgFansBlock;
import net.mcreator.minecraftalphaargmod.block.ArchitectIconBlockBlock;
import net.mcreator.minecraftalphaargmod.block.AquaTealGlassBlock;
import net.mcreator.minecraftalphaargmod.block.AquaQuartzWallBlock;
import net.mcreator.minecraftalphaargmod.block.AquaQuartzStairsBlock;
import net.mcreator.minecraftalphaargmod.block.AquaQuartzSlabBlock;
import net.mcreator.minecraftalphaargmod.block.AquaQuartzGlassBlock;
import net.mcreator.minecraftalphaargmod.block.AquaQuartzColumnBlock;
import net.mcreator.minecraftalphaargmod.block.AquaQuartzBlock;
import net.mcreator.minecraftalphaargmod.block.AntiFrictionBlockBlock;
import net.mcreator.minecraftalphaargmod.block.AnkhMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.AndrewidotPlushieBlock;
import net.mcreator.minecraftalphaargmod.block.Andrewgaming67PlushieBlock;
import net.mcreator.minecraftalphaargmod.block.AmongUsTNTBlock;
import net.mcreator.minecraftalphaargmod.block.AmongUsLeavesBlock;
import net.mcreator.minecraftalphaargmod.block.AmongUsBookshelfBlock;
import net.mcreator.minecraftalphaargmod.block.AmberLogBlock;
import net.mcreator.minecraftalphaargmod.block.AluminumPlatinumPlatesBlock;
import net.mcreator.minecraftalphaargmod.block.AlternativeDimensionWallBlock;
import net.mcreator.minecraftalphaargmod.block.AltarClassicBlock;
import net.mcreator.minecraftalphaargmod.block.AlphaverLogoBlock;
import net.mcreator.minecraftalphaargmod.block.AfliteOreBlock;
import net.mcreator.minecraftalphaargmod.block.AfliteBlockBlock;
import net.mcreator.minecraftalphaargmod.block.AdmincolumncrossBlock;
import net.mcreator.minecraftalphaargmod.block.AdminTerminalBlock;
import net.mcreator.minecraftalphaargmod.block.AdminTechBlock;
import net.mcreator.minecraftalphaargmod.block.AdminSpaceGlassBlock;
import net.mcreator.minecraftalphaargmod.block.AdminSpaceFloorTileStairsBlock;
import net.mcreator.minecraftalphaargmod.block.AdminSpaceFloorTileSlabBlock;
import net.mcreator.minecraftalphaargmod.block.AdminSpaceFloorTileBlock;
import net.mcreator.minecraftalphaargmod.block.AdminSpaceFloorBlock;
import net.mcreator.minecraftalphaargmod.block.AdminConsoleBlock;
import net.mcreator.minecraftalphaargmod.block.AdminColumnBlock;
import net.mcreator.minecraftalphaargmod.block.AdminChestBlock;
import net.mcreator.minecraftalphaargmod.block.AdminBlockBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveVerticalLineStopBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveToughBlatteaBricksBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveOstruteneWoodBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveOstruteneWood6sideBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveLineStopBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveLineBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveCresiahSpottedBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveCresiahBlock;
import net.mcreator.minecraftalphaargmod.block.ActiveConnectorRhombusBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssSupporterBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssResistenceGlassBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssInBlockBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssFloorStairsLinedBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssFloorStairsActiveLinedBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssFloorSlabLinedBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssFertileSoilBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssFertileSoil2Block;
import net.mcreator.minecraftalphaargmod.block.AbyssFertileSoil1Block;
import net.mcreator.minecraftalphaargmod.block.AbyssEmptyGlassFrameBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssBlackHoleBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssActiveBrickStairsBlock;
import net.mcreator.minecraftalphaargmod.block.AbyssAABCoreBlock;
import net.mcreator.minecraftalphaargmod.block.AbgrundgroundBlock;
import net.mcreator.minecraftalphaargmod.block.AbgrunddarkprismarineBlock;
import net.mcreator.minecraftalphaargmod.block.AbgrundbricksBlock;
import net.mcreator.minecraftalphaargmod.block.AbgrundGroundBrightBlock;
import net.mcreator.minecraftalphaargmod.block.AbgrundDarkPrismarineBrightBlock;
import net.mcreator.minecraftalphaargmod.block.AbgrundBricksBrightBlock;
import net.mcreator.minecraftalphaargmod.block.ARoomSignSeltarBlock;
import net.mcreator.minecraftalphaargmod.block.AMonitorBlock;
import net.mcreator.minecraftalphaargmod.block.ABCDCommunicationBlockBlock;
import net.mcreator.minecraftalphaargmod.TheArgContainerMod;

public class TheArgContainerModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, TheArgContainerMod.MODID);
	public static final RegistryObject<Block> TEA_BUSH = REGISTRY.register("tea_bush", () -> new TeetreeleavesBlock());
	public static final RegistryObject<Block> TEA_WOOD = REGISTRY.register("tea_wood", () -> new TreeteaBlock());
	public static final RegistryObject<Block> TEA_PLANKS = REGISTRY.register("tea_planks", () -> new TeeplancksBlock());
	public static final RegistryObject<Block> TEA_PILLAR = REGISTRY.register("tea_pillar", () -> new IdkBlock());
	public static final RegistryObject<Block> TEEDOOR = REGISTRY.register("teedoor", () -> new TeedoorBlock());
	public static final RegistryObject<Block> FAKEDIRT = REGISTRY.register("fakedirt", () -> new FakedirtBlock());
	public static final RegistryObject<Block> FAKE_GRASS = REGISTRY.register("fake_grass", () -> new FakeGrassBlock());
	public static final RegistryObject<Block> WATER_LILY = REGISTRY.register("water_lily", () -> new FlamelilipadBlock());
	public static final RegistryObject<Block> TEA_WORKBENCH = REGISTRY.register("tea_workbench", () -> new TeecrafterBlock());
	public static final RegistryObject<Block> CELESTIAL_FLAME = REGISTRY.register("celestial_flame", () -> new SkyflameBlock());
	public static final RegistryObject<Block> DIMENSION_WALL = REGISTRY.register("dimension_wall", () -> new DimwallBlock());
	public static final RegistryObject<Block> DIMENSION_FLOOR = REGISTRY.register("dimension_floor", () -> new DimflowBlock());
	public static final RegistryObject<Block> BLUE_DIMENSION_TILE = REGISTRY.register("blue_dimension_tile", () -> new Dim1Block());
	public static final RegistryObject<Block> YELLOW_DIMENSION_TILE = REGISTRY.register("yellow_dimension_tile", () -> new Dim2Block());
	public static final RegistryObject<Block> BISMUTH_BLOCK = REGISTRY.register("bismuth_block", () -> new Or1Block());
	public static final RegistryObject<Block> BISMUTH_PILLAR = REGISTRY.register("bismuth_pillar", () -> new Or2Block());
	public static final RegistryObject<Block> BISMUTH_BRICK = REGISTRY.register("bismuth_brick", () -> new Br1Block());
	public static final RegistryObject<Block> FLAMEWOOD = REGISTRY.register("flamewood", () -> new W1Block());
	public static final RegistryObject<Block> DLAMEWOOD_LEAVES = REGISTRY.register("dlamewood_leaves", () -> new W2Block());
	public static final RegistryObject<Block> FLAMEWOOD_PLANKS = REGISTRY.register("flamewood_planks", () -> new W3Block());
	public static final RegistryObject<Block> TILE = REGISTRY.register("tile", () -> new TileBlock());
	public static final RegistryObject<Block> STONE_TILE = REGISTRY.register("stone_tile", () -> new StoneTileBlock());
	public static final RegistryObject<Block> FRIGID_LEAVES = REGISTRY.register("frigid_leaves", () -> new FrigidLeavesBlock());
	public static final RegistryObject<Block> FRIGID_TRUNK = REGISTRY.register("frigid_trunk", () -> new FrugidTrunkBlock());
	public static final RegistryObject<Block> SALT_BLOCK = REGISTRY.register("salt_block", () -> new SaltBlockBlock());
	public static final RegistryObject<Block> SALT_BRICKS = REGISTRY.register("salt_bricks", () -> new SaltBricksBlock());
	public static final RegistryObject<Block> ALTERNATIVE_DIMENSION_WALL = REGISTRY.register("alternative_dimension_wall", () -> new AlternativeDimensionWallBlock());
	public static final RegistryObject<Block> GRASS_PATHWAY = REGISTRY.register("grass_pathway", () -> new GrassPathwayBlock());
	public static final RegistryObject<Block> LACE_AGATE_BLOCK = REGISTRY.register("lace_agate_block", () -> new LaceAgateBlockBlock());
	public static final RegistryObject<Block> MALACHITE_BLOCK = REGISTRY.register("malachite_block", () -> new MalachiteBlockBlock());
	public static final RegistryObject<Block> PYRITE_BLOCK = REGISTRY.register("pyrite_block", () -> new PyriteBlockBlock());
	public static final RegistryObject<Block> CLINOHUMITE_BLOCK = REGISTRY.register("clinohumite_block", () -> new ClinohumiteBlockBlock());
	public static final RegistryObject<Block> LOW_RIVER_STONE = REGISTRY.register("low_river_stone", () -> new LowRiverStoneBlock());
	public static final RegistryObject<Block> LOW_RIVERBED = REGISTRY.register("low_riverbed", () -> new LowRiverbedBlock());
	public static final RegistryObject<Block> SNOW_BRICK = REGISTRY.register("snow_brick", () -> new SnowBrickBlock());
	public static final RegistryObject<Block> GREENSTONE_BRICK = REGISTRY.register("greenstone_brick", () -> new GreenstoneBrickBlock());
	public static final RegistryObject<Block> COAL_BRICK = REGISTRY.register("coal_brick", () -> new CoalBrickBlock());
	public static final RegistryObject<Block> MYCON_PILLAR = REGISTRY.register("mycon_pillar", () -> new MyconPillarBlock());
	public static final RegistryObject<Block> MYCON_CAP = REGISTRY.register("mycon_cap", () -> new MyconCapBlock());
	public static final RegistryObject<Block> GLOWING_MYCON_CAP = REGISTRY.register("glowing_mycon_cap", () -> new GlowingMyconCapBlock());
	public static final RegistryObject<Block> MYCON_PLANK = REGISTRY.register("mycon_plank", () -> new MyconPlankBlock());
	public static final RegistryObject<Block> MYCON_STEM = REGISTRY.register("mycon_stem", () -> new MyconStemBlock());
	public static final RegistryObject<Block> LOW_MYCON = REGISTRY.register("low_mycon", () -> new LowMyconBlock());
	public static final RegistryObject<Block> MYCON_DOOR = REGISTRY.register("mycon_door", () -> new MyconDoorBlock());
	public static final RegistryObject<Block> FERN = REGISTRY.register("fern", () -> new FernBlock());
	public static final RegistryObject<Block> UNKNOWN_1 = REGISTRY.register("unknown_1", () -> new Unknown1Block());
	public static final RegistryObject<Block> ELDERSTONE = REGISTRY.register("elderstone", () -> new ElderstoneBlock());
	public static final RegistryObject<Block> ELDER_PILLAR = REGISTRY.register("elder_pillar", () -> new ElderPillarBlock());
	public static final RegistryObject<Block> ELDER_BRICK = REGISTRY.register("elder_brick", () -> new ElderBrickBlock());
	public static final RegistryObject<Block> ELDER_DECORATED_STONE = REGISTRY.register("elder_decorated_stone", () -> new ElderDecoratedStoneBlock());
	public static final RegistryObject<Block> GOLD_BRICK = REGISTRY.register("gold_brick", () -> new GoldBrickBlock());
	public static final RegistryObject<Block> DIAMOND_BRICK = REGISTRY.register("diamond_brick", () -> new DiamondBrickBlock());
	public static final RegistryObject<Block> IRON_BRICK = REGISTRY.register("iron_brick", () -> new IronBrickBlock());
	public static final RegistryObject<Block> ELDER_SMOOTH_STONE = REGISTRY.register("elder_smooth_stone", () -> new ElderSmoothStoneBlock());
	public static final RegistryObject<Block> SLATE_BRICKS = REGISTRY.register("slate_bricks", () -> new SlateBricksBlock());
	public static final RegistryObject<Block> LICHEN_BRICKS = REGISTRY.register("lichen_bricks", () -> new LichenBricksBlock());
	public static final RegistryObject<Block> HIGHWOOD_PILLAR = REGISTRY.register("highwood_pillar", () -> new HighwoodPillarBlock());
	public static final RegistryObject<Block> FLAMEWOOD_PILLAR = REGISTRY.register("flamewood_pillar", () -> new FlamewoodPillarBlock());
	public static final RegistryObject<Block> SLATE_BEACON = REGISTRY.register("slate_beacon", () -> new SlateBeaconBlock());
	public static final RegistryObject<Block> SLATE_PILLAR = REGISTRY.register("slate_pillar", () -> new SlatePillarBlock());
	public static final RegistryObject<Block> HEATER = REGISTRY.register("heater", () -> new HeaterBlock());
	public static final RegistryObject<Block> WIREFRAME_BLOCK = REGISTRY.register("wireframe_block", () -> new WireframeBlockBlock());
	public static final RegistryObject<Block> MYCON_WORKBENCH = REGISTRY.register("mycon_workbench", () -> new MyconWorkbenchBlock());
	public static final RegistryObject<Block> FAKE_STONE = REGISTRY.register("fake_stone", () -> new FakeStoneBlock());
	public static final RegistryObject<Block> GREEN_MOJANG_BLOCK = REGISTRY.register("green_mojang_block", () -> new GreenMojangBlockBlock());
	public static final RegistryObject<Block> WHITE_MOJANG_BLOCK = REGISTRY.register("white_mojang_block", () -> new WhiteMojangBlockBlock());
	public static final RegistryObject<Block> BLUE_MOJANG_BLOCK = REGISTRY.register("blue_mojang_block", () -> new BlueMojangBlockBlock());
	public static final RegistryObject<Block> PILLAR = REGISTRY.register("pillar", () -> new PillarBlock());
	public static final RegistryObject<Block> BISMUTH_ORE = REGISTRY.register("bismuth_ore", () -> new BismuthOreBlock());
	public static final RegistryObject<Block> FREEZER = REGISTRY.register("freezer", () -> new FreezerBlock());
	public static final RegistryObject<Block> FIREWOOD_WORKBENCH = REGISTRY.register("firewood_workbench", () -> new FirewoodWorkbenchBlock());
	public static final RegistryObject<Block> HIGHWOOD_WORKBENCH = REGISTRY.register("highwood_workbench", () -> new HighwoodWorkbenchBlock());
	public static final RegistryObject<Block> OBSIDIAN_BRICK = REGISTRY.register("obsidian_brick", () -> new ObsidianBrickBlock());
	public static final RegistryObject<Block> ESSENCE_CACHE = REGISTRY.register("essence_cache", () -> new EssenceCacheBlock());
	public static final RegistryObject<Block> DECORATIVE_BLOCK_1 = REGISTRY.register("decorative_block_1", () -> new DecorativeBlock1Block());
	public static final RegistryObject<Block> DECORATIVE_BLOCK_2 = REGISTRY.register("decorative_block_2", () -> new DecorativeBlock2Block());
	public static final RegistryObject<Block> SKY_FLAME_IN_GLASS = REGISTRY.register("sky_flame_in_glass", () -> new SkyFlameInGlassBlock());
	public static final RegistryObject<Block> LOW_FLAME_IN_GLASS = REGISTRY.register("low_flame_in_glass", () -> new LowFlameInGlassBlock());
	public static final RegistryObject<Block> GOLD_FLAME_IN_GLASS = REGISTRY.register("gold_flame_in_glass", () -> new GoldFlameInGlassBlock());
	public static final RegistryObject<Block> OBSIDIAN_FLAME_IN_GLASS = REGISTRY.register("obsidian_flame_in_glass", () -> new ObsidianFlameInGlassBlock());
	public static final RegistryObject<Block> GOLD_ELDER_BRICK = REGISTRY.register("gold_elder_brick", () -> new GoldElderBrickBlock());
	public static final RegistryObject<Block> LICHEN_MASS = REGISTRY.register("lichen_mass", () -> new LichenMassBlock());
	public static final RegistryObject<Block> LICHEN = REGISTRY.register("lichen", () -> new LichenBlock());
	public static final RegistryObject<Block> HIGHWOOD_LEAVES = REGISTRY.register("highwood_leaves", () -> new HighwoodLeavesBlock());
	public static final RegistryObject<Block> HIGHWOOD_LOG = REGISTRY.register("highwood_log", () -> new HighwoodLogBlock());
	public static final RegistryObject<Block> HIGHWOOD_PLANKS = REGISTRY.register("highwood_planks", () -> new HighwoodPlanksBlock());
	public static final RegistryObject<Block> HIGHWOOD_ROOTS = REGISTRY.register("highwood_roots", () -> new HighwoodRootsBlock());
	public static final RegistryObject<Block> CRUDE_PILLAR = REGISTRY.register("crude_pillar", () -> new CrudePillarBlock());
	public static final RegistryObject<Block> SMOOTH_STONE = REGISTRY.register("smooth_stone", () -> new SmoothStoneBlock());
	public static final RegistryObject<Block> SMOOTH_LIMESTONE = REGISTRY.register("smooth_limestone", () -> new SmoothLimestoneBlock());
	public static final RegistryObject<Block> ESSENCE_TRANSFORMER = REGISTRY.register("essence_transformer", () -> new EssenceTransformerBlock());
	public static final RegistryObject<Block> ESSENCE_CLONER = REGISTRY.register("essence_cloner", () -> new EssenceClonerBlock());
	public static final RegistryObject<Block> GREEN_DIMENSION_FLOOR = REGISTRY.register("green_dimension_floor", () -> new GreenDimensionFloorBlock());
	public static final RegistryObject<Block> LIMESTONE = REGISTRY.register("limestone", () -> new LimestoneBlock());
	public static final RegistryObject<Block> COBBLED_LIMESTONE = REGISTRY.register("cobbled_limestone", () -> new CobbledLimestoneBlock());
	public static final RegistryObject<Block> HIGHWOOD_DOOR = REGISTRY.register("highwood_door", () -> new HighwoodDoorBlock());
	public static final RegistryObject<Block> FAKE_SAND = REGISTRY.register("fake_sand", () -> new FakeSandBlock());
	public static final RegistryObject<Block> ICE_DOOR = REGISTRY.register("ice_door", () -> new IceDoorBlock());
	public static final RegistryObject<Block> FIREWOOD_DOOR = REGISTRY.register("firewood_door", () -> new FirewoodDoorBlock());
	public static final RegistryObject<Block> FORTIFIED_GLASS = REGISTRY.register("fortified_glass", () -> new FortifiedGlassBlock());
	public static final RegistryObject<Block> FORTIFIED_BLUE_GLASS = REGISTRY.register("fortified_blue_glass", () -> new FortifiedBlueGlassBlock());
	public static final RegistryObject<Block> FORTIFIED_GREEN_GLASS = REGISTRY.register("fortified_green_glass", () -> new FortifiedGreenGlassBlock());
	public static final RegistryObject<Block> FORTIFIED_MAGENTA_GLASS = REGISTRY.register("fortified_magenta_glass", () -> new FortifiedMagentaGlassBlock());
	public static final RegistryObject<Block> FORTIFIED_BLACK_GLASS = REGISTRY.register("fortified_black_glass", () -> new FortifiedBlackGlassBlock());
	public static final RegistryObject<Block> LOW_WART = REGISTRY.register("low_wart", () -> new LowWartBlock());
	public static final RegistryObject<Block> LOW_WINE = REGISTRY.register("low_wine", () -> new LowWineBlock());
	public static final RegistryObject<Block> LOW_LILI = REGISTRY.register("low_lili", () -> new LowLiliBlock());
	public static final RegistryObject<Block> FLAME_INFUSED_LILY = REGISTRY.register("flame_infused_lily", () -> new FlameInfusedLilyBlock());
	public static final RegistryObject<Block> GOLD_INFUSED_LILY = REGISTRY.register("gold_infused_lily", () -> new GoldInfusedLilyBlock());
	public static final RegistryObject<Block> OBSIDIAN_INFUSED_LILY = REGISTRY.register("obsidian_infused_lily", () -> new ObsidianInfusedLilyBlock());
	public static final RegistryObject<Block> MALACHITE_ORE = REGISTRY.register("malachite_ore", () -> new MalachiteOreBlock());
	public static final RegistryObject<Block> PYRITE_ORE = REGISTRY.register("pyrite_ore", () -> new PyriteOreBlock());
	public static final RegistryObject<Block> CLINOHUMITE_ORE = REGISTRY.register("clinohumite_ore", () -> new ClinohumiteOreBlock());
	public static final RegistryObject<Block> LACE_AGATE_ORE = REGISTRY.register("lace_agate_ore", () -> new LaceAgateOreBlock());
	public static final RegistryObject<Block> HYDRANGEA = REGISTRY.register("hydrangea", () -> new HydrangeaBlock());
	public static final RegistryObject<Block> ROSE = REGISTRY.register("rose", () -> new RoseBlock());
	public static final RegistryObject<Block> DANDELION = REGISTRY.register("dandelion", () -> new DandelionBlock());
	public static final RegistryObject<Block> MIXED_GRASS_BLOCK = REGISTRY.register("mixed_grass_block", () -> new Grass1Block());
	public static final RegistryObject<Block> YELLOW_GRASS_BLOCK = REGISTRY.register("yellow_grass_block", () -> new Grass2Block());
	public static final RegistryObject<Block> SAFE = REGISTRY.register("safe", () -> new SafeBlock());
	public static final RegistryObject<Block> BRICKS = REGISTRY.register("bricks", () -> new BricksBlock());
	public static final RegistryObject<Block> LICHEN_COBBLESTONE = REGISTRY.register("lichen_cobblestone", () -> new LichenCobblestoneBlock());
	public static final RegistryObject<Block> STONE = REGISTRY.register("stone", () -> new StoneBlock());
	public static final RegistryObject<Block> TARGET = REGISTRY.register("target", () -> new TargetBlock());
	public static final RegistryObject<Block> ASH_GRASS = REGISTRY.register("ash_grass", () -> new AshGrassBlock());
	public static final RegistryObject<Block> ASH_DIRT = REGISTRY.register("ash_dirt", () -> new AshDirtBlock());
	public static final RegistryObject<Block> YELLOW_GRASS = REGISTRY.register("yellow_grass", () -> new YellowGrassBlock());
	public static final RegistryObject<Block> GREEN_GRASS = REGISTRY.register("green_grass", () -> new GreenGrassBlock());
	public static final RegistryObject<Block> MALACHITE_ORE_1 = REGISTRY.register("malachite_ore_1", () -> new MalachiteOre1Block());
	public static final RegistryObject<Block> PYRITE_ORE_1 = REGISTRY.register("pyrite_ore_1", () -> new PyriteOre1Block());
	public static final RegistryObject<Block> CLINOHUMITE_ORE_1 = REGISTRY.register("clinohumite_ore_1", () -> new ClinohumiteOre1Block());
	public static final RegistryObject<Block> LACE_AGATE_ORE_1 = REGISTRY.register("lace_agate_ore_1", () -> new LaceAgateOre1Block());
	public static final RegistryObject<Block> VENDING_MACHINE_HEALTH_TOP = REGISTRY.register("vending_machine_health_top", () -> new VendingMachineHealthTopBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_HEALTH_BOTTOM = REGISTRY.register("vending_machine_health_bottom", () -> new VendingMachineHealthBottomBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_ARRMOR_TOP = REGISTRY.register("vending_machine_arrmor_top", () -> new VendingMachineArrmorTopBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_ARMOR_BOTTOM = REGISTRY.register("vending_machine_armor_bottom", () -> new VendingMachineArmorBottomBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_DASH_TOP = REGISTRY.register("vending_machine_dash_top", () -> new VendingMachineDashTopBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_DASH_BOTTOM = REGISTRY.register("vending_machine_dash_bottom", () -> new VendingMachineDashBottomBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_REVIVE_TOP = REGISTRY.register("vending_machine_revive_top", () -> new VendingMachineReviveTopBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_REVIVE_BOTTOM = REGISTRY.register("vending_machine_revive_bottom", () -> new VendingMachineReviveBottomBlock());
	public static final RegistryObject<Block> WEAPON_UPGRADER = REGISTRY.register("weapon_upgrader", () -> new WeaponUpgraderBlock());
	public static final RegistryObject<Block> STAIR_LADDER = REGISTRY.register("stair_ladder", () -> new StairLadderBlock());
	public static final RegistryObject<Block> TRINITY_PLATE = REGISTRY.register("trinity_plate", () -> new TrinityPlateBlock());
	public static final RegistryObject<Block> LOOP_PLATE = REGISTRY.register("loop_plate", () -> new LoopPlateBlock());
	public static final RegistryObject<Block> SOLAL_PLATE = REGISTRY.register("solal_plate", () -> new SoralPlateBlock());
	public static final RegistryObject<Block> ASSOCIATION_PLATE = REGISTRY.register("association_plate", () -> new AssociationPlateBlock());
	public static final RegistryObject<Block> DENIAL_PLATE = REGISTRY.register("denial_plate", () -> new DenialPlateBlock());
	public static final RegistryObject<Block> DIALECT_PLATE = REGISTRY.register("dialect_plate", () -> new DialectPlateBlock());
	public static final RegistryObject<Block> MIRRORS_PLATE = REGISTRY.register("mirrors_plate", () -> new MirrorsPlateBlock());
	public static final RegistryObject<Block> PART_PLATE = REGISTRY.register("part_plate", () -> new PartPlateBlock());
	public static final RegistryObject<Block> SWITCH_PLATE = REGISTRY.register("switch_plate", () -> new SwitchPlateBlock());
	public static final RegistryObject<Block> SYLLABLES_PLATE = REGISTRY.register("syllables_plate", () -> new SyllablesPlateBlock());
	public static final RegistryObject<Block> ESSENCEFOUNTAIN = REGISTRY.register("essencefountain", () -> new EssencefountainBlock());
	public static final RegistryObject<Block> HUB_DOOR = REGISTRY.register("hub_door", () -> new HubDoorBlock());
	public static final RegistryObject<Block> DIRT = REGISTRY.register("dirt", () -> new DirtBlock());
	public static final RegistryObject<Block> GRASS_BLOCK = REGISTRY.register("grass_block", () -> new GrassBlockBlock());
	public static final RegistryObject<Block> COBBLESTONE = REGISTRY.register("cobblestone", () -> new CobblestoneBlock());
	public static final RegistryObject<Block> GHOST_BLOCK = REGISTRY.register("ghost_block", () -> new GhostBlockBlock());
	public static final RegistryObject<Block> GLOWING_CASE = REGISTRY.register("glowing_case", () -> new GlowingCaseBlock());
	public static final RegistryObject<Block> U_1 = REGISTRY.register("u_1", () -> new U1Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_2 = REGISTRY.register("unused_block_2", () -> new UnusedBlock2Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_3 = REGISTRY.register("unused_block_3", () -> new UnusedBlock3Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_4 = REGISTRY.register("unused_block_4", () -> new UnusedBlock4Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_5 = REGISTRY.register("unused_block_5", () -> new UnusedBlock5Block());
	public static final RegistryObject<Block> NO_NAME_BLOCK = REGISTRY.register("no_name_block", () -> new NoNameBlockBlock());
	public static final RegistryObject<Block> UNUSED_BLOCK_6 = REGISTRY.register("unused_block_6", () -> new UnusedBlock6Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_7 = REGISTRY.register("unused_block_7", () -> new UnusedBlock7Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_8 = REGISTRY.register("unused_block_8", () -> new UnusedBlock8Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_9 = REGISTRY.register("unused_block_9", () -> new UnusedBlock9Block());
	public static final RegistryObject<Block> UNUSED_BLOCK_10 = REGISTRY.register("unused_block_10", () -> new UnusedBlock10Block());
	public static final RegistryObject<Block> BLACK_GLASS = REGISTRY.register("black_glass", () -> new BlackGlassBlock());
	public static final RegistryObject<Block> GREEN_GLASS = REGISTRY.register("green_glass", () -> new GreenGlassBlock());
	public static final RegistryObject<Block> MAGENTA_GLASS = REGISTRY.register("magenta_glass", () -> new MagentaGlassBlock());
	public static final RegistryObject<Block> BLUE_GLASS = REGISTRY.register("blue_glass", () -> new BlueGlassBlock());
	public static final RegistryObject<Block> CLOTH_PANEL = REGISTRY.register("cloth_panel", () -> new ClothPanelBlock());
	public static final RegistryObject<Block> BLACK_CLOTH_PANEL = REGISTRY.register("black_cloth_panel", () -> new BlackClothPanelBlock());
	public static final RegistryObject<Block> GREEN_CLOTH_PANEL = REGISTRY.register("green_cloth_panel", () -> new GreenClothPanelBlock());
	public static final RegistryObject<Block> MAGENTA_CLOTH_PANEL = REGISTRY.register("magenta_cloth_panel", () -> new MagentaClothPanelBlock());
	public static final RegistryObject<Block> BLUE_CLOTH_PANEL = REGISTRY.register("blue_cloth_panel", () -> new BlueClothPanelBlock());
	public static final RegistryObject<Block> DEBUG = REGISTRY.register("debug", () -> new DebugBlock());
	public static final RegistryObject<Block> DEBUG_X = REGISTRY.register("debug_x", () -> new DebugXBlock());
	public static final RegistryObject<Block> OSLAB = REGISTRY.register("oslab", () -> new OslabBlock());
	public static final RegistryObject<Block> UNUSED_BLOCK_11 = REGISTRY.register("unused_block_11", () -> new UnusedBlock11Block());
	public static final RegistryObject<Block> LR_COAL = REGISTRY.register("lr_coal", () -> new LRCoalBlock());
	public static final RegistryObject<Block> LR_IRON = REGISTRY.register("lr_iron", () -> new LRIronBlock());
	public static final RegistryObject<Block> LR_GOLD = REGISTRY.register("lr_gold", () -> new LRGoldBlock());
	public static final RegistryObject<Block> LR_DIAMOND = REGISTRY.register("lr_diamond", () -> new LRDiamondBlock());
	public static final RegistryObject<Block> LR_REDSTONE = REGISTRY.register("lr_redstone", () -> new LRRedstoneBlock());
	public static final RegistryObject<Block> DEV_1_PLUSHY = REGISTRY.register("dev_1_plushy", () -> new Dev1PlushyBlock());
	public static final RegistryObject<Block> BOOKSHELF_ALPHA = REGISTRY.register("bookshelf_alpha", () -> new BookshelfAlphaBlock());
	public static final RegistryObject<Block> EMPTY_BOOKSHELF_ALPHA = REGISTRY.register("empty_bookshelf_alpha", () -> new EmptyBookshelfAlphaBlock());
	public static final RegistryObject<Block> WHITE_GLASS = REGISTRY.register("white_glass", () -> new WhiteGlassBlock());
	public static final RegistryObject<Block> WOODEN_DOOR = REGISTRY.register("wooden_door", () -> new WoodenDoorBlock());
	public static final RegistryObject<Block> SAND = REGISTRY.register("sand", () -> new SandBlock());
	public static final RegistryObject<Block> WOODEN_PLANKS = REGISTRY.register("wooden_planks", () -> new WoodenPlanksBlock());
	public static final RegistryObject<Block> GRAVEL = REGISTRY.register("gravel", () -> new GravelBlock());
	public static final RegistryObject<Block> WOOD = REGISTRY.register("wood", () -> new WoodBlock());
	public static final RegistryObject<Block> LEAVES = REGISTRY.register("leaves", () -> new Leaves1Block());
	public static final RegistryObject<Block> OBSIDIAN = REGISTRY.register("obsidian", () -> new ObsidianBlock());
	public static final RegistryObject<Block> WOODEN_STAIRS = REGISTRY.register("wooden_stairs", () -> new WoodenStairsBlock());
	public static final RegistryObject<Block> COBBLESTONE_STAIRS = REGISTRY.register("cobblestone_stairs", () -> new CobblestoneStairsBlock());
	public static final RegistryObject<Block> ICE = REGISTRY.register("ice", () -> new IceBlock());
	public static final RegistryObject<Block> WORKBENCH = REGISTRY.register("workbench", () -> new WorkbenchBlock());
	public static final RegistryObject<Block> SNOWY_GRASS_BLOCK = REGISTRY.register("snowy_grass_block", () -> new SnowyGrassBlockBlock());
	public static final RegistryObject<Block> GREENSCREENBLOCK = REGISTRY.register("greenscreenblock", () -> new GreenscreenblockBlock());
	public static final RegistryObject<Block> ASH_WOOD = REGISTRY.register("ash_wood", () -> new AshWoodBlock());
	public static final RegistryObject<Block> ASH_LEAVES = REGISTRY.register("ash_leaves", () -> new AshLeavesBlock());
	public static final RegistryObject<Block> ASH_TORCH = REGISTRY.register("ash_torch", () -> new AshTorchBlock());
	public static final RegistryObject<Block> TERMINAL = REGISTRY.register("terminal", () -> new TerminalBlock());
	public static final RegistryObject<Block> NOISE_GEM_TILE = REGISTRY.register("noise_gem_tile", () -> new NoiseGemTileBlock());
	public static final RegistryObject<Block> EXPERIMENT_GLASS = REGISTRY.register("experiment_glass", () -> new ExperimentGlassBlock());
	public static final RegistryObject<Block> ERROR_CONTAINMENT_BLOCK = REGISTRY.register("error_containment_block", () -> new ErrorContainmentBlockBlock());
	public static final RegistryObject<Block> CARD_READER = REGISTRY.register("card_reader", () -> new CardReaderBlock());
	public static final RegistryObject<Block> NOISE_GEM_TILE_STAIRS = REGISTRY.register("noise_gem_tile_stairs", () -> new NoiseGemTileStairsBlock());
	public static final RegistryObject<Block> NOISE_GEM_TILE_SLAB = REGISTRY.register("noise_gem_tile_slab", () -> new NoiseGemTileSlabBlock());
	public static final RegistryObject<Block> BRIGHTNESS_BLOCK = REGISTRY.register("brightness_block", () -> new BrightnessBlockBlock());
	public static final RegistryObject<Block> BRIGHTNESS_BLOCK_OFF = REGISTRY.register("brightness_block_off", () -> new BrightnessBlockOffBlock());
	public static final RegistryObject<Block> FIREWOOD = REGISTRY.register("firewood", () -> new FirewoodBlock());
	public static final RegistryObject<Block> FIREWOOD_LEAVES = REGISTRY.register("firewood_leaves", () -> new FirewoodLeavesBlock());
	public static final RegistryObject<Block> FIREWOOD_PLANKS = REGISTRY.register("firewood_planks", () -> new FirewoodPlanksBlock());
	public static final RegistryObject<Block> COMPACTED_CELESTIAL_FLAME = REGISTRY.register("compacted_celestial_flame", () -> new CompactedCelestialFlameBlock());
	public static final RegistryObject<Block> STONE_BRICKS = REGISTRY.register("stone_bricks", () -> new StoneBricksBlock());
	public static final RegistryObject<Block> INFUSED_BRICKS = REGISTRY.register("infused_bricks", () -> new InfusedBricksBlock());
	public static final RegistryObject<Block> INFUSED_COBBLESTONE = REGISTRY.register("infused_cobblestone", () -> new InfusedCobblestoneBlock());
	public static final RegistryObject<Block> INFUSED_STONE = REGISTRY.register("infused_stone", () -> new InfusedStoneBlock());
	public static final RegistryObject<Block> SMOOTH_STONE_F = REGISTRY.register("smooth_stone_f", () -> new SmoothStoneFBlock());
	public static final RegistryObject<Block> SMOOTH_INFUSED_STONE = REGISTRY.register("smooth_infused_stone", () -> new SmoothInfusedStoneBlock());
	public static final RegistryObject<Block> WIREFRAME = REGISTRY.register("wireframe", () -> new WireframeBlock());
	public static final RegistryObject<Block> COBBLESTONE_FANCE = REGISTRY.register("cobblestone_fance", () -> new CobblestoneFanceBlock());
	public static final RegistryObject<Block> INFUSED_COBBLESTONE_FANCE = REGISTRY.register("infused_cobblestone_fance", () -> new InfusedCobblestoneFanceBlock());
	public static final RegistryObject<Block> STORE_BLOCK_1_F = REGISTRY.register("store_block_1_f", () -> new StoreBlock1FBlock());
	public static final RegistryObject<Block> STORE_BLOCK_2_F = REGISTRY.register("store_block_2_f", () -> new StoreBlock2FBlock());
	public static final RegistryObject<Block> FIREWOOD_DOOR_F = REGISTRY.register("firewood_door_f", () -> new FirewoodDoorFBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_SHOP = REGISTRY.register("vending_machine_shop", () -> new VendingMachineShopBlock());
	public static final RegistryObject<Block> VENDING_MACHINE_SHOP_2 = REGISTRY.register("vending_machine_shop_2", () -> new VendingMachineShop2Block());
	public static final RegistryObject<Block> ALPHAVER_LOGO = REGISTRY.register("alphaver_logo", () -> new AlphaverLogoBlock());
	public static final RegistryObject<Block> MESH_BLOCK_DOWN = REGISTRY.register("mesh_block_down", () -> new MeshBlockDBlock());
	public static final RegistryObject<Block> MESH_BLOCK_UP = REGISTRY.register("mesh_block_up", () -> new MeshBlockUPBlock());
	public static final RegistryObject<Block> ADMIN_COLUMN = REGISTRY.register("admin_column", () -> new AdminColumnBlock());
	public static final RegistryObject<Block> ADMIN_SPACE_FLOOR_TILE = REGISTRY.register("admin_space_floor_tile", () -> new AdminSpaceFloorTileBlock());
	public static final RegistryObject<Block> ADMIN_SPACE_GLASS = REGISTRY.register("admin_space_glass", () -> new AdminSpaceGlassBlock());
	public static final RegistryObject<Block> ADMIN_TECH = REGISTRY.register("admin_tech", () -> new AdminTechBlock());
	public static final RegistryObject<Block> ADMIN_TERMINAL = REGISTRY.register("admin_terminal", () -> new AdminTerminalBlock());
	public static final RegistryObject<Block> KEY_SLOTTER = REGISTRY.register("key_slotter", () -> new KeySlotterBlock());
	public static final RegistryObject<Block> MOJANG_BLOCK = REGISTRY.register("mojang_block", () -> new MojangBlockBlock());
	public static final RegistryObject<Block> PSI_MONITOR = REGISTRY.register("psi_monitor", () -> new PSIMonitorBlock());
	public static final RegistryObject<Block> SERVER_CONTAINERS = REGISTRY.register("server_containers", () -> new ServerContainersBlock());
	public static final RegistryObject<Block> SERVER_COOLING_FAN = REGISTRY.register("server_cooling_fan", () -> new ServerCoolingFanBlock());
	public static final RegistryObject<Block> STAR_MONITOR = REGISTRY.register("star_monitor", () -> new STARMonitorBlock());
	public static final RegistryObject<Block> X_MONITOR = REGISTRY.register("x_monitor", () -> new XMonitorBlock());
	public static final RegistryObject<Block> Y_MONITOR = REGISTRY.register("y_monitor", () -> new YMonitorBlock());
	public static final RegistryObject<Block> MONITOR = REGISTRY.register("monitor", () -> new MonitorBlock());
	public static final RegistryObject<Block> MOON_BLOCK_1 = REGISTRY.register("moon_block_1", () -> new MoonBlock1Block());
	public static final RegistryObject<Block> MOON_BLOCK_2 = REGISTRY.register("moon_block_2", () -> new MoonBlock2Block());
	public static final RegistryObject<Block> MOON_BLOCK_3 = REGISTRY.register("moon_block_3", () -> new MoonBlock3Block());
	public static final RegistryObject<Block> MOON_BLOCK_4 = REGISTRY.register("moon_block_4", () -> new MoonBlock4Block());
	public static final RegistryObject<Block> MOON_BLOCK_5 = REGISTRY.register("moon_block_5", () -> new MoonBlock5Block());
	public static final RegistryObject<Block> MOON_BLOCK_6 = REGISTRY.register("moon_block_6", () -> new MoonBlock6Block());
	public static final RegistryObject<Block> CORRUPTED_CARD_READER = REGISTRY.register("corrupted_card_reader", () -> new CorruptedCardReaderBlock());
	public static final RegistryObject<Block> WALL_1 = REGISTRY.register("wall_1", () -> new Wall1Block());
	public static final RegistryObject<Block> WALL_2 = REGISTRY.register("wall_2", () -> new Wall2Block());
	public static final RegistryObject<Block> WALL_3 = REGISTRY.register("wall_3", () -> new Wall3Block());
	public static final RegistryObject<Block> WALL_4 = REGISTRY.register("wall_4", () -> new Wall4Block());
	public static final RegistryObject<Block> WALL_5 = REGISTRY.register("wall_5", () -> new Wall5Block());
	public static final RegistryObject<Block> MOON_BLOCK = REGISTRY.register("moon_block", () -> new MoonBlockBlock());
	public static final RegistryObject<Block> NOISE_GEM_WALL = REGISTRY.register("noise_gem_wall", () -> new NoiseGemWallBlock());
	public static final RegistryObject<Block> SUN_BLOCK = REGISTRY.register("sun_block", () -> new SunBlockBlock());
	public static final RegistryObject<Block> ADMIN_SPACE_FLOOR = REGISTRY.register("admin_space_floor", () -> new AdminSpaceFloorBlock());
	public static final RegistryObject<Block> CORRIDOR_EXPOSED_PIPES = REGISTRY.register("corridor_exposed_pipes", () -> new CorridorExposedPipesBlock());
	public static final RegistryObject<Block> CORRIDOR_LANTERN = REGISTRY.register("corridor_lantern", () -> new CorridorLanternBlock());
	public static final RegistryObject<Block> CORRIDOR_LIGHT = REGISTRY.register("corridor_light", () -> new CorridorLightBlock());
	public static final RegistryObject<Block> CORRIDOR_MACHINERY = REGISTRY.register("corridor_machinery", () -> new CorridorMachineryBlock());
	public static final RegistryObject<Block> CORRIDOR_NETTING = REGISTRY.register("corridor_netting", () -> new CorridorNettingBlock());
	public static final RegistryObject<Block> CORRIDOR_PILLAR = REGISTRY.register("corridor_pillar", () -> new CorridorPillarBlock());
	public static final RegistryObject<Block> CORRIDOR_SMOOTH = REGISTRY.register("corridor_smooth", () -> new CorridorSmoothBlock());
	public static final RegistryObject<Block> CORRIDOR_RAILING = REGISTRY.register("corridor_railing", () -> new CorridorRailingBlock());
	public static final RegistryObject<Block> CORRIDOR_SUPPORTS = REGISTRY.register("corridor_supports", () -> new CorridorSupportsBlock());
	public static final RegistryObject<Block> CORRIDOR_TILED_PIPES = REGISTRY.register("corridor_tiled_pipes", () -> new CorridorTiledPipesBlock());
	public static final RegistryObject<Block> CORRIDOR_TRACKS = REGISTRY.register("corridor_tracks", () -> new CorridorTracksBlock());
	public static final RegistryObject<Block> DELTA_END_SKY = REGISTRY.register("delta_end_sky", () -> new DeltaEndSkyBlock());
	public static final RegistryObject<Block> DELTA_END_STONE = REGISTRY.register("delta_end_stone", () -> new DeltaEndStoneBlock());
	public static final RegistryObject<Block> EXPERIMENT_GLASS_PANE = REGISTRY.register("experiment_glass_pane", () -> new ExperimentGlassPaneBlock());
	public static final RegistryObject<Block> JAR = REGISTRY.register("jar", () -> new JarBlock());
	public static final RegistryObject<Block> VOID_GEM_ORE = REGISTRY.register("void_gem_ore", () -> new VoidGemOreBlock());
	public static final RegistryObject<Block> CREEPERS_HEART = REGISTRY.register("creepers_heart", () -> new CreepersHeartBlock());
	public static final RegistryObject<Block> LIVING_VOID_BLOCK = REGISTRY.register("living_void_block", () -> new LivingVoidBlockBlock());
	public static final RegistryObject<Block> SHELVE = REGISTRY.register("shelve", () -> new ShelveBlock());
	public static final RegistryObject<Block> MUSIC_PLAYER = REGISTRY.register("music_player", () -> new MusicPlayerBlock());
	public static final RegistryObject<Block> SQUIRMING_ORGANISM = REGISTRY.register("squirming_organism", () -> new SquirmingOrganismBlock());
	public static final RegistryObject<Block> MELTED_VOID_BEING_ROCK = REGISTRY.register("melted_void_being_rock", () -> new MeltedVoidBeingRockBlock());
	public static final RegistryObject<Block> HELL_BULB = REGISTRY.register("hell_bulb", () -> new HellBulbBlock());
	public static final RegistryObject<Block> TBOTV_BRICKS = REGISTRY.register("tbotv_bricks", () -> new TBOTVBricksBlock());
	public static final RegistryObject<Block> ORGANISM = REGISTRY.register("organism", () -> new OrganismBlock());
	public static final RegistryObject<Block> MINESWEEPER_BLOCK = REGISTRY.register("minesweeper_block", () -> new MinesweeperBlockBlock());
	public static final RegistryObject<Block> MINESWEEPER_1 = REGISTRY.register("minesweeper_1", () -> new Minesweeper1Block());
	public static final RegistryObject<Block> MINESWEEPER_2 = REGISTRY.register("minesweeper_2", () -> new Minesweeper2Block());
	public static final RegistryObject<Block> MINESWEEPER_3 = REGISTRY.register("minesweeper_3", () -> new Minesweeper3Block());
	public static final RegistryObject<Block> MINESWEEPER_4 = REGISTRY.register("minesweeper_4", () -> new Minesweeper4Block());
	public static final RegistryObject<Block> MINESWEEPER_5 = REGISTRY.register("minesweeper_5", () -> new Minesweeper5Block());
	public static final RegistryObject<Block> MINESWEEPER_6 = REGISTRY.register("minesweeper_6", () -> new Minesweeper6Block());
	public static final RegistryObject<Block> MINESWEEPER_7 = REGISTRY.register("minesweeper_7", () -> new Minesweeper7Block());
	public static final RegistryObject<Block> MINESWEEPER_8 = REGISTRY.register("minesweeper_8", () -> new Minesweeper8Block());
	public static final RegistryObject<Block> MINESWEEPER_EMPTY = REGISTRY.register("minesweeper_empty", () -> new MinesweeperEmptyBlock());
	public static final RegistryObject<Block> MINESWEEPER_MINE = REGISTRY.register("minesweeper_mine", () -> new MinesweeperMineBlock());
	public static final RegistryObject<Block> MINESWEEPER_TRIGGERED_MINE = REGISTRY.register("minesweeper_triggered_mine", () -> new MinesweeperTriggeredMineBlock());
	public static final RegistryObject<Block> ERROR_BLOCK = REGISTRY.register("error_block", () -> new ErrorBlockBlock());
	public static final RegistryObject<Block> MINEWATCH_CAMERA_2 = REGISTRY.register("minewatch_camera_2", () -> new MinewatchCameraBlock());
	public static final RegistryObject<Block> MINEWATCH_CAMERA_1 = REGISTRY.register("minewatch_camera_1", () -> new MinewatchCamera1Block());
	public static final RegistryObject<Block> MINESWEEPER_FLAG = REGISTRY.register("minesweeper_flag", () -> new MinesweeperFlagBlock());
	public static final RegistryObject<Block> MINESWEEPER_CROSSED_MINE = REGISTRY.register("minesweeper_crossed_mine", () -> new MinesweeperCrossedMineBlock());
	public static final RegistryObject<Block> MINESWEEPER_QUESTIONMARK_BUTTON = REGISTRY.register("minesweeper_questionmark_button", () -> new MinesweeperQuestionmarkButtonBlock());
	public static final RegistryObject<Block> MINESWEEPER_QUESTIONMARK = REGISTRY.register("minesweeper_questionmark", () -> new MinesweeperQuestionmarkBlock());
	public static final RegistryObject<Block> DEBUG_BLOCK = REGISTRY.register("debug_block", () -> new DebugBlockBlock());
	public static final RegistryObject<Block> DEBUG_BLOCK_1 = REGISTRY.register("debug_block_1", () -> new DebugBlock1Block());
	public static final RegistryObject<Block> TILE_1 = REGISTRY.register("tile_1", () -> new Tile1Block());
	public static final RegistryObject<Block> TILE_2 = REGISTRY.register("tile_2", () -> new Tile2Block());
	public static final RegistryObject<Block> TILE_3 = REGISTRY.register("tile_3", () -> new Tile3Block());
	public static final RegistryObject<Block> TILE_4 = REGISTRY.register("tile_4", () -> new Tile4Block());
	public static final RegistryObject<Block> TILE_5 = REGISTRY.register("tile_5", () -> new Tile5Block());
	public static final RegistryObject<Block> TILE_6 = REGISTRY.register("tile_6", () -> new Tile6Block());
	public static final RegistryObject<Block> TILE_7 = REGISTRY.register("tile_7", () -> new Tile7Block());
	public static final RegistryObject<Block> TERREN_BLOCK = REGISTRY.register("terren_block", () -> new TerrenBlockBlock());
	public static final RegistryObject<Block> BUGNATION_PLUSHIE = REGISTRY.register("bugnation_plushie", () -> new BugnationPlushieBlock());
	public static final RegistryObject<Block> STAR_PLUSHIE = REGISTRY.register("star_plushie", () -> new StarPlushieBlock());
	public static final RegistryObject<Block> AUTHOR_PLUSHIE = REGISTRY.register("author_plushie", () -> new AuthorPlushieBlock());
	public static final RegistryObject<Block> ANDREWGAMING67_PLUSHIE = REGISTRY.register("andrewgaming67_plushie", () -> new Andrewgaming67PlushieBlock());
	public static final RegistryObject<Block> VOID_VINE = REGISTRY.register("void_vine", () -> new VoidVineBlock());
	public static final RegistryObject<Block> DYLANDOMINECRAFT_PLUSHIE = REGISTRY.register("dylandominecraft_plushie", () -> new DylandominecraftPlushieBlock());
	public static final RegistryObject<Block> TBOTV_BRICKS_SLAB = REGISTRY.register("tbotv_bricks_slab", () -> new TbotvBricksSlabBlock());
	public static final RegistryObject<Block> RUBY_ORE = REGISTRY.register("ruby_ore", () -> new RubyOreBlock());
	public static final RegistryObject<Block> RUBY_SOULER = REGISTRY.register("ruby_souler", () -> new RubySoulerBlock());
	public static final RegistryObject<Block> IRON_SOULER = REGISTRY.register("iron_souler", () -> new IronSoulerBlock());
	public static final RegistryObject<Block> GOLD_SOULER = REGISTRY.register("gold_souler", () -> new GoldSoulerBlock());
	public static final RegistryObject<Block> PORTAL_DISABLED = REGISTRY.register("portal_disabled", () -> new PortalDisabledBlock());
	public static final RegistryObject<Block> PORTAL_ENABLED = REGISTRY.register("portal_enabled", () -> new PortalEnabledBlock());
	public static final RegistryObject<Block> PORTAL_RESTRICTED = REGISTRY.register("portal_restricted", () -> new PortalRestrictedBlock());
	public static final RegistryObject<Block> AMONG_US_TNT = REGISTRY.register("among_us_tnt", () -> new AmongUsTNTBlock());
	public static final RegistryObject<Block> RUBY_BLOCK = REGISTRY.register("ruby_block", () -> new RubyBlockBlock());
	public static final RegistryObject<Block> QRST_COMMUNICATION_BLOCK = REGISTRY.register("qrst_communication_block", () -> new QRSTCommunicationBlockBlock());
	public static final RegistryObject<Block> ABCD_COMMUNICATION_BLOCK = REGISTRY.register("abcd_communication_block", () -> new ABCDCommunicationBlockBlock());
	public static final RegistryObject<Block> EFGH_COMMUNICATION_BLOCK = REGISTRY.register("efgh_communication_block", () -> new EFGHCommunicationBlockBlock());
	public static final RegistryObject<Block> IJKL_COMMUNICATION_BLOCK = REGISTRY.register("ijkl_communication_block", () -> new IJKLCommunicationBlockBlock());
	public static final RegistryObject<Block> MNOP_COMMUNICATION_BLOCK = REGISTRY.register("mnop_communication_block", () -> new MNOPCommunicationBlockBlock());
	public static final RegistryObject<Block> UVWX_COMMUNICATION_BLOCK = REGISTRY.register("uvwx_communication_block", () -> new UVWXCommunicationBlockBlock());
	public static final RegistryObject<Block> YZ_01_COMMUNICATION_BLOCK = REGISTRY.register("yz_01_communication_block", () -> new YZ01CommunicationBlockBlock());
	public static final RegistryObject<Block> COMMUNICATION_BLOCK_2345 = REGISTRY.register("communication_block_2345", () -> new CommunicationBlock2345Block());
	public static final RegistryObject<Block> COMMUNICATION_BLOCK_6789 = REGISTRY.register("communication_block_6789", () -> new CommunicationBlock6789Block());
	public static final RegistryObject<Block> BLUE_GRAY_COMMUNICATION_BLOCK = REGISTRY.register("blue_gray_communication_block", () -> new BlueGrayCommunicationBlockBlock());
	public static final RegistryObject<Block> GRAY_RED_COMMUNICATION_BLOCK = REGISTRY.register("gray_red_communication_block", () -> new GrayRedCommunicationBlockBlock());
	public static final RegistryObject<Block> CAPS_COMMUNICATION_BLOCK = REGISTRY.register("caps_communication_block", () -> new CapsCommunicationBlockBlock());
	public static final RegistryObject<Block> HAPPY_COMMUNICATION_BLOCK = REGISTRY.register("happy_communication_block", () -> new HappyCommunicationBlockBlock());
	public static final RegistryObject<Block> SAD_COMMUNICATION_BLOCK = REGISTRY.register("sad_communication_block", () -> new SadCommunicationBlockBlock());
	public static final RegistryObject<Block> GREEN_BLUE_COMMUNICATION_BLOCK = REGISTRY.register("green_blue_communication_block", () -> new GreenBlueCommunicationBlockBlock());
	public static final RegistryObject<Block> RED_GREEN_COMMUNICATION_BLOCK = REGISTRY.register("red_green_communication_block", () -> new RedGreenCommunicationBlockBlock());
	public static final RegistryObject<Block> SOUL_PLUSHIE = REGISTRY.register("soul_plushie", () -> new SoulPlushieBlock());
	public static final RegistryObject<Block> HALF_SOUL_PLUSHIE = REGISTRY.register("half_soul_plushie", () -> new HalfSoulPlushieBlock());
	public static final RegistryObject<Block> AMONG_US_BOOKSHELF = REGISTRY.register("among_us_bookshelf", () -> new AmongUsBookshelfBlock());
	public static final RegistryObject<Block> AMONG_US_LEAVES = REGISTRY.register("among_us_leaves", () -> new AmongUsLeavesBlock());
	public static final RegistryObject<Block> SOUL_BOOKSHELF = REGISTRY.register("soul_bookshelf", () -> new SoulBookshelfBlock());
	public static final RegistryObject<Block> SOUL_BRICKS = REGISTRY.register("soul_bricks", () -> new SoulBricksBlock());
	public static final RegistryObject<Block> SOUL_COAL_ORE = REGISTRY.register("soul_coal_ore", () -> new SoulCoalOreBlock());
	public static final RegistryObject<Block> SOUL_COBBLESTONE = REGISTRY.register("soul_cobblestone", () -> new SoulCobblesotneBlock());
	public static final RegistryObject<Block> SOUL_STONE = REGISTRY.register("soul_stone", () -> new SoulStoneBlock());
	public static final RegistryObject<Block> SOUL_DIRT = REGISTRY.register("soul_dirt", () -> new SoulDirtBlock());
	public static final RegistryObject<Block> SOUL_GRASS = REGISTRY.register("soul_grass", () -> new SoulGrassBlock());
	public static final RegistryObject<Block> SOUL_GOLD_BLOCK = REGISTRY.register("soul_gold_block", () -> new SoulGoldBlockBlock());
	public static final RegistryObject<Block> SOUL_GOLD_ORE = REGISTRY.register("soul_gold_ore", () -> new SoulGoldOreBlock());
	public static final RegistryObject<Block> SOUL_IRON_BLOCK = REGISTRY.register("soul_iron_block", () -> new SoulIronBlockBlock());
	public static final RegistryObject<Block> SOUL_IRON_ORE = REGISTRY.register("soul_iron_ore", () -> new SoulIronOreBlock());
	public static final RegistryObject<Block> SOUL_WOOD = REGISTRY.register("soul_wood", () -> new SoulWoodBlock());
	public static final RegistryObject<Block> SOUL_PLANK = REGISTRY.register("soul_plank", () -> new SoulPlankBlock());
	public static final RegistryObject<Block> SOUL_LEAVES = REGISTRY.register("soul_leaves", () -> new SoulLeavesBlock());
	public static final RegistryObject<Block> SOUL_OBSIDIAN = REGISTRY.register("soul_obsidian", () -> new SoulObsidianBlock());
	public static final RegistryObject<Block> SOUL_SAND = REGISTRY.register("soul_sand", () -> new SoulSandBlock());
	public static final RegistryObject<Block> SOUL_TNT = REGISTRY.register("soul_tnt", () -> new SoulTNTBlock());
	public static final RegistryObject<Block> SOUL_GRAVEL = REGISTRY.register("soul_gravel", () -> new SoulGravelBlock());
	public static final RegistryObject<Block> SOUL_SPONGE = REGISTRY.register("soul_sponge", () -> new SoulSpogeBlock());
	public static final RegistryObject<Block> SOUL_MOSSY_COBBLESTONE = REGISTRY.register("soul_mossy_cobblestone", () -> new SoulMossyCobblestoneBlock());
	public static final RegistryObject<Block> DEAD_ROSE = REGISTRY.register("dead_rose", () -> new DeadRoseBlock());
	public static final RegistryObject<Block> SOUL_WORKBENCH = REGISTRY.register("soul_workbench", () -> new SoulWorkbenchBlock());
	public static final RegistryObject<Block> AUTHENTICATOR = REGISTRY.register("authenticator", () -> new AuthenticatorBlock());
	public static final RegistryObject<Block> MOJANG_LOGO_BLOCK = REGISTRY.register("mojang_logo_block", () -> new MojangLogoBlockBlock());
	public static final RegistryObject<Block> EMPTY_LOGO_BLOCK = REGISTRY.register("empty_logo_block", () -> new EmptyLogoBlockBlock());
	public static final RegistryObject<Block> BRICK_WALL = REGISTRY.register("brick_wall", () -> new BrickWallBlock());
	public static final RegistryObject<Block> WINDOW = REGISTRY.register("window", () -> new WindowBlock());
	public static final RegistryObject<Block> FLOOR_TILES = REGISTRY.register("floor_tiles", () -> new FloorTilesBlock());
	public static final RegistryObject<Block> RED_MOJANG_LOGO_BLOCK = REGISTRY.register("red_mojang_logo_block", () -> new RedMojangLogoBlockBlock());
	public static final RegistryObject<Block> PURPLE_PILLAR = REGISTRY.register("purple_pillar", () -> new PurplePillarBlock());
	public static final RegistryObject<Block> RED_PILLAR = REGISTRY.register("red_pillar", () -> new RedPillarBlock());
	public static final RegistryObject<Block> TILE_SLAB = REGISTRY.register("tile_slab", () -> new TileSlabBlock());
	public static final RegistryObject<Block> TILE_STAIRS = REGISTRY.register("tile_stairs", () -> new TileStairsBlock());
	public static final RegistryObject<Block> BRICK_WALL_STAIRS = REGISTRY.register("brick_wall_stairs", () -> new BrickWallStairsBlock());
	public static final RegistryObject<Block> BRICK_WALL_SLAB = REGISTRY.register("brick_wall_slab", () -> new BrickWallSlabBlock());
	public static final RegistryObject<Block> TOWER_TRANSPORTER = REGISTRY.register("tower_transporter", () -> new TowerTransporterBlock());
	public static final RegistryObject<Block> OBSIDIAN_FORGE = REGISTRY.register("obsidian_forge", () -> new ObsidianForgeBlock());
	public static final RegistryObject<Block> AFLITE_ORE = REGISTRY.register("aflite_ore", () -> new AfliteOreBlock());
	public static final RegistryObject<Block> IKEN_LEAVES = REGISTRY.register("iken_leaves", () -> new IkenLeavesBlock());
	public static final RegistryObject<Block> IKEN_LOG = REGISTRY.register("iken_log", () -> new IkenLogBlock());
	public static final RegistryObject<Block> IKEN_PLANKS = REGISTRY.register("iken_planks", () -> new IkenPlanksBlock());
	public static final RegistryObject<Block> INFUSED_AFLITE_ORE = REGISTRY.register("infused_aflite_ore", () -> new InfusedAfliteOreBlock());
	public static final RegistryObject<Block> SOUL_CAGE_EMPTY = REGISTRY.register("soul_cage_empty", () -> new SoulCageEmptyBlock());
	public static final RegistryObject<Block> SOUL_CAGE_FULL = REGISTRY.register("soul_cage_full", () -> new SoulCageFullBlock());
	public static final RegistryObject<Block> NEW_BISMUTH_ORE = REGISTRY.register("new_bismuth_ore", () -> new NewBismuthOreBlock());
	public static final RegistryObject<Block> NEW_PYRITE_ORE = REGISTRY.register("new_pyrite_ore", () -> new NewPyriteOreBlock());
	public static final RegistryObject<Block> NEW_CLINOHUMITE_ORE = REGISTRY.register("new_clinohumite_ore", () -> new NewClinohumiteOreBlock());
	public static final RegistryObject<Block> NEW_LACE_AGATE_ORE = REGISTRY.register("new_lace_agate_ore", () -> new NewLaceAgateOreBlock());
	public static final RegistryObject<Block> NEW_MALACHITE_ORE = REGISTRY.register("new_malachite_ore", () -> new NewMalachiteOreBlock());
	public static final RegistryObject<Block> TBOTV_TROPHY = REGISTRY.register("tbotv_trophy", () -> new TbotvTrophyBlock());
	public static final RegistryObject<Block> CLASSIC_MINECRAFT_TROPHY = REGISTRY.register("classic_minecraft_trophy", () -> new ClassicMinecraftTrophyBlock());
	public static final RegistryObject<Block> MWD = REGISTRY.register("mwd", () -> new MWDBlock());
	public static final RegistryObject<Block> MINE_WATCH_TROPHY = REGISTRY.register("mine_watch_trophy", () -> new MineWatchTrophyBlock());
	public static final RegistryObject<Block> UNKNOWN = REGISTRY.register("unknown", () -> new UnknownBlock());
	public static final RegistryObject<Block> UNKNOWN_2 = REGISTRY.register("unknown_2", () -> new Unknown2Block());
	public static final RegistryObject<Block> UNKNOWN_3 = REGISTRY.register("unknown_3", () -> new Unknown3Block());
	public static final RegistryObject<Block> UNKNOWN_4 = REGISTRY.register("unknown_4", () -> new Unknown4Block());
	public static final RegistryObject<Block> UNKNOWN_5 = REGISTRY.register("unknown_5", () -> new Unknown5Block());
	public static final RegistryObject<Block> UNKNOWN_6 = REGISTRY.register("unknown_6", () -> new Unknown6Block());
	public static final RegistryObject<Block> UNKNOWN_7 = REGISTRY.register("unknown_7", () -> new Unknown7Block());
	public static final RegistryObject<Block> UNKNOWN_8 = REGISTRY.register("unknown_8", () -> new Unknown8Block());
	public static final RegistryObject<Block> UNKNOWN_9 = REGISTRY.register("unknown_9", () -> new Unknown9Block());
	public static final RegistryObject<Block> UNKNOWN_10 = REGISTRY.register("unknown_10", () -> new Unknown10Block());
	public static final RegistryObject<Block> UNKNOWN_11 = REGISTRY.register("unknown_11", () -> new Unknown11Block());
	public static final RegistryObject<Block> UNKNOWN_12 = REGISTRY.register("unknown_12", () -> new Unknown12Block());
	public static final RegistryObject<Block> UNKNOWN_13 = REGISTRY.register("unknown_13", () -> new Unknown13Block());
	public static final RegistryObject<Block> UNKNOWN_14 = REGISTRY.register("unknown_14", () -> new Unknown14Block());
	public static final RegistryObject<Block> UNKNOWN_15 = REGISTRY.register("unknown_15", () -> new Unknown15Block());
	public static final RegistryObject<Block> PILLARG = REGISTRY.register("pillarg", () -> new PillargBlock());
	public static final RegistryObject<Block> WALLG = REGISTRY.register("wallg", () -> new WallgBlock());
	public static final RegistryObject<Block> WALLGP = REGISTRY.register("wallgp", () -> new WallgpBlock());
	public static final RegistryObject<Block> CEILING_LAMP = REGISTRY.register("ceiling_lamp", () -> new CeilingLampBlock());
	public static final RegistryObject<Block> CEILING_TILE = REGISTRY.register("ceiling_tile", () -> new CeilingTileBlock());
	public static final RegistryObject<Block> FLOORCARPET = REGISTRY.register("floorcarpet", () -> new FloorcarpetBlock());
	public static final RegistryObject<Block> FLOOR_CARPET_STAIRS = REGISTRY.register("floor_carpet_stairs", () -> new FloorCarpetStairsBlock());
	public static final RegistryObject<Block> FLOOR_CARPET_SLAB = REGISTRY.register("floor_carpet_slab", () -> new FloorCarpetSlabBlock());
	public static final RegistryObject<Block> FLOOR_NONCARPET_HARD = REGISTRY.register("floor_noncarpet_hard", () -> new FloorNoncarpetHardBlock());
	public static final RegistryObject<Block> DOOR_1 = REGISTRY.register("door_1", () -> new Door1Block());
	public static final RegistryObject<Block> UNKNOWN_16 = REGISTRY.register("unknown_16", () -> new Unknown16Block());
	public static final RegistryObject<Block> UNKNOWN_17 = REGISTRY.register("unknown_17", () -> new Unknown17Block());
	public static final RegistryObject<Block> UNKNOWN_18 = REGISTRY.register("unknown_18", () -> new Unknown18Block());
	public static final RegistryObject<Block> UNKNOWN_19 = REGISTRY.register("unknown_19", () -> new Unknown19Block());
	public static final RegistryObject<Block> UNKNOWN_20 = REGISTRY.register("unknown_20", () -> new Unknown20Block());
	public static final RegistryObject<Block> UNKNOWN_21 = REGISTRY.register("unknown_21", () -> new Unknown21Block());
	public static final RegistryObject<Block> UNKNOWN_22 = REGISTRY.register("unknown_22", () -> new Unknown22Block());
	public static final RegistryObject<Block> UNKNOWN_23 = REGISTRY.register("unknown_23", () -> new Unknown23Block());
	public static final RegistryObject<Block> DARK_WOOD = REGISTRY.register("dark_wood", () -> new DarkWoodBlock());
	public static final RegistryObject<Block> DARK_PLANKS = REGISTRY.register("dark_planks", () -> new DarkPlanksBlock());
	public static final RegistryObject<Block> DARK_BRICKS = REGISTRY.register("dark_bricks", () -> new DarkBricksBlock());
	public static final RegistryObject<Block> DARK_DOOR = REGISTRY.register("dark_door", () -> new DarkDoorBlock());
	public static final RegistryObject<Block> BLUEWOOD_LEAVES = REGISTRY.register("bluewood_leaves", () -> new DarkLeavesBlock());
	public static final RegistryObject<Block> DARK_SAPLING = REGISTRY.register("dark_sapling", () -> new DarkSaplingBlock());
	public static final RegistryObject<Block> HUB_TILE_BLOCK = REGISTRY.register("hub_tile_block", () -> new HubTileBlockBlock());
	public static final RegistryObject<Block> HUB_WALL_BLOCK = REGISTRY.register("hub_wall_block", () -> new HubWallBlockBlock());
	public static final RegistryObject<Block> HUB_GLASS_BLOCK = REGISTRY.register("hub_glass_block", () -> new HubGlassBlockBlock());
	public static final RegistryObject<Block> GOLDEN_APPLE_BLOCK = REGISTRY.register("golden_apple_block", () -> new GoldenAppleBlockBlock());
	public static final RegistryObject<Block> IDK_SOMETHINGCOOL = REGISTRY.register("idk_somethingcool", () -> new IDKSomethingcoolBlock());
	public static final RegistryObject<Block> UNUSED_1 = REGISTRY.register("unused_1", () -> new Unused1Block());
	public static final RegistryObject<Block> UNUSED_2 = REGISTRY.register("unused_2", () -> new Unused2Block());
	public static final RegistryObject<Block> UNUSED_3 = REGISTRY.register("unused_3", () -> new Unused3Block());
	public static final RegistryObject<Block> UNUSED_4 = REGISTRY.register("unused_4", () -> new Unused4Block());
	public static final RegistryObject<Block> UNUSED_5 = REGISTRY.register("unused_5", () -> new Unused5Block());
	public static final RegistryObject<Block> UNUSED_6 = REGISTRY.register("unused_6", () -> new Unused6Block());
	public static final RegistryObject<Block> HUB_SMOOTH_STONE_SLAB = REGISTRY.register("hub_smooth_stone_slab", () -> new HubSmoothStoneSlabBlock());
	public static final RegistryObject<Block> HUB_PLANKS = REGISTRY.register("hub_planks", () -> new HubPlanksBlock());
	public static final RegistryObject<Block> HUB_BRICKS = REGISTRY.register("hub_bricks", () -> new HubBricksBlock());
	public static final RegistryObject<Block> OTHER_JUKEBOX = REGISTRY.register("other_jukebox", () -> new OtherJukeboxBlock());
	public static final RegistryObject<Block> HUB_MOJANG_BLOCK = REGISTRY.register("hub_mojang_block", () -> new HubMojangBlockBlock());
	public static final RegistryObject<Block> HUB_MOJANG_BLOCK_1 = REGISTRY.register("hub_mojang_block_1", () -> new HubMojangBlock1Block());
	public static final RegistryObject<Block> HUB_MOJANG_BLOCK_2 = REGISTRY.register("hub_mojang_block_2", () -> new HubMojangBlock2Block());
	public static final RegistryObject<Block> HUB_HUB_TILE = REGISTRY.register("hub_hub_tile", () -> new HubHubTileBlock());
	public static final RegistryObject<Block> HUB_PILLAR = REGISTRY.register("hub_pillar", () -> new HubPillarBlock());
	public static final RegistryObject<Block> HUB_GLASS = REGISTRY.register("hub_glass", () -> new HubGlassBlock());
	public static final RegistryObject<Block> HUB_SLATE_BEACON = REGISTRY.register("hub_slate_beacon", () -> new HubSlateBeaconBlock());
	public static final RegistryObject<Block> HUB_SLATE_PILLAR = REGISTRY.register("hub_slate_pillar", () -> new HubSlatePillarBlock());
	public static final RegistryObject<Block> HUB_FAKE_SAND = REGISTRY.register("hub_fake_sand", () -> new HubFakeSandBlock());
	public static final RegistryObject<Block> HUB_FAKE_STONE = REGISTRY.register("hub_fake_stone", () -> new HubFakeStoneBlock());
	public static final RegistryObject<Block> HUB_SLATE_BRICKS = REGISTRY.register("hub_slate_bricks", () -> new HubSlateBricksBlock());
	public static final RegistryObject<Block> HUB_TILE = REGISTRY.register("hub_tile", () -> new HubTileBlock());
	public static final RegistryObject<Block> HUB_STONE_TILE = REGISTRY.register("hub_stone_tile", () -> new HubStoneTileBlock());
	public static final RegistryObject<Block> HUB_WALL = REGISTRY.register("hub_wall", () -> new HubWallBlock());
	public static final RegistryObject<Block> HUB_TILE_YELLOW = REGISTRY.register("hub_tile_yellow", () -> new HubTileYellowBlock());
	public static final RegistryObject<Block> HUB_TILE_BLUE = REGISTRY.register("hub_tile_blue", () -> new HubTileBlueBlock());
	public static final RegistryObject<Block> HUB_HIGHWOOD_LOG = REGISTRY.register("hub_highwood_log", () -> new HubHighwoodLogBlock());
	public static final RegistryObject<Block> HUB_HIGHWOOD_LEAVES = REGISTRY.register("hub_highwood_leaves", () -> new HubHighwoodLeavesBlock());
	public static final RegistryObject<Block> ASH_GRASS_1 = REGISTRY.register("ash_grass_1", () -> new AshGrass1Block());
	public static final RegistryObject<Block> HUB_FAKE_GRASS = REGISTRY.register("hub_fake_grass", () -> new HubFakeGrassBlock());
	public static final RegistryObject<Block> HUB_FAKE_DIRT = REGISTRY.register("hub_fake_dirt", () -> new HubFakeDirtBlock());
	public static final RegistryObject<Block> HUB_ASH_BLOCK_2 = REGISTRY.register("hub_ash_block_2", () -> new HubAshBlock2Block());
	public static final RegistryObject<Block> HUB_HIGHWOOD_ROOTS = REGISTRY.register("hub_highwood_roots", () -> new HubHighwoodRootsBlock());
	public static final RegistryObject<Block> IDKSK = REGISTRY.register("idksk", () -> new IDKSKBlock());
	public static final RegistryObject<Block> BREDAS = REGISTRY.register("bredas", () -> new BredasBlock());
	public static final RegistryObject<Block> ARG_FANS = REGISTRY.register("arg_fans", () -> new ArgFansBlock());
	public static final RegistryObject<Block> CLAYMORES = REGISTRY.register("claymores", () -> new ClaymoresBlock());
	public static final RegistryObject<Block> CUBE_OF_HEAVEN = REGISTRY.register("cube_of_heaven", () -> new CubeOfHeavenBlock());
	public static final RegistryObject<Block> MICHIGAN = REGISTRY.register("michigan", () -> new MichiganBlock());
	public static final RegistryObject<Block> INFINITIES = REGISTRY.register("infinities", () -> new InfinitiesBlock());
	public static final RegistryObject<Block> INTEGRITIE_CUBE = REGISTRY.register("integritie_cube", () -> new IntegritieCubeBlock());
	public static final RegistryObject<Block> CAT_CUBE = REGISTRY.register("cat_cube", () -> new CatCubeBlock());
	public static final RegistryObject<Block> VINNY = REGISTRY.register("vinny", () -> new VinnyBlock());
	public static final RegistryObject<Block> NONE = REGISTRY.register("none", () -> new NoneBlock());
	public static final RegistryObject<Block> ME_CAT_CUBE = REGISTRY.register("me_cat_cube", () -> new MeCatCubeBlock());
	public static final RegistryObject<Block> WE_CAT_CUBE = REGISTRY.register("we_cat_cube", () -> new WeCatCubeBlock());
	public static final RegistryObject<Block> PURPUR_BRICKS = REGISTRY.register("purpur_bricks", () -> new PurpurBricksBlock());
	public static final RegistryObject<Block> REALITYSPACE_ARROW_BLOCK = REGISTRY.register("realityspace_arrow_block", () -> new RealityspaceArrowBlockBlock());
	public static final RegistryObject<Block> REALITYSPACE_MS_PACMAN_BLOCK = REGISTRY.register("realityspace_ms_pacman_block", () -> new RealityspaceMsPacmanBlockBlock());
	public static final RegistryObject<Block> REALITYSPACE_PATTERN_BLOCK = REGISTRY.register("realityspace_pattern_block", () -> new RealityspacePatternBlockBlock());
	public static final RegistryObject<Block> REALITYSPACE_TILE_BLOCK = REGISTRY.register("realityspace_tile_block", () -> new RealityspaceTileBlockBlock());
	public static final RegistryObject<Block> REALITYSPACE_CROSS_BLOCK = REGISTRY.register("realityspace_cross_block", () -> new RealityspaceCrossBlockBlock());
	public static final RegistryObject<Block> HALLOWED_BRICKS = REGISTRY.register("hallowed_bricks", () -> new HallowedBricksBlock());
	public static final RegistryObject<Block> HALLOWED_BRICKS_SLAB = REGISTRY.register("hallowed_bricks_slab", () -> new HallowedBricksSlabBlock());
	public static final RegistryObject<Block> HALLOWED_BRICKS_STAIRS = REGISTRY.register("hallowed_bricks_stairs", () -> new HallowedBricksStairsBlock());
	public static final RegistryObject<Block> HALLOWED_STONE = REGISTRY.register("hallowed_stone", () -> new HallowedStoneBlock());
	public static final RegistryObject<Block> HALLOWED_PILLAR = REGISTRY.register("hallowed_pillar", () -> new HallowedPillarBlock());
	public static final RegistryObject<Block> CHISELED_HALLOWED_STONE = REGISTRY.register("chiseled_hallowed_stone", () -> new ChiseledHallowedStoneBlock());
	public static final RegistryObject<Block> COMPRESSED_RIFT = REGISTRY.register("compressed_rift", () -> new CompressedRiftBlockBlock());
	public static final RegistryObject<Block> COMPRESSED_STATIC = REGISTRY.register("compressed_static", () -> new CompressedStaticBlockBlock());
	public static final RegistryObject<Block> COMPRESSED_STATIC_PORTAL = REGISTRY.register("compressed_static_portal", () -> new CompressedStaticPortalBlockBlock());
	public static final RegistryObject<Block> DEFECTED_WOOD = REGISTRY.register("defected_wood", () -> new DefectedWoodBlockBlock());
	public static final RegistryObject<Block> FRACTURED_INFLUENCE = REGISTRY.register("fractured_influence", () -> new FracturedInfluenceBlockBlock());
	public static final RegistryObject<Block> FRACTURED_MIST = REGISTRY.register("fractured_mist", () -> new FracturedMistBlockBlock());
	public static final RegistryObject<Block> DIMINISH_FLOWER = REGISTRY.register("diminish_flower", () -> new DiminishFlowerBlock());
	public static final RegistryObject<Block> QUANTUM_BLOCK = REGISTRY.register("quantum_block", () -> new QuantumBlockBlock());
	public static final RegistryObject<Block> PERLIN_GEM = REGISTRY.register("perlin_gem", () -> new PerlinGemBlock());
	public static final RegistryObject<Block> PERLIN_LIGHT = REGISTRY.register("perlin_light", () -> new PerlinLightBlock());
	public static final RegistryObject<Block> PERLIN_DBG = REGISTRY.register("perlin_dbg", () -> new PerlinDBGBlock());
	public static final RegistryObject<Block> PERLIN_STAIRS = REGISTRY.register("perlin_stairs", () -> new PerlinStairsBlock());
	public static final RegistryObject<Block> MONITOR_BLOCK = REGISTRY.register("monitor_block", () -> new MonitorBlockBlock());
	public static final RegistryObject<Block> PERLIN_DARK = REGISTRY.register("perlin_dark", () -> new PerlinDarkBlock());
	public static final RegistryObject<Block> PERLIN_DARK_STAR = REGISTRY.register("perlin_dark_star", () -> new PerlinDarkStarBlock());
	public static final RegistryObject<Block> PERLIN_ADMINSPACE = REGISTRY.register("perlin_adminspace", () -> new PerlinAdminspaceBlock());
	public static final RegistryObject<Block> PERLINE_RED_BLOCK = REGISTRY.register("perline_red_block", () -> new PearlianBlock());
	public static final RegistryObject<Block> PERLIN_KEYBLOCK = REGISTRY.register("perlin_keyblock", () -> new PerlinKeyblockBlock());
	public static final RegistryObject<Block> PERLIN_BLUE_STAR = REGISTRY.register("perlin_blue_star", () -> new PerlinBlueStarBlock());
	public static final RegistryObject<Block> PERLINE_BLUE_BLOCK = REGISTRY.register("perline_blue_block", () -> new PerlineBlueBlockBlock());
	public static final RegistryObject<Block> PERLIN_DBG_BLUE_STAR = REGISTRY.register("perlin_dbg_blue_star", () -> new PerlinDbgBlueStarBlock());
	public static final RegistryObject<Block> PERLIN_DBG_BLUE_LINE = REGISTRY.register("perlin_dbg_blue_line", () -> new PerlinDbgBlueLineBlock());
	public static final RegistryObject<Block> PERLIN_DBG_RED_STAR = REGISTRY.register("perlin_dbg_red_star", () -> new PerlinDbgRedStarBlock());
	public static final RegistryObject<Block> PERLIN_DBG_RED_LINE = REGISTRY.register("perlin_dbg_red_line", () -> new PerlinDbgRedLineBlock());
	public static final RegistryObject<Block> DATA_DAISY = REGISTRY.register("data_daisy", () -> new DataDaisyBlock());
	public static final RegistryObject<Block> QUEST_GIVER = REGISTRY.register("quest_giver", () -> new QuestGiverBlock());
	public static final RegistryObject<Block> FF_33D_5 = REGISTRY.register("ff_33d_5", () -> new Ff33d5Block());
	public static final RegistryObject<Block> SLAIZE_00 = REGISTRY.register("slaize_00", () -> new Slaize00Block());
	public static final RegistryObject<Block> SLAIZE_10 = REGISTRY.register("slaize_10", () -> new Slaize10Block());
	public static final RegistryObject<Block> SLAIZE_20 = REGISTRY.register("slaize_20", () -> new Slaize20Block());
	public static final RegistryObject<Block> SLAIZE_30 = REGISTRY.register("slaize_30", () -> new Slaize30Block());
	public static final RegistryObject<Block> SLAIZE_40 = REGISTRY.register("slaize_40", () -> new Slaize40Block());
	public static final RegistryObject<Block> SLAIZE_50 = REGISTRY.register("slaize_50", () -> new Slaize50Block());
	public static final RegistryObject<Block> SLAIZE_60 = REGISTRY.register("slaize_60", () -> new Slaize60Block());
	public static final RegistryObject<Block> SLAIZE_70 = REGISTRY.register("slaize_70", () -> new Slaize70Block());
	public static final RegistryObject<Block> SLAIZE_80 = REGISTRY.register("slaize_80", () -> new Slaize80Block());
	public static final RegistryObject<Block> SLAIZE_90 = REGISTRY.register("slaize_90", () -> new Slaize90Block());
	public static final RegistryObject<Block> SLAIZE_100 = REGISTRY.register("slaize_100", () -> new Slaize100Block());
	public static final RegistryObject<Block> SLAIZE_110 = REGISTRY.register("slaize_110", () -> new Slaize110Block());
	public static final RegistryObject<Block> SLAIZE_120 = REGISTRY.register("slaize_120", () -> new Slaize120Block());
	public static final RegistryObject<Block> SLAIZE_130 = REGISTRY.register("slaize_130", () -> new Slaize130Block());
	public static final RegistryObject<Block> SLAIZE_140 = REGISTRY.register("slaize_140", () -> new Slaize140Block());
	public static final RegistryObject<Block> SLAIZE_150 = REGISTRY.register("slaize_150", () -> new Slaize150Block());
	public static final RegistryObject<Block> SLAIZE_160 = REGISTRY.register("slaize_160", () -> new Slaize160Block());
	public static final RegistryObject<Block> SLAIZE_170 = REGISTRY.register("slaize_170", () -> new Slaize170Block());
	public static final RegistryObject<Block> SLAIZE_180 = REGISTRY.register("slaize_180", () -> new Slaize180Block());
	public static final RegistryObject<Block> SLAIZE_190 = REGISTRY.register("slaize_190", () -> new Slaize190Block());
	public static final RegistryObject<Block> SLAIZE_200 = REGISTRY.register("slaize_200", () -> new Slaize200Block());
	public static final RegistryObject<Block> SLAIZE_210 = REGISTRY.register("slaize_210", () -> new Slaize210Block());
	public static final RegistryObject<Block> SLAIZE_220 = REGISTRY.register("slaize_220", () -> new Slaize220Block());
	public static final RegistryObject<Block> SLAIZE_230 = REGISTRY.register("slaize_230", () -> new Slaize230Block());
	public static final RegistryObject<Block> SLAIZE_240 = REGISTRY.register("slaize_240", () -> new Slaize240Block());
	public static final RegistryObject<Block> SLAIZE_250 = REGISTRY.register("slaize_250", () -> new Slaize250Block());
	public static final RegistryObject<Block> SLAIZE_260 = REGISTRY.register("slaize_260", () -> new Slaize260Block());
	public static final RegistryObject<Block> SLAIZE_270 = REGISTRY.register("slaize_270", () -> new Slaize270Block());
	public static final RegistryObject<Block> SLAIZE_280 = REGISTRY.register("slaize_280", () -> new Slaize280Block());
	public static final RegistryObject<Block> SLAIZE_290 = REGISTRY.register("slaize_290", () -> new Slaize290Block());
	public static final RegistryObject<Block> JAMES_22_PLUSHIE = REGISTRY.register("james_22_plushie", () -> new James22PlushieBlock());
	public static final RegistryObject<Block> DEVELOPER_PORTAL = REGISTRY.register("developer_portal", () -> new DeveloperPortalBlock());
	public static final RegistryObject<Block> CHECKERBOARD = REGISTRY.register("checkerboard", () -> new CheckerboardBlock());
	public static final RegistryObject<Block> CHECKERBOARD_STAIRS = REGISTRY.register("checkerboard_stairs", () -> new CheckerboardStairsBlock());
	public static final RegistryObject<Block> LILYPAD_112 = REGISTRY.register("lilypad_112", () -> new Lilypad112Block());
	public static final RegistryObject<Block> LILYPAD_1121 = REGISTRY.register("lilypad_1121", () -> new Lilypad1121Block());
	public static final RegistryObject<Block> LILYPAD_1122 = REGISTRY.register("lilypad_1122", () -> new Lilypad1122Block());
	public static final RegistryObject<Block> LILYPAD_1123 = REGISTRY.register("lilypad_1123", () -> new Lilypad1123Block());
	public static final RegistryObject<Block> NEXUS_TEST = REGISTRY.register("nexus_test", () -> new NexusTestBlock());
	public static final RegistryObject<Block> BLOCKRED = REGISTRY.register("blockred", () -> new BlockredBlock());
	public static final RegistryObject<Block> BLOCKPURIFIED = REGISTRY.register("blockpurified", () -> new BlockpurifiedBlock());
	public static final RegistryObject<Block> ITEMCHEST = REGISTRY.register("itemchest", () -> new ItemchestBlock());
	public static final RegistryObject<Block> REDLIGHT = REGISTRY.register("redlight", () -> new RedlightBlock());
	public static final RegistryObject<Block> EYEBLOCK = REGISTRY.register("eyeblock", () -> new EyeblockBlock());
	public static final RegistryObject<Block> TV = REGISTRY.register("tv", () -> new TvBlock());
	public static final RegistryObject<Block> CARPET = REGISTRY.register("carpet", () -> new CarpetBlock());
	public static final RegistryObject<Block> GLASS = REGISTRY.register("glass", () -> new GlassBlock());
	public static final RegistryObject<Block> SONYA = REGISTRY.register("sonya", () -> new SonyaBlock());
	public static final RegistryObject<Block> NEXUS_BRICKS = REGISTRY.register("nexus_bricks", () -> new NexusBricksBlock());
	public static final RegistryObject<Block> NEXUS_OLD_DATA = REGISTRY.register("nexus_old_data", () -> new NexusOldDataBlock());
	public static final RegistryObject<Block> NEXUS_TILES = REGISTRY.register("nexus_tiles", () -> new NexusTilesBlock());
	public static final RegistryObject<Block> NEXUSWALL = REGISTRY.register("nexuswall", () -> new NexuswallBlock());
	public static final RegistryObject<Block> NEXUS_DISPOSAL_SECTOR = REGISTRY.register("nexus_disposal_sector", () -> new NexusDisposalSectorBlock());
	public static final RegistryObject<Block> NEXUS_CAUTION_BLOCK = REGISTRY.register("nexus_caution_block", () -> new NexusCautionBlockBlock());
	public static final RegistryObject<Block> NEXUS_OLD_DATA_WOOD = REGISTRY.register("nexus_old_data_wood", () -> new NexusOldDataWoodBlock());
	public static final RegistryObject<Block> NEXUS_OLD_DATA_WALL = REGISTRY.register("nexus_old_data_wall", () -> new NexusOldDataWallBlock());
	public static final RegistryObject<Block> RED_PILLAR_UPDATED_VERSION = REGISTRY.register("red_pillar_updated_version", () -> new RedPillarUpdatedVersionBlock());
	public static final RegistryObject<Block> TBOTV_DOOR = REGISTRY.register("tbotv_door", () -> new TBOTVDoorBlock());
	public static final RegistryObject<Block> WHERE_IS_SKY_BLOCK = REGISTRY.register("where_is_sky_block", () -> new WhereIsSkyBlockBlock());
	public static final RegistryObject<Block> WHITE_PSI_MONITOR = REGISTRY.register("white_psi_monitor", () -> new WhitePSIMonitorBlock());
	public static final RegistryObject<Block> BLUE_PSI_MONITOR = REGISTRY.register("blue_psi_monitor", () -> new BluePSIMonitorBlock());
	public static final RegistryObject<Block> ANKH_MONITOR = REGISTRY.register("ankh_monitor", () -> new AnkhMonitorBlock());
	public static final RegistryObject<Block> UMBRELLA_MONITOR = REGISTRY.register("umbrella_monitor", () -> new UmbrellaMonitorBlock());
	public static final RegistryObject<Block> MONITOR_24 = REGISTRY.register("monitor_24", () -> new Monitor24Block());
	public static final RegistryObject<Block> FISH_MONITOR = REGISTRY.register("fish_monitor", () -> new FishMonitorBlock());
	public static final RegistryObject<Block> WHITE_STAR_MONITOR = REGISTRY.register("white_star_monitor", () -> new WhiteStarMonitorBlock());
	public static final RegistryObject<Block> WHITE_MOJANG_BLOCK_TBOTV = REGISTRY.register("white_mojang_block_tbotv", () -> new WhiteMojangBlockTBOTVBlock());
	public static final RegistryObject<Block> NOTE_MONITOR = REGISTRY.register("note_monitor", () -> new NoteMonitorBlock());
	public static final RegistryObject<Block> CIRCLE_MONITOR = REGISTRY.register("circle_monitor", () -> new CircleMonitorBlock());
	public static final RegistryObject<Block> ARROW_MONITOR = REGISTRY.register("arrow_monitor", () -> new ArrowMonitorBlock());
	public static final RegistryObject<Block> DOUBLE_ARROW_MONITOR = REGISTRY.register("double_arrow_monitor", () -> new DoubleArrowMonitorBlock());
	public static final RegistryObject<Block> QUESTION_MARK_MONITOR = REGISTRY.register("question_mark_monitor", () -> new QuestionMarkMonitorBlock());
	public static final RegistryObject<Block> GI_4_MONITOR = REGISTRY.register("gi_4_monitor", () -> new GI4MonitorBlock());
	public static final RegistryObject<Block> UNKNOWN_SYMBOL_MONITOR = REGISTRY.register("unknown_symbol_monitor", () -> new UnknownSymbolMonitorBlock());
	public static final RegistryObject<Block> UNKNOWNSYMBOL_0MONITOR = REGISTRY.register("unknownsymbol_0monitor", () -> new Unknownsymbol0monitorBlock());
	public static final RegistryObject<Block> UNKNOWNSYMBOL_1MONITOR = REGISTRY.register("unknownsymbol_1monitor", () -> new Unknownsymbol1monitorBlock());
	public static final RegistryObject<Block> UNKNOWNSYMBOL_2MONITOR = REGISTRY.register("unknownsymbol_2monitor", () -> new Unknownsymbol2monitorBlock());
	public static final RegistryObject<Block> UNKNOWNSYMBOL_3MONITOR = REGISTRY.register("unknownsymbol_3monitor", () -> new Unknownsymbol3monitorBlock());
	public static final RegistryObject<Block> WHITE_COLUMN = REGISTRY.register("white_column", () -> new WhiteColumnBlock());
	public static final RegistryObject<Block> LIGHT_BLOCK = REGISTRY.register("light_block", () -> new LightBlockBlock());
	public static final RegistryObject<Block> WALL_BLOCK = REGISTRY.register("wall_block", () -> new WallBlockBlock());
	public static final RegistryObject<Block> WALL_BLOCK_1 = REGISTRY.register("wall_block_1", () -> new WallBlock1Block());
	public static final RegistryObject<Block> BLACK_FLOOR = REGISTRY.register("black_floor", () -> new BlackFloorBlock());
	public static final RegistryObject<Block> BLACK_FLOOR_1 = REGISTRY.register("black_floor_1", () -> new BlackFloor1Block());
	public static final RegistryObject<Block> WALL_BLOCK_2 = REGISTRY.register("wall_block_2", () -> new WallBlock2Block());
	public static final RegistryObject<Block> WALL_BLOCK_3 = REGISTRY.register("wall_block_3", () -> new WallBlock3Block());
	public static final RegistryObject<Block> WALL_BLOCK_4 = REGISTRY.register("wall_block_4", () -> new WallBlock4Block());
	public static final RegistryObject<Block> GOOGOGO_BLOCK = REGISTRY.register("googogo_block", () -> new GoogogoBlockBlock());
	public static final RegistryObject<Block> GOOGOGO_STAIRS = REGISTRY.register("googogo_stairs", () -> new GoogogoStairsBlock());
	public static final RegistryObject<Block> STAR_BLOCK = REGISTRY.register("star_block", () -> new StarBlockBlock());
	public static final RegistryObject<Block> GROUNDSPONGEFLAP_BLOCK = REGISTRY.register("groundspongeflap_block", () -> new GroundspongeflapBlockBlock());
	public static final RegistryObject<Block> BOTOM_2_BLOCK = REGISTRY.register("botom_2_block", () -> new Botom2BlockBlock());
	public static final RegistryObject<Block> VOID_BLOCK = REGISTRY.register("void_block", () -> new VoidBlockBlock());
	public static final RegistryObject<Block> GRATE_BLOCK = REGISTRY.register("grate_block", () -> new GrateBlockBlock());
	public static final RegistryObject<Block> FLOWDEV_BLOCK = REGISTRY.register("flowdev_block", () -> new FlowdevBlockBlock());
	public static final RegistryObject<Block> PERIL_BLOCK = REGISTRY.register("peril_block", () -> new PerilBlockBlock());
	public static final RegistryObject<Block> ASHES = REGISTRY.register("ashes", () -> new AshesBlock());
	public static final RegistryObject<Block> AMBER_LOG = REGISTRY.register("amber_log", () -> new AmberLogBlock());
	public static final RegistryObject<Block> CORRIDOR_DEBUG_SPHERE = REGISTRY.register("corridor_debug_sphere", () -> new CorridorDebugSphereBlock());
	public static final RegistryObject<Block> ETHEREAL_SAP_LOG = REGISTRY.register("ethereal_sap_log", () -> new EtherealSapLogBlock());
	public static final RegistryObject<Block> GRID_PLANKS = REGISTRY.register("grid_planks", () -> new GridPlanksBlock());
	public static final RegistryObject<Block> MACHINATION_CONVERTER = REGISTRY.register("machination_converter", () -> new MachinationConverterBlock());
	public static final RegistryObject<Block> MARBLE = REGISTRY.register("marble", () -> new MarbleBlock());
	public static final RegistryObject<Block> LIVING_VOID_GRASS = REGISTRY.register("living_void_grass", () -> new LivingVoidGrassBlock());
	public static final RegistryObject<Block> WHITE_COLUMN_CROSS = REGISTRY.register("white_column_cross", () -> new WhiteColumnCrossBlock());
	public static final RegistryObject<Block> ADMINCOLUMNCROSS = REGISTRY.register("admincolumncross", () -> new AdmincolumncrossBlock());
	public static final RegistryObject<Block> TORCH = REGISTRY.register("torch", () -> new TorchBlock());
	public static final RegistryObject<Block> GREENSTONE_TORCH = REGISTRY.register("greenstone_torch", () -> new GreenstoneTorchBlock());
	public static final RegistryObject<Block> INTEL_LEADER_PLUSHIE = REGISTRY.register("intel_leader_plushie", () -> new IntelLeaderPlushieBlock());
	public static final RegistryObject<Block> SUBJECT_113_PLUSHIE = REGISTRY.register("subject_113_plushie", () -> new Subject113PlushieBlock());
	public static final RegistryObject<Block> GLITCHY = REGISTRY.register("glitchy", () -> new GlitchyBlock());
	public static final RegistryObject<Block> ATOM_PLUSHIE = REGISTRY.register("atom_plushie", () -> new AtomPlushieBlock());
	public static final RegistryObject<Block> DOTTYCH_PLUSHIE = REGISTRY.register("dottych_plushie", () -> new DottychPlushieBlock());
	public static final RegistryObject<Block> MARIOOOD_PLUSHIE = REGISTRY.register("marioood_plushie", () -> new MariooodPlushieBlock());
	public static final RegistryObject<Block> MIKI_110_PLUSHIE = REGISTRY.register("miki_110_plushie", () -> new Miki110PlushieBlock());
	public static final RegistryObject<Block> ASH_BRICKS = REGISTRY.register("ash_bricks", () -> new AshBricksBlock());
	public static final RegistryObject<Block> CHEATYDEVPORTAL = REGISTRY.register("cheatydevportal", () -> new CheatydevportalBlock());
	public static final RegistryObject<Block> JLJLJLJLJL_PLUSHIE = REGISTRY.register("jljljljljl_plushie", () -> new JljljljljlPlushieBlock());
	public static final RegistryObject<Block> CHTSHT_PLUSHIE = REGISTRY.register("chtsht_plushie", () -> new ChtshtPlushieBlock());
	public static final RegistryObject<Block> GREEN_BRICKS_1 = REGISTRY.register("green_bricks_1", () -> new GreenBricks1Block());
	public static final RegistryObject<Block> NOTE_BLOCK = REGISTRY.register("note_block", () -> new NoteBlockBlock());
	public static final RegistryObject<Block> GREEN_LOG = REGISTRY.register("green_log", () -> new GreenLogBlock());
	public static final RegistryObject<Block> GREEN_LOG_1 = REGISTRY.register("green_log_1", () -> new GreenLog1Block());
	public static final RegistryObject<Block> FLOWER_LAYER = REGISTRY.register("flower_layer", () -> new FlowerLayerBlock());
	public static final RegistryObject<Block> GREEN_BRICKS_SLAB = REGISTRY.register("green_bricks_slab", () -> new GreenBricksSlabBlock());
	public static final RegistryObject<Block> DIRT_BLOCK = REGISTRY.register("dirt_block", () -> new DirtBlockBlock());
	public static final RegistryObject<Block> SPRING_GRASS_BLOCK = REGISTRY.register("spring_grass_block", () -> new SpringGrassBlockBlock());
	public static final RegistryObject<Block> SPRING_STONE = REGISTRY.register("spring_stone", () -> new SpringStoneBlock());
	public static final RegistryObject<Block> SPRING_COBBLESTONE = REGISTRY.register("spring_cobblestone", () -> new SpringCobblestoneBlock());
	public static final RegistryObject<Block> SPRING_BEDROCK = REGISTRY.register("spring_bedrock", () -> new SpringBedrockBlock());
	public static final RegistryObject<Block> SPRING_GRAVEL = REGISTRY.register("spring_gravel", () -> new SpringGravelBlock());
	public static final RegistryObject<Block> SPRING_LEAVES = REGISTRY.register("spring_leaves", () -> new SpringLeavesBlock());
	public static final RegistryObject<Block> SPRING_ICE = REGISTRY.register("spring_ice", () -> new SpringIceBlock());
	public static final RegistryObject<Block> RED_ROSE = REGISTRY.register("red_rose", () -> new RedRoseBlock());
	public static final RegistryObject<Block> TALL_DANDELION = REGISTRY.register("tall_dandelion", () -> new TallDandelionBlock());
	public static final RegistryObject<Block> SUMMER_STONE = REGISTRY.register("summer_stone", () -> new SummerStoneBlock());
	public static final RegistryObject<Block> SUMMER_DIRT_BLOCK = REGISTRY.register("summer_dirt_block", () -> new SummerDirtBlockBlock());
	public static final RegistryObject<Block> SUMMER_GRASS_BLOCK = REGISTRY.register("summer_grass_block", () -> new SummerGrassBlockBlock());
	public static final RegistryObject<Block> GREEN_BRICKS_SUMMER = REGISTRY.register("green_bricks_summer", () -> new GreenBricksSummerBlock());
	public static final RegistryObject<Block> GREEN_BRICKS_SUMMER_SLAB = REGISTRY.register("green_bricks_summer_slab", () -> new GreenBricksSummerSlabBlock());
	public static final RegistryObject<Block> PETRICHOR_BLOCK = REGISTRY.register("petrichor_block", () -> new PetrichorBlockBlock());
	public static final RegistryObject<Block> SUMMER_COBBLESTONE = REGISTRY.register("summer_cobblestone", () -> new SummerCobblestoneBlock());
	public static final RegistryObject<Block> SUMMER_BEDROCK = REGISTRY.register("summer_bedrock", () -> new SummerBedrockBlock());
	public static final RegistryObject<Block> SUMMER_LOG_1 = REGISTRY.register("summer_log_1", () -> new SummerLog1Block());
	public static final RegistryObject<Block> SUMMER_LOG = REGISTRY.register("summer_log", () -> new SummerLogBlock());
	public static final RegistryObject<Block> SPRING_GRASS = REGISTRY.register("spring_grass", () -> new SpringGrassBlock());
	public static final RegistryObject<Block> SUMMER_GRASS = REGISTRY.register("summer_grass", () -> new SummerGrassBlock());
	public static final RegistryObject<Block> SUMMER_SAND = REGISTRY.register("summer_sand", () -> new SummerSandBlock());
	public static final RegistryObject<Block> SUMMER_LEAVES = REGISTRY.register("summer_leaves", () -> new SummerLeavesBlock());
	public static final RegistryObject<Block> UNKNOWN_PLANT = REGISTRY.register("unknown_plant", () -> new UnknownPlantBlock());
	public static final RegistryObject<Block> GRASS_LAYER = REGISTRY.register("grass_layer", () -> new GrassLayerBlock());
	public static final RegistryObject<Block> STONE_GRASS = REGISTRY.register("stone_grass", () -> new StoneGrassBlock());
	public static final RegistryObject<Block> STONE_WOOD_TILE = REGISTRY.register("stone_wood_tile", () -> new StoneWoodTileBlock());
	public static final RegistryObject<Block> STONE_WOOD_LOG = REGISTRY.register("stone_wood_log", () -> new StoneWoodLogBlock());
	public static final RegistryObject<Block> GLASS_BLOCK = REGISTRY.register("glass_block", () -> new GlassBlockBlock());
	public static final RegistryObject<Block> DUTYTIME_GRASS = REGISTRY.register("dutytime_grass", () -> new DutytimeGrassBlock());
	public static final RegistryObject<Block> STONE_WOOD_LOG_1 = REGISTRY.register("stone_wood_log_1", () -> new StoneWoodLog1Block());
	public static final RegistryObject<Block> UNKNOWN_PLANT_1 = REGISTRY.register("unknown_plant_1", () -> new UnknownPlant1Block());
	public static final RegistryObject<Block> DUTYTIME_NOTE_BLOCK = REGISTRY.register("dutytime_note_block", () -> new DutytimeNoteBlockBlock());
	public static final RegistryObject<Block> DUTYTIME_SAND = REGISTRY.register("dutytime_sand", () -> new DutytimeSandBlock());
	public static final RegistryObject<Block> TALL_RED_ROSE = REGISTRY.register("tall_red_rose", () -> new TallRedRoseBlock());
	public static final RegistryObject<Block> DUTYTIME_BLOCK = REGISTRY.register("dutytime_block", () -> new DutytimeBlockBlock());
	public static final RegistryObject<Block> CHAMBER_SUSTAINERS = REGISTRY.register("chamber_sustainers", () -> new ChamberSustainersBlock());
	public static final RegistryObject<Block> WORKPLACE_HALL_BLOCK = REGISTRY.register("workplace_hall_block", () -> new WorkplaceHallBlockBlock());
	public static final RegistryObject<Block> PIPE = REGISTRY.register("pipe", () -> new PipeBlock());
	public static final RegistryObject<Block> HALLWAYBLOCK_2 = REGISTRY.register("hallwayblock_2", () -> new Hallwayblock2Block());
	public static final RegistryObject<Block> WORKPLACE_LAMP = REGISTRY.register("workplace_lamp", () -> new WorkplaceLampBlock());
	public static final RegistryObject<Block> B_ZONE_PANEL = REGISTRY.register("b_zone_panel", () -> new BZonePanelBlock());
	public static final RegistryObject<Block> HALLWAYBLOCK = REGISTRY.register("hallwayblock", () -> new HallwayblockBlock());
	public static final RegistryObject<Block> OXIDISED_STORAGE_BLOCK = REGISTRY.register("oxidised_storage_block", () -> new OxidisedStorageBlockBlock());
	public static final RegistryObject<Block> FORSEERS_LAYER_BLOCK = REGISTRY.register("forseers_layer_block", () -> new ForseersLayerBlockBlock());
	public static final RegistryObject<Block> WALL_PAINTING_BLOCK_1 = REGISTRY.register("wall_painting_block_1", () -> new WallPaintingBlock1Block());
	public static final RegistryObject<Block> WALL_PAINTING_BLOCK_2 = REGISTRY.register("wall_painting_block_2", () -> new WallPaintingBlock2Block());
	public static final RegistryObject<Block> WALL_PAINTING_BLOCK_3 = REGISTRY.register("wall_painting_block_3", () -> new WallPaintingBlock3Block());
	public static final RegistryObject<Block> WALL_PAINTING_BLOCK_4 = REGISTRY.register("wall_painting_block_4", () -> new WallPaintingBlock4Block());
	public static final RegistryObject<Block> PURPURBRICKSSTAIRS = REGISTRY.register("purpurbricksstairs", () -> new PurpurbricksstairsBlock());
	public static final RegistryObject<Block> ELDERS_PLUSHIE = REGISTRY.register("elders_plushie", () -> new EldersPlushieBlock());
	public static final RegistryObject<Block> GNAWMON_PLUSHIE = REGISTRY.register("gnawmon_plushie", () -> new GnawmonPlushieBlock());
	public static final RegistryObject<Block> ANDREWIDOT_PLUSHIE = REGISTRY.register("andrewidot_plushie", () -> new AndrewidotPlushieBlock());
	public static final RegistryObject<Block> IKEN_DOOR = REGISTRY.register("iken_door", () -> new IkenDoorBlock());
	public static final RegistryObject<Block> GLOWING_OBSIDIAN = REGISTRY.register("glowing_obsidian", () -> new GlowingObsidianBlock());
	public static final RegistryObject<Block> AFLITE_BLOCK = REGISTRY.register("aflite_block", () -> new AfliteBlockBlock());
	public static final RegistryObject<Block> FIREWOOD_SAPLING = REGISTRY.register("firewood_sapling", () -> new FirewoodSaplingBlock());
	public static final RegistryObject<Block> FLOWER_GRASS_BLOCK = REGISTRY.register("flower_grass_block", () -> new FlowerGrassBlockBlock());
	public static final RegistryObject<Block> BRICK_TILES = REGISTRY.register("brick_tiles", () -> new BrickTilesBlock());
	public static final RegistryObject<Block> BRICK_TILES_1 = REGISTRY.register("brick_tiles_1", () -> new BrickTiles1Block());
	public static final RegistryObject<Block> CARPETED_SMOOTH_STONE = REGISTRY.register("carpeted_smooth_stone", () -> new CarpetedSmoothStoneBlock());
	public static final RegistryObject<Block> MARBLE_1 = REGISTRY.register("marble_1", () -> new Marble1Block());
	public static final RegistryObject<Block> MARBLE_PILLAR = REGISTRY.register("marble_pillar", () -> new MarblePillarBlock());
	public static final RegistryObject<Block> CUT_MARBLE = REGISTRY.register("cut_marble", () -> new CutMarbleBlock());
	public static final RegistryObject<Block> WALL_6 = REGISTRY.register("wall_6", () -> new Wall6Block());
	public static final RegistryObject<Block> TILED_SMOOTH_SLABS = REGISTRY.register("tiled_smooth_slabs", () -> new TiledSmoothSlabsBlock());
	public static final RegistryObject<Block> LACUNA_KEYPAD = REGISTRY.register("lacuna_keypad", () -> new LacunaKeypadBlock());
	public static final RegistryObject<Block> CHAIN = REGISTRY.register("chain", () -> new ChainBlock());
	public static final RegistryObject<Block> LACUNA_TILE = REGISTRY.register("lacuna_tile", () -> new LacunaTileBlock());
	public static final RegistryObject<Block> CUT_LACUNA_TILE = REGISTRY.register("cut_lacuna_tile", () -> new CutLacunaTileBlock());
	public static final RegistryObject<Block> PADDED_LACUNA_TILE = REGISTRY.register("padded_lacuna_tile", () -> new PaddedLacunaTileBlock());
	public static final RegistryObject<Block> ROSE_FLOWER = REGISTRY.register("rose_flower", () -> new RoseFlowerBlock());
	public static final RegistryObject<Block> SOLID_LEAVES = REGISTRY.register("solid_leaves", () -> new SolidLeavesBlock());
	public static final RegistryObject<Block> EXEC_05_PLUSHIE = REGISTRY.register("exec_05_plushie", () -> new Exec05PlushieBlock());
	public static final RegistryObject<Block> KARGOSH_1P_Z_PLUSHIE = REGISTRY.register("kargosh_1p_z_plushie", () -> new Kargosh1pZPlushieBlock());
	public static final RegistryObject<Block> SAND_YCARPS_8_PLUSHIE = REGISTRY.register("sand_ycarps_8_plushie", () -> new SandYcarps8PlushieBlock());
	public static final RegistryObject<Block> GLASS_1 = REGISTRY.register("glass_1", () -> new Glass1Block());
	public static final RegistryObject<Block> GLASS_2 = REGISTRY.register("glass_2", () -> new Glass2Block());
	public static final RegistryObject<Block> GRASS_BLOCK_1 = REGISTRY.register("grass_block_1", () -> new GrassBlock1Block());
	public static final RegistryObject<Block> DISCO_BALL = REGISTRY.register("disco_ball", () -> new DiscoBallBlock());
	public static final RegistryObject<Block> MISSING_DBG_BLOCK = REGISTRY.register("missing_dbg_block", () -> new MissingDBGBlockBlock());
	public static final RegistryObject<Block> CHECKERBOARD_BLOCK = REGISTRY.register("checkerboard_block", () -> new CheckerboardBlockBlock());
	public static final RegistryObject<Block> BLUE_MOJANG_LOGO_BLOCK = REGISTRY.register("blue_mojang_logo_block", () -> new BlueMojangLogoBlockBlock());
	public static final RegistryObject<Block> ORENGE_MOJANG_LOGO_BLOCK = REGISTRY.register("orenge_mojang_logo_block", () -> new OrengeMojangLogoBlockBlock());
	public static final RegistryObject<Block> UPDATE_BLOCK = REGISTRY.register("update_block", () -> new UpdateBlockBlock());
	public static final RegistryObject<Block> PATTERN_BLOCK = REGISTRY.register("pattern_block", () -> new PatternBlockBlock());
	public static final RegistryObject<Block> TILE_BLOCK = REGISTRY.register("tile_block", () -> new TileBlockBlock());
	public static final RegistryObject<Block> WOOD_PILLAR_BLOCK = REGISTRY.register("wood_pillar_block", () -> new WoodPillarBlockBlock());
	public static final RegistryObject<Block> UNKNOWN_24 = REGISTRY.register("unknown_24", () -> new Unknown24Block());
	public static final RegistryObject<Block> UNKNOWN_25 = REGISTRY.register("unknown_25", () -> new Unknown25Block());
	public static final RegistryObject<Block> UNKNOWN_26 = REGISTRY.register("unknown_26", () -> new Unknown26Block());
	public static final RegistryObject<Block> MESSAGE_1 = REGISTRY.register("message_1", () -> new Message1Block());
	public static final RegistryObject<Block> MESSAGE_2 = REGISTRY.register("message_2", () -> new Message2Block());
	public static final RegistryObject<Block> LIMBOCHISELED = REGISTRY.register("limbochiseled", () -> new LimbochiseledBlock());
	public static final RegistryObject<Block> LIMBOFLOOR = REGISTRY.register("limbofloor", () -> new LimbofloorBlock());
	public static final RegistryObject<Block> LIMBOPILLAR = REGISTRY.register("limbopillar", () -> new LimbopillarBlock());
	public static final RegistryObject<Block> LIMBOPOLISHED = REGISTRY.register("limbopolished", () -> new LimbopolishedBlock());
	public static final RegistryObject<Block> LIMBODOORLOWER = REGISTRY.register("limbodoorlower", () -> new LimbodoorlowerBlock());
	public static final RegistryObject<Block> LIMBOLANTERN = REGISTRY.register("limbolantern", () -> new LimbolanternBlock());
	public static final RegistryObject<Block> ABGRUNDBRICKS = REGISTRY.register("abgrundbricks", () -> new AbgrundbricksBlock());
	public static final RegistryObject<Block> ABGRUNDDARKPRISMARINE = REGISTRY.register("abgrunddarkprismarine", () -> new AbgrunddarkprismarineBlock());
	public static final RegistryObject<Block> ABGRUNDGROUND = REGISTRY.register("abgrundground", () -> new AbgrundgroundBlock());
	public static final RegistryObject<Block> BLUE_KEEPERS_CHISELED_BLOCK = REGISTRY.register("blue_keepers_chiseled_block", () -> new BlueKeepersChiseledBlockBlock());
	public static final RegistryObject<Block> BLUE_KEEPERS_GENERIC_BLOCK = REGISTRY.register("blue_keepers_generic_block", () -> new BlueKeepersGenericBlockBlock());
	public static final RegistryObject<Block> BLUE_KEEPERS_GLASS_BLOCK = REGISTRY.register("blue_keepers_glass_block", () -> new BlueKeepersGlassBlockBlock());
	public static final RegistryObject<Block> BLUE_KEEPERS_STONE = REGISTRY.register("blue_keepers_stone", () -> new BlueKeepersStoneBlock());
	public static final RegistryObject<Block> BLUE_KEEPERS_PILLAR = REGISTRY.register("blue_keepers_pillar", () -> new BlueKeepersPillarBlock());
	public static final RegistryObject<Block> BLUE_KEEPERS_POLISHED_STONE = REGISTRY.register("blue_keepers_polished_stone", () -> new BlueKeepersPolishedStoneBlock());
	public static final RegistryObject<Block> CREATOR_ICON_BLOCK = REGISTRY.register("creator_icon_block", () -> new CreatorIconBlockBlock());
	public static final RegistryObject<Block> FOUNDER_ICON_BLOCK = REGISTRY.register("founder_icon_block", () -> new FounderIconBlockBlock());
	public static final RegistryObject<Block> INSTIGATOR_ICON_BLOCK = REGISTRY.register("instigator_icon_block", () -> new InstigatorIconBlockBlock());
	public static final RegistryObject<Block> SHAPER_ICON_BLOCK = REGISTRY.register("shaper_icon_block", () -> new ShaperIconBlockBlock());
	public static final RegistryObject<Block> ARCHITECT_ICON_BLOCK = REGISTRY.register("architect_icon_block", () -> new ArchitectIconBlockBlock());
	public static final RegistryObject<Block> AUTHOR_ICON_BLOCK = REGISTRY.register("author_icon_block", () -> new AuthorIconBlockBlock());
	public static final RegistryObject<Block> INVENTOR_ICON_BLOCK = REGISTRY.register("inventor_icon_block", () -> new InventorIconBlockBlock());
	public static final RegistryObject<Block> ORIGINATOR_ICON_BLOCK = REGISTRY.register("originator_icon_block", () -> new OriginatorIconBlockBlock());
	public static final RegistryObject<Block> RED_KEEPERS_CHISELED_BLOCK = REGISTRY.register("red_keepers_chiseled_block", () -> new RedKeepersChiseledBlockBlock());
	public static final RegistryObject<Block> RED_KEEPERS_GENERIC_BLOCK = REGISTRY.register("red_keepers_generic_block", () -> new RedKeepersGenericBlockBlock());
	public static final RegistryObject<Block> RED_KEEPERS_GLASS_BLOCK = REGISTRY.register("red_keepers_glass_block", () -> new RedKeepersGlassBlockBlock());
	public static final RegistryObject<Block> RED_KEEPERS_STONE = REGISTRY.register("red_keepers_stone", () -> new RedKeepersStoneBlock());
	public static final RegistryObject<Block> RED_KEEPERS_PILLAR = REGISTRY.register("red_keepers_pillar", () -> new RedKeepersPillarBlock());
	public static final RegistryObject<Block> RED_KEEPERS_POLISHED_STONE = REGISTRY.register("red_keepers_polished_stone", () -> new RedKeepersPolishedStoneBlock());
	public static final RegistryObject<Block> RED_KEEPERS_SMOOTH_STONE = REGISTRY.register("red_keepers_smooth_stone", () -> new RedKeepersSmoothStoneBlock());
	public static final RegistryObject<Block> RED_TERMINAL = REGISTRY.register("red_terminal", () -> new RedTerminalBlock());
	public static final RegistryObject<Block> RED_SYMBOL = REGISTRY.register("red_symbol", () -> new RedSymbolBlock());
	public static final RegistryObject<Block> LIMBOFLOOR_SLAB = REGISTRY.register("limbofloor_slab", () -> new LimbofloorSlabBlock());
	public static final RegistryObject<Block> LIMBO_FLOOR_STAIRS = REGISTRY.register("limbo_floor_stairs", () -> new LimboFloorStairsBlock());
	public static final RegistryObject<Block> LIMBOPOLISHED_SLAB = REGISTRY.register("limbopolished_slab", () -> new LimbopolishedSlabBlock());
	public static final RegistryObject<Block> LIMBOPOLISHED_STAIRS = REGISTRY.register("limbopolished_stairs", () -> new LimbopolishedStairsBlock());
	public static final RegistryObject<Block> WALL_TILE = REGISTRY.register("wall_tile", () -> new WallTileBlock());
	public static final RegistryObject<Block> WALL_TILE_1 = REGISTRY.register("wall_tile_1", () -> new WallTile1Block());
	public static final RegistryObject<Block> BLUE_WALL = REGISTRY.register("blue_wall", () -> new BlueWallBlock());
	public static final RegistryObject<Block> DARK_OAK_LOG = REGISTRY.register("dark_oak_log", () -> new DarkOakLogBlock());
	public static final RegistryObject<Block> DARK_LEAVES_BLOCK = REGISTRY.register("dark_leaves_block", () -> new DarkLeavesBlockBlock());
	public static final RegistryObject<Block> DARK_CRAFTING_TABLE = REGISTRY.register("dark_crafting_table", () -> new DarkCraftingTableBlock());
	public static final RegistryObject<Block> DECAYED_OAK_PLANKS = REGISTRY.register("decayed_oak_planks", () -> new DecayedOakPlanksBlock());
	public static final RegistryObject<Block> DECAYED_OAK_STAIRS = REGISTRY.register("decayed_oak_stairs", () -> new DecayedOakStairsBlock());
	public static final RegistryObject<Block> WALL_TILE_2 = REGISTRY.register("wall_tile_2", () -> new WallTile2Block());
	public static final RegistryObject<Block> WALL_TILE_3 = REGISTRY.register("wall_tile_3", () -> new WallTile3Block());
	public static final RegistryObject<Block> WALL_TILE_4 = REGISTRY.register("wall_tile_4", () -> new WallTile4Block());
	public static final RegistryObject<Block> DECAYED_OAK_DOOR = REGISTRY.register("decayed_oak_door", () -> new DecayedOakDoorBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_WALL = REGISTRY.register("light_blue_wall", () -> new LightBlueWallBlock());
	public static final RegistryObject<Block> WALL_TILE_5 = REGISTRY.register("wall_tile_5", () -> new WallTile5Block());
	public static final RegistryObject<Block> WALL_TILE_6 = REGISTRY.register("wall_tile_6", () -> new WallTile6Block());
	public static final RegistryObject<Block> WALL_TILE_7 = REGISTRY.register("wall_tile_7", () -> new WallTile7Block());
	public static final RegistryObject<Block> WALL_T_ILE_8 = REGISTRY.register("wall_t_ile_8", () -> new WallTIle8Block());
	public static final RegistryObject<Block> DARK_BLUE_WALL = REGISTRY.register("dark_blue_wall", () -> new DarkBlueWallBlock());
	public static final RegistryObject<Block> DECAYED_GLOWSTONE = REGISTRY.register("decayed_glowstone", () -> new DecayedGlowstoneBlock());
	public static final RegistryObject<Block> DECAYED_LILAC = REGISTRY.register("decayed_lilac", () -> new DecayedLilacBlock());
	public static final RegistryObject<Block> RED_WALL = REGISTRY.register("red_wall", () -> new RedWallBlock());
	public static final RegistryObject<Block> BLUE_WALL_1 = REGISTRY.register("blue_wall_1", () -> new BlueWall1Block());
	public static final RegistryObject<Block> OFFICE_BRICKS = REGISTRY.register("office_bricks", () -> new OfficeBricksBlock());
	public static final RegistryObject<Block> DARK_OFFICE_BRICKS = REGISTRY.register("dark_office_bricks", () -> new DarkOfficeBricksBlock());
	public static final RegistryObject<Block> OFFICE_WALL = REGISTRY.register("office_wall", () -> new OfficeWallBlock());
	public static final RegistryObject<Block> OFFICE_TERMINAL = REGISTRY.register("office_terminal", () -> new OfficeTerminalBlock());
	public static final RegistryObject<Block> OFFICE_LOGO = REGISTRY.register("office_logo", () -> new OfficeLogoBlock());
	public static final RegistryObject<Block> OFFICE_NUMBER = REGISTRY.register("office_number", () -> new OfficeNumberBlock());
	public static final RegistryObject<Block> OFFICE_NUMBER_1 = REGISTRY.register("office_number_1", () -> new OfficeNumber1Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_2 = REGISTRY.register("office_number_2", () -> new OfficeNumber2Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_3 = REGISTRY.register("office_number_3", () -> new OfficeNumber3Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_4 = REGISTRY.register("office_number_4", () -> new OfficeNumber4Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_5 = REGISTRY.register("office_number_5", () -> new OfficeNumber5Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_6 = REGISTRY.register("office_number_6", () -> new OfficeNumber6Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_7 = REGISTRY.register("office_number_7", () -> new OfficeNumber7Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_8 = REGISTRY.register("office_number_8", () -> new OfficeNumber8Block());
	public static final RegistryObject<Block> OFFICE_NUMBER_9 = REGISTRY.register("office_number_9", () -> new OfficeNumber9Block());
	public static final RegistryObject<Block> OFFICE_LANTERN = REGISTRY.register("office_lantern", () -> new OfficeLanternBlock());
	public static final RegistryObject<Block> OFFICE_WALL_1 = REGISTRY.register("office_wall_1", () -> new OfficeWall1Block());
	public static final RegistryObject<Block> DECAYED_SMOOTH_STONE_SLAB = REGISTRY.register("decayed_smooth_stone_slab", () -> new DecayedSmoothStoneSlabBlock());
	public static final RegistryObject<Block> OFFICE_STAIRS = REGISTRY.register("office_stairs", () -> new OfficeStairsBlock());
	public static final RegistryObject<Block> STONE_TILE_BLOCK = REGISTRY.register("stone_tile_block", () -> new StoneTileBlockBlock());
	public static final RegistryObject<Block> DARK_GLOWSTONE = REGISTRY.register("dark_glowstone", () -> new DarkGlowstoneBlock());
	public static final RegistryObject<Block> DECAYED_STONE_BRICKS = REGISTRY.register("decayed_stone_bricks", () -> new DecayedStoneBricksBlock());
	public static final RegistryObject<Block> DECAYED_BOOKSHELF = REGISTRY.register("decayed_bookshelf", () -> new DecayedBookshelfBlock());
	public static final RegistryObject<Block> DECAYED_IRON_DOOR = REGISTRY.register("decayed_iron_door", () -> new DecayedIronDoorBlock());
	public static final RegistryObject<Block> WALL_TILE_9 = REGISTRY.register("wall_tile_9", () -> new WallTile9Block());
	public static final RegistryObject<Block> ADMIN_BLOCK = REGISTRY.register("admin_block", () -> new AdminBlockBlock());
	public static final RegistryObject<Block> ADMIN_CONSOLE = REGISTRY.register("admin_console", () -> new AdminConsoleBlock());
	public static final RegistryObject<Block> STATIC_BLOCK = REGISTRY.register("static_block", () -> new StaticBlockBlock());
	public static final RegistryObject<Block> ADMIN_CHEST = REGISTRY.register("admin_chest", () -> new AdminChestBlock());
	public static final RegistryObject<Block> RED_LOG = REGISTRY.register("red_log", () -> new RedLogBlock());
	public static final RegistryObject<Block> RED_PLANKS = REGISTRY.register("red_planks", () -> new RedPlanksBlock());
	public static final RegistryObject<Block> GREEN_LOG_2 = REGISTRY.register("green_log_2", () -> new GreenLog2Block());
	public static final RegistryObject<Block> GREEN_PLANKS = REGISTRY.register("green_planks", () -> new GreenPlanksBlock());
	public static final RegistryObject<Block> YELLOW_LOG = REGISTRY.register("yellow_log", () -> new YellowLogBlock());
	public static final RegistryObject<Block> YELLOW_PLANKS = REGISTRY.register("yellow_planks", () -> new YellowPlanksBlock());
	public static final RegistryObject<Block> SMILE = REGISTRY.register("smile", () -> new SmileBlock());
	public static final RegistryObject<Block> SPEED_BRICKS = REGISTRY.register("speed_bricks", () -> new SpeedBricksBlock());
	public static final RegistryObject<Block> SLOW_BRICKS = REGISTRY.register("slow_bricks", () -> new SlowBricksBlock());
	public static final RegistryObject<Block> GLASS_BRICKS = REGISTRY.register("glass_bricks", () -> new GlassBricksBlock());
	public static final RegistryObject<Block> ANTI_FRICTION_BLOCK = REGISTRY.register("anti_friction_block", () -> new AntiFrictionBlockBlock());
	public static final RegistryObject<Block> CHARED_LOG = REGISTRY.register("chared_log", () -> new CharedLogBlock());
	public static final RegistryObject<Block> CHARED_PLANKS = REGISTRY.register("chared_planks", () -> new CharedPlanksBlock());
	public static final RegistryObject<Block> CHARED_LEAVES = REGISTRY.register("chared_leaves", () -> new CharedLeavesBlock());
	public static final RegistryObject<Block> SMILE_LOG = REGISTRY.register("smile_log", () -> new SmileLogBlock());
	public static final RegistryObject<Block> SMILE_PLANKS = REGISTRY.register("smile_planks", () -> new SmilePlanksBlock());
	public static final RegistryObject<Block> SMILE_LEAVES = REGISTRY.register("smile_leaves", () -> new SmileLeavesBlock());
	public static final RegistryObject<Block> HIDDENITEORE = REGISTRY.register("hiddeniteore", () -> new HiddeniteoreBlock());
	public static final RegistryObject<Block> HIDDENITEOREBLOCK = REGISTRY.register("hiddeniteoreblock", () -> new HiddeniteoreblockBlock());
	public static final RegistryObject<Block> LIMINAL_PLUSHIE = REGISTRY.register("liminal_plushie", () -> new LiminalPlushieBlock());
	public static final RegistryObject<Block> ABGRUND_BRICKS_BRIGHT = REGISTRY.register("abgrund_bricks_bright", () -> new AbgrundBricksBrightBlock());
	public static final RegistryObject<Block> ABGRUND_DARK_PRISMARINE_BRIGHT = REGISTRY.register("abgrund_dark_prismarine_bright", () -> new AbgrundDarkPrismarineBrightBlock());
	public static final RegistryObject<Block> ABGRUND_GROUND_BRIGHT = REGISTRY.register("abgrund_ground_bright", () -> new AbgrundGroundBrightBlock());
	public static final RegistryObject<Block> C_MAILBOX = REGISTRY.register("c_mailbox", () -> new CMailboxBlock());
	public static final RegistryObject<Block> COLORED_TILE = REGISTRY.register("colored_tile", () -> new ColoredTileBlock());
	public static final RegistryObject<Block> COLORED_TILE_1 = REGISTRY.register("colored_tile_1", () -> new ColoredTile1Block());
	public static final RegistryObject<Block> PAVEMENT = REGISTRY.register("pavement", () -> new PavementBlock());
	public static final RegistryObject<Block> UNUSED_7 = REGISTRY.register("unused_7", () -> new Unused7Block());
	public static final RegistryObject<Block> UNUSED_8 = REGISTRY.register("unused_8", () -> new Unused8Block());
	public static final RegistryObject<Block> UNUSED_9 = REGISTRY.register("unused_9", () -> new Unused9Block());
	public static final RegistryObject<Block> UNUSED_10 = REGISTRY.register("unused_10", () -> new Unused10Block());
	public static final RegistryObject<Block> UNUSED_11 = REGISTRY.register("unused_11", () -> new Unused11Block());
	public static final RegistryObject<Block> UNUSED_12 = REGISTRY.register("unused_12", () -> new Unused12Block());
	public static final RegistryObject<Block> UNUSED_13 = REGISTRY.register("unused_13", () -> new Unused13Block());
	public static final RegistryObject<Block> DOOR_2 = REGISTRY.register("door_2", () -> new Door2Block());
	public static final RegistryObject<Block> RED_PLANKS_STAIRS = REGISTRY.register("red_planks_stairs", () -> new RedPlanksStairsBlock());
	public static final RegistryObject<Block> RED_PLANKS_SLAB = REGISTRY.register("red_planks_slab", () -> new RedPlanksSlabBlock());
	public static final RegistryObject<Block> GREEN_PLANKS_STAIRS = REGISTRY.register("green_planks_stairs", () -> new GreenPlanksStairsBlock());
	public static final RegistryObject<Block> GREEN_PLANKS_SLAB = REGISTRY.register("green_planks_slab", () -> new GreenPlanksSlabBlock());
	public static final RegistryObject<Block> YELLOW_PLANKS_STAIRS = REGISTRY.register("yellow_planks_stairs", () -> new YellowPlanksStairsBlock());
	public static final RegistryObject<Block> YELLOW_PLANKS_SLAB = REGISTRY.register("yellow_planks_slab", () -> new YellowPlanksSlabBlock());
	public static final RegistryObject<Block> CHARED_PLANKS_STAIRS = REGISTRY.register("chared_planks_stairs", () -> new CharedPlanksStairsBlock());
	public static final RegistryObject<Block> CHARED_PLANKS_SLAB = REGISTRY.register("chared_planks_slab", () -> new CharedPlanksSlabBlock());
	public static final RegistryObject<Block> SMILE_PLANKS_STAIRS = REGISTRY.register("smile_planks_stairs", () -> new SmilePlanksStairsBlock());
	public static final RegistryObject<Block> SMILE_PLANKS_SLAB = REGISTRY.register("smile_planks_slab", () -> new SmilePlanksSlabBlock());
	public static final RegistryObject<Block> TEA_PLANKS_STAIRS = REGISTRY.register("tea_planks_stairs", () -> new TeaPlanksStairsBlock());
	public static final RegistryObject<Block> TEA_PLANKS_SLAB = REGISTRY.register("tea_planks_slab", () -> new TeaPlanksSlabBlock());
	public static final RegistryObject<Block> FLAMEWOOD_PLANKS_STAIRS = REGISTRY.register("flamewood_planks_stairs", () -> new FlamewoodPlanksStairsBlock());
	public static final RegistryObject<Block> FLAMEWOOD_PLANKS_SLAB = REGISTRY.register("flamewood_planks_slab", () -> new FlamewoodPlanksSlabBlock());
	public static final RegistryObject<Block> MYCON_PLANKS_STAIRS = REGISTRY.register("mycon_planks_stairs", () -> new MyconPlanksStairsBlock());
	public static final RegistryObject<Block> MYCONPLANKS_SLAB = REGISTRY.register("myconplanks_slab", () -> new MyconplanksSlabBlock());
	public static final RegistryObject<Block> HIGHWOODPLANKS_STAIRS = REGISTRY.register("highwoodplanks_stairs", () -> new HighwoodplanksStairsBlock());
	public static final RegistryObject<Block> HIGHWOODPLANKS_SLAB = REGISTRY.register("highwoodplanks_slab", () -> new HighwoodplanksSlabBlock());
	public static final RegistryObject<Block> NOISE_GEM_BRICKS = REGISTRY.register("noise_gem_bricks", () -> new NoiseGemBricksBlock());
	public static final RegistryObject<Block> NOISE_GEM_MINI_TILES = REGISTRY.register("noise_gem_mini_tiles", () -> new NoiseGemMiniTilesBlock());
	public static final RegistryObject<Block> NOISE_GEM_CLOSER_MINI_TILES = REGISTRY.register("noise_gem_closer_mini_tiles", () -> new NoiseGemCloserMiniTilesBlock());
	public static final RegistryObject<Block> NOISE_GEM_LARGE_BRICKS = REGISTRY.register("noise_gem_large_bricks", () -> new NoiseGemLargeBricksBlock());
	public static final RegistryObject<Block> DELTA_COMMAND_INTERFACE_BLOCK = REGISTRY.register("delta_command_interface_block", () -> new DeltaCommandInterfaceBlockBlock());
	public static final RegistryObject<Block> CYBERSPACE_EYE = REGISTRY.register("cyberspace_eye", () -> new CyberspaceEyeBlock());
	public static final RegistryObject<Block> CYBERSPACE_WALL = REGISTRY.register("cyberspace_wall", () -> new CyberspaceWallBlock());
	public static final RegistryObject<Block> CYBERSPACE_BODDY = REGISTRY.register("cyberspace_boddy", () -> new CyberspaceBoddyBlock());
	public static final RegistryObject<Block> CYBERSPACE_DATA = REGISTRY.register("cyberspace_data", () -> new CyberspaceDataBlock());
	public static final RegistryObject<Block> CYBERSPACE_STAND = REGISTRY.register("cyberspace_stand", () -> new CyberspaceStandBlock());
	public static final RegistryObject<Block> SHATTERED_COMMAND = REGISTRY.register("shattered_command", () -> new ShatteredCommandBlock());
	public static final RegistryObject<Block> STATIC_BLOCK_1 = REGISTRY.register("static_block_1", () -> new StaticBlock1Block());
	public static final RegistryObject<Block> BLUEWIRE_BLOCK = REGISTRY.register("bluewire_block", () -> new BluewireBlockBlock());
	public static final RegistryObject<Block> GLITCHED_STRUCTURE_POINT = REGISTRY.register("glitched_structure_point", () -> new GlitchedStructurePointBlock());
	public static final RegistryObject<Block> CINDER_BLOCK = REGISTRY.register("cinder_block", () -> new CinderBlockBlock());
	public static final RegistryObject<Block> CINDER_BLOCK_CARVED = REGISTRY.register("cinder_block_carved", () -> new CinderBlockCarvedBlock());
	public static final RegistryObject<Block> MESSED_UP_TILE = REGISTRY.register("messed_up_tile", () -> new MessedUpTileBlock());
	public static final RegistryObject<Block> GLITCHED_TILE = REGISTRY.register("glitched_tile", () -> new GlitchedTileBlock());
	public static final RegistryObject<Block> TBOTVBRICKSSTAIRS = REGISTRY.register("tbotvbricksstairs", () -> new TbotvbricksstairsBlock());
	public static final RegistryObject<Block> GRAYSCALED_OAK_PLANKS = REGISTRY.register("grayscaled_oak_planks", () -> new GrayscaledOakPlanksBlock());
	public static final RegistryObject<Block> GRAYSCALED_OAK_SLAB = REGISTRY.register("grayscaled_oak_slab", () -> new GrayscaledOakSlabBlock());
	public static final RegistryObject<Block> GRAYSCALED_OAK_STAIRS = REGISTRY.register("grayscaled_oak_stairs", () -> new GrayscaledOakStairsBlock());
	public static final RegistryObject<Block> GREJANG_BASEMENT_BRICK = REGISTRY.register("grejang_basement_brick", () -> new GrejangBasementBrickBlock());
	public static final RegistryObject<Block> GREJANG_BASEMENT_TILE = REGISTRY.register("grejang_basement_tile", () -> new GrejangBasementTileBlock());
	public static final RegistryObject<Block> GREJANG_BASEMENT_TILE_1 = REGISTRY.register("grejang_basement_tile_1", () -> new GrejangBasementTile1Block());
	public static final RegistryObject<Block> GREJANG_BASEMENT_TILE_2 = REGISTRY.register("grejang_basement_tile_2", () -> new GrejangBasementTile2Block());
	public static final RegistryObject<Block> GREJANG_BASEMENT_TILE_3 = REGISTRY.register("grejang_basement_tile_3", () -> new GrejangBasementTile3Block());
	public static final RegistryObject<Block> GREJANG_BASEMENT_TILE_4 = REGISTRY.register("grejang_basement_tile_4", () -> new GrejangBasementTile4Block());
	public static final RegistryObject<Block> GREJANG_BASEMENT_TILE_5 = REGISTRY.register("grejang_basement_tile_5", () -> new GrejangBasementTile5Block());
	public static final RegistryObject<Block> GREJANG_BASEMENT_MONITOR = REGISTRY.register("grejang_basement_monitor", () -> new GrejangBasementMonitorBlock());
	public static final RegistryObject<Block> GREJANG_BASEMENT_MONITOR_1 = REGISTRY.register("grejang_basement_monitor_1", () -> new GrejangBasementMonitor1Block());
	public static final RegistryObject<Block> CORRIDOR_FENCE = REGISTRY.register("corridor_fence", () -> new CorridorFenceBlock());
	public static final RegistryObject<Block> CATWALK_STAIRS = REGISTRY.register("catwalk_stairs", () -> new CatwalkStairsBlock());
	public static final RegistryObject<Block> CATWALK_SLAB = REGISTRY.register("catwalk_slab", () -> new CatwalkSlabBlock());
	public static final RegistryObject<Block> ADMIN_SPACE_FLOOR_TILE_SLAB = REGISTRY.register("admin_space_floor_tile_slab", () -> new AdminSpaceFloorTileSlabBlock());
	public static final RegistryObject<Block> ADMIN_SPACE_FLOOR_TILE_STAIRS = REGISTRY.register("admin_space_floor_tile_stairs", () -> new AdminSpaceFloorTileStairsBlock());
	public static final RegistryObject<Block> CORRIDORSUPPORTS_1 = REGISTRY.register("corridorsupports_1", () -> new Corridorsupports1Block());
	public static final RegistryObject<Block> CORRIDORNETTING_1 = REGISTRY.register("corridornetting_1", () -> new Corridornetting1Block());
	public static final RegistryObject<Block> GLITCHEDTILE_1 = REGISTRY.register("glitchedtile_1", () -> new Glitchedtile1Block());
	public static final RegistryObject<Block> GLITCHEDTILE_2 = REGISTRY.register("glitchedtile_2", () -> new Glitchedtile2Block());
	public static final RegistryObject<Block> GLITCHEDTILE_3 = REGISTRY.register("glitchedtile_3", () -> new Glitchedtile3Block());
	public static final RegistryObject<Block> GLITCHEDTILE_4 = REGISTRY.register("glitchedtile_4", () -> new Glitchedtile4Block());
	public static final RegistryObject<Block> A_MONITOR = REGISTRY.register("a_monitor", () -> new AMonitorBlock());
	public static final RegistryObject<Block> B_MONITOR = REGISTRY.register("b_monitor", () -> new BMonitorBlock());
	public static final RegistryObject<Block> C_MONITOR = REGISTRY.register("c_monitor", () -> new CMonitorBlock());
	public static final RegistryObject<Block> D_MONITOR = REGISTRY.register("d_monitor", () -> new DMonitorBlock());
	public static final RegistryObject<Block> E_MONITOR = REGISTRY.register("e_monitor", () -> new EMonitorBlock());
	public static final RegistryObject<Block> F_MONITOR = REGISTRY.register("f_monitor", () -> new FMonitorBlock());
	public static final RegistryObject<Block> G_MONITOR = REGISTRY.register("g_monitor", () -> new GMonitorBlock());
	public static final RegistryObject<Block> H_MONITOR = REGISTRY.register("h_monitor", () -> new HMonitorBlock());
	public static final RegistryObject<Block> I_MONITOR = REGISTRY.register("i_monitor", () -> new IMonitorBlock());
	public static final RegistryObject<Block> J_MONITOR = REGISTRY.register("j_monitor", () -> new JMonitorBlock());
	public static final RegistryObject<Block> K_MONITOR = REGISTRY.register("k_monitor", () -> new KMonitorBlock());
	public static final RegistryObject<Block> L_MONITOR = REGISTRY.register("l_monitor", () -> new LMonitorBlock());
	public static final RegistryObject<Block> M_MONITOR = REGISTRY.register("m_monitor", () -> new MMonitorBlock());
	public static final RegistryObject<Block> N_MONITOR = REGISTRY.register("n_monitor", () -> new NMonitorBlock());
	public static final RegistryObject<Block> O_MONITOR = REGISTRY.register("o_monitor", () -> new OMonitorBlock());
	public static final RegistryObject<Block> P_MONITOR = REGISTRY.register("p_monitor", () -> new PMonitorBlock());
	public static final RegistryObject<Block> Q_MONITOR = REGISTRY.register("q_monitor", () -> new QMonitorBlock());
	public static final RegistryObject<Block> R_MONITOR = REGISTRY.register("r_monitor", () -> new RMonitorBlock());
	public static final RegistryObject<Block> S_MONITOR = REGISTRY.register("s_monitor", () -> new SMonitorBlock());
	public static final RegistryObject<Block> T_MONITOR = REGISTRY.register("t_monitor", () -> new TMonitorBlock());
	public static final RegistryObject<Block> U_MONITOR = REGISTRY.register("u_monitor", () -> new UMonitorBlock());
	public static final RegistryObject<Block> V_MONITOR = REGISTRY.register("v_monitor", () -> new VMonitorBlock());
	public static final RegistryObject<Block> W_MONITOR = REGISTRY.register("w_monitor", () -> new WMonitorBlock());
	public static final RegistryObject<Block> X_MONITOR_1 = REGISTRY.register("x_monitor_1", () -> new XMonitor1Block());
	public static final RegistryObject<Block> Y_MONITOR_1 = REGISTRY.register("y_monitor_1", () -> new YMonitor1Block());
	public static final RegistryObject<Block> Z_MONITOR = REGISTRY.register("z_monitor", () -> new ZMonitorBlock());
	public static final RegistryObject<Block> VOID_CROSS = REGISTRY.register("void_cross", () -> new VoidCrossBlock());
	public static final RegistryObject<Block> VOID_PATH = REGISTRY.register("void_path", () -> new VoidPathBlock());
	public static final RegistryObject<Block> VOID_PILLAR = REGISTRY.register("void_pillar", () -> new VoidPillarBlock());
	public static final RegistryObject<Block> VOID_LIGHT = REGISTRY.register("void_light", () -> new VoidLightBlock());
	public static final RegistryObject<Block> VOID_LIGHT_OFF = REGISTRY.register("void_light_off", () -> new VoidLightOffBlock());
	public static final RegistryObject<Block> VOID_TILE = REGISTRY.register("void_tile", () -> new VoidTileBlock());
	public static final RegistryObject<Block> VOID_TILE_1 = REGISTRY.register("void_tile_1", () -> new VoidTile1Block());
	public static final RegistryObject<Block> VOID_PATH_1 = REGISTRY.register("void_path_1", () -> new VoidPath1Block());
	public static final RegistryObject<Block> VOID_SUPPORT_VARIENT = REGISTRY.register("void_support_varient", () -> new VoidSupportVarientBlock());
	public static final RegistryObject<Block> VOID_SUPPORT_VARIENT_1 = REGISTRY.register("void_support_varient_1", () -> new VoidSupportVarient1Block());
	public static final RegistryObject<Block> VOID_FENCE_VARIENT_1 = REGISTRY.register("void_fence_varient_1", () -> new VoidFenceVarient1Block());
	public static final RegistryObject<Block> VOID_FENCE_VARIENT_2 = REGISTRY.register("void_fence_varient_2", () -> new VoidFenceVarient2Block());
	public static final RegistryObject<Block> VOID_WALL_VARIENT_1 = REGISTRY.register("void_wall_varient_1", () -> new VoidWallVarient1Block());
	public static final RegistryObject<Block> VOID_WALL_VARIENT_2 = REGISTRY.register("void_wall_varient_2", () -> new VoidWallVarient2Block());
	public static final RegistryObject<Block> VOID_CROSS_1 = REGISTRY.register("void_cross_1", () -> new VoidCross1Block());
	public static final RegistryObject<Block> VOID_PATH_2 = REGISTRY.register("void_path_2", () -> new VoidPath2Block());
	public static final RegistryObject<Block> VOID_PILLAR_1 = REGISTRY.register("void_pillar_1", () -> new VoidPillar1Block());
	public static final RegistryObject<Block> VOID_LIGHT_1 = REGISTRY.register("void_light_1", () -> new VoidLight1Block());
	public static final RegistryObject<Block> VOID_LIGHT_OFF_1 = REGISTRY.register("void_light_off_1", () -> new VoidLightOff1Block());
	public static final RegistryObject<Block> VOID_TILE_2 = REGISTRY.register("void_tile_2", () -> new VoidTile2Block());
	public static final RegistryObject<Block> VOIDSUPPORTVARIENT_3 = REGISTRY.register("voidsupportvarient_3", () -> new Voidsupportvarient3Block());
	public static final RegistryObject<Block> VOIDSUPPORTVARIENT_4 = REGISTRY.register("voidsupportvarient_4", () -> new Voidsupportvarient4Block());
	public static final RegistryObject<Block> VOIDFENCEVARIENT_3 = REGISTRY.register("voidfencevarient_3", () -> new Voidfencevarient3Block());
	public static final RegistryObject<Block> VOIDFENCEVARIENT_4 = REGISTRY.register("voidfencevarient_4", () -> new Voidfencevarient4Block());
	public static final RegistryObject<Block> VOIDWALLVARIENT_3 = REGISTRY.register("voidwallvarient_3", () -> new Voidwallvarient3Block());
	public static final RegistryObject<Block> VOIDWALLVARIENT_4 = REGISTRY.register("voidwallvarient_4", () -> new Voidwallvarient4Block());
	public static final RegistryObject<Block> GOL_FRUIT_SEED = REGISTRY.register("gol_fruit_seed", () -> new GolFruitSeedBlock());
	public static final RegistryObject<Block> DELTA_QUEST_LOG = REGISTRY.register("delta_quest_log", () -> new DeltaQuestLogBlock());
	public static final RegistryObject<Block> GRIDSTONE = REGISTRY.register("gridstone", () -> new GridstoneBlock());
	public static final RegistryObject<Block> CRATE = REGISTRY.register("crate", () -> new CrateBlock());
	public static final RegistryObject<Block> MYSTERY_BLOCK = REGISTRY.register("mystery_block", () -> new MysteryBlockBlock());
	public static final RegistryObject<Block> MYSTERY_BLOCK_1 = REGISTRY.register("mystery_block_1", () -> new MysteryBlock1Block());
	public static final RegistryObject<Block> ENVELOPED_COBBLESTONE = REGISTRY.register("enveloped_cobblestone", () -> new EnvelopedCobblestoneBlock());
	public static final RegistryObject<Block> ENVELOPMENT_BLOCK = REGISTRY.register("envelopment_block", () -> new EnvelopmentBlockBlock());
	public static final RegistryObject<Block> JUMPER = REGISTRY.register("jumper", () -> new JumperBlock());
	public static final RegistryObject<Block> SPEED_UP = REGISTRY.register("speed_up", () -> new SpeedUpBlock());
	public static final RegistryObject<Block> CLIMBER = REGISTRY.register("climber", () -> new ClimberBlock());
	public static final RegistryObject<Block> POISONER = REGISTRY.register("poisoner", () -> new PoisonerBlock());
	public static final RegistryObject<Block> ABYSS_AAB_CORE = REGISTRY.register("abyss_aab_core", () -> new AbyssAABCoreBlock());
	public static final RegistryObject<Block> TOUGH_BLATTEA_BRICKS = REGISTRY.register("tough_blattea_bricks", () -> new ToughBlatteaBricksBlock());
	public static final RegistryObject<Block> LINE = REGISTRY.register("line", () -> new LineBlock());
	public static final RegistryObject<Block> ACTIVE_LINE = REGISTRY.register("active_line", () -> new ActiveLineBlock());
	public static final RegistryObject<Block> CONNECTOR_RHOMBUS = REGISTRY.register("connector_rhombus", () -> new ConnectorRhombusBlock());
	public static final RegistryObject<Block> ACTIVE_CONNECTOR_RHOMBUS = REGISTRY.register("active_connector_rhombus", () -> new ActiveConnectorRhombusBlock());
	public static final RegistryObject<Block> NATIONAL_SYMBOL_OF_ABYSS = REGISTRY.register("national_symbol_of_abyss", () -> new NationalSymbolOfAbyssBlock());
	public static final RegistryObject<Block> ABYSS_BLACK_HOLE = REGISTRY.register("abyss_black_hole", () -> new AbyssBlackHoleBlock());
	public static final RegistryObject<Block> TOUGH_BRICK_STAIRS = REGISTRY.register("tough_brick_stairs", () -> new ToughBrickStairsBlock());
	public static final RegistryObject<Block> TOUGH_BRICK_SLAB = REGISTRY.register("tough_brick_slab", () -> new ToughBrickSlabBlock());
	public static final RegistryObject<Block> SLIGHTLY_TINTED_GLASS_MAGENTA = REGISTRY.register("slightly_tinted_glass_magenta", () -> new SlightlyTintedGlassMagentaBlock());
	public static final RegistryObject<Block> POLISHED_BRICKS = REGISTRY.register("polished_bricks", () -> new PolishedBricksBlock());
	public static final RegistryObject<Block> ACTIVE_TOUGH_BLATTEA_BRICKS = REGISTRY.register("active_tough_blattea_bricks", () -> new ActiveToughBlatteaBricksBlock());
	public static final RegistryObject<Block> POLISHED_TOUGH_FENCE = REGISTRY.register("polished_tough_fence", () -> new PolishedToughFenceBlock());
	public static final RegistryObject<Block> POLISHED_TOUGH_FENCE_1 = REGISTRY.register("polished_tough_fence_1", () -> new PolishedToughFence1Block());
	public static final RegistryObject<Block> PURG_ABYSS_SERVER_BLOCK_OFF_2D = REGISTRY.register("purg_abyss_server_block_off_2d", () -> new PurgAbyssServerBlockOFF2dBlock());
	public static final RegistryObject<Block> PURG_ABYSS_SERVER_BLOCK_ON_2D = REGISTRY.register("purg_abyss_server_block_on_2d", () -> new PurgAbyssServerBlockON2dBlock());
	public static final RegistryObject<Block> POLISHED_TOUGH_STAIRS = REGISTRY.register("polished_tough_stairs", () -> new PolishedToughStairsBlock());
	public static final RegistryObject<Block> POLISHED_TOUGH_SLAB = REGISTRY.register("polished_tough_slab", () -> new PolishedToughSlabBlock());
	public static final RegistryObject<Block> INFESTED_BLATTEA_ORE = REGISTRY.register("infested_blattea_ore", () -> new InfestedBlatteaOreBlock());
	public static final RegistryObject<Block> YES_BLOCK = REGISTRY.register("yes_block", () -> new YesBlockBlock());
	public static final RegistryObject<Block> NO_BLOCK = REGISTRY.register("no_block", () -> new NoBlockBlock());
	public static final RegistryObject<Block> TRIANGLE_BLOCK = REGISTRY.register("triangle_block", () -> new TriangleBlockBlock());
	public static final RegistryObject<Block> ABYSS_IN_BLOCK = REGISTRY.register("abyss_in_block", () -> new AbyssInBlockBlock());
	public static final RegistryObject<Block> LIMBO_SQUARE_BLOCK = REGISTRY.register("limbo_square_block", () -> new LimboSquareBlockBlock());
	public static final RegistryObject<Block> ABYSS_RESISTENCE_GLASS = REGISTRY.register("abyss_resistence_glass", () -> new AbyssResistenceGlassBlock());
	public static final RegistryObject<Block> ABYSS_EMPTY_GLASS_FRAME = REGISTRY.register("abyss_empty_glass_frame", () -> new AbyssEmptyGlassFrameBlock());
	public static final RegistryObject<Block> ABYSS_SUPPORTER = REGISTRY.register("abyss_supporter", () -> new AbyssSupporterBlock());
	public static final RegistryObject<Block> TOUGH_GRID = REGISTRY.register("tough_grid", () -> new ToughGridBlock());
	public static final RegistryObject<Block> ABYSS_FERTILE_SOIL = REGISTRY.register("abyss_fertile_soil", () -> new AbyssFertileSoilBlock());
	public static final RegistryObject<Block> ABYSS_FERTILE_SOIL_1 = REGISTRY.register("abyss_fertile_soil_1", () -> new AbyssFertileSoil1Block());
	public static final RegistryObject<Block> ABYSS_FERTILE_SOIL_2 = REGISTRY.register("abyss_fertile_soil_2", () -> new AbyssFertileSoil2Block());
	public static final RegistryObject<Block> MEDROOM_LIT_CROSS = REGISTRY.register("medroom_lit_cross", () -> new MedroomLitCrossBlock());
	public static final RegistryObject<Block> MEDROOM_CROSS = REGISTRY.register("medroom_cross", () -> new MedroomCrossBlock());
	public static final RegistryObject<Block> GRADIENT_LEAVES = REGISTRY.register("gradient_leaves", () -> new GradientLeavesBlock());
	public static final RegistryObject<Block> GRADIENT_LEAVES_PINK = REGISTRY.register("gradient_leaves_pink", () -> new GradientLeavesPinkBlock());
	public static final RegistryObject<Block> GRADIENT_LEAVES_CENTRAL = REGISTRY.register("gradient_leaves_central", () -> new GradientLeavesCentralBlock());
	public static final RegistryObject<Block> GRADIENT_LEAVES_BLUE = REGISTRY.register("gradient_leaves_blue", () -> new GradientLeavesBlueBlock());
	public static final RegistryObject<Block> GRADIENT_LEAVES_PURPLE = REGISTRY.register("gradient_leaves_purple", () -> new GradientLeavesPurpleBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_DOOR = REGISTRY.register("pure_paperwood_door", () -> new PurePaperwoodDoorBlock());
	public static final RegistryObject<Block> TOUGH_DOOR = REGISTRY.register("tough_door", () -> new ToughDoorBlock());
	public static final RegistryObject<Block> MIDGEM_SQUARED_FRAME = REGISTRY.register("midgem_squared_frame", () -> new MidgemSquaredFrameBlock());
	public static final RegistryObject<Block> MIDGEM_RHOMBD_FRAME = REGISTRY.register("midgem_rhombd_frame", () -> new MidgemRhombdFrameBlock());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS = REGISTRY.register("ostrutene_planks", () -> new OstrutenePlanksBlock());
	public static final RegistryObject<Block> ABYSS_ACTIVE_BRICK_STAIRS = REGISTRY.register("abyss_active_brick_stairs", () -> new AbyssActiveBrickStairsBlock());
	public static final RegistryObject<Block> ABYSS_FLOOR_STAIRS_ACTIVE_LINED = REGISTRY.register("abyss_floor_stairs_active_lined", () -> new AbyssFloorStairsActiveLinedBlock());
	public static final RegistryObject<Block> ABYSS_FLOOR_STAIRS_LINED = REGISTRY.register("abyss_floor_stairs_lined", () -> new AbyssFloorStairsLinedBlock());
	public static final RegistryObject<Block> ABYSS_FLOOR_SLAB_LINED = REGISTRY.register("abyss_floor_slab_lined", () -> new AbyssFloorSlabLinedBlock());
	public static final RegistryObject<Block> ACTIVE_CRESIAH = REGISTRY.register("active_cresiah", () -> new ActiveCresiahBlock());
	public static final RegistryObject<Block> CRESIAH = REGISTRY.register("cresiah", () -> new CresiahBlock());
	public static final RegistryObject<Block> ATERNOSHROOM_SOIL_PURPLE = REGISTRY.register("aternoshroom_soil_purple", () -> new AternoshroomSoilPurpleBlock());
	public static final RegistryObject<Block> ATERNOSHROOM_SOIL_PINK = REGISTRY.register("aternoshroom_soil_pink", () -> new AternoshroomSoilPinkBlock());
	public static final RegistryObject<Block> ATERNOSHROOM_SOIL_BLUE = REGISTRY.register("aternoshroom_soil_blue", () -> new AternoshroomSoilBlueBlock());
	public static final RegistryObject<Block> PURPLE_ATERNOSHROOM = REGISTRY.register("purple_aternoshroom", () -> new PurpleAternoshroomBlock());
	public static final RegistryObject<Block> PINK_ATERNOSHROOM = REGISTRY.register("pink_aternoshroom", () -> new PinkAternoshroomBlock());
	public static final RegistryObject<Block> BLUE_ATERNOSHROOM = REGISTRY.register("blue_aternoshroom", () -> new BlueAternoshroomBlock());
	public static final RegistryObject<Block> PAPERWOOD_LOG = REGISTRY.register("paperwood_log", () -> new PaperwoodLogBlock());
	public static final RegistryObject<Block> OSTRUTENE_WOOD = REGISTRY.register("ostrutene_wood", () -> new OstruteneWoodBlock());
	public static final RegistryObject<Block> ACTIVE_OSTRUTENE_WOOD = REGISTRY.register("active_ostrutene_wood", () -> new ActiveOstruteneWoodBlock());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS_STAIRS = REGISTRY.register("ostrutene_planks_stairs", () -> new OstrutenePlanksStairsBlock());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS_SLAB = REGISTRY.register("ostrutene_planks_slab", () -> new OstrutenePlanksSlabBlock());
	public static final RegistryObject<Block> OSTRUTENE_WOOD_6SIDE = REGISTRY.register("ostrutene_wood_6side", () -> new OstruteneWood6sideBlock());
	public static final RegistryObject<Block> ACTIVE_OSTRUTENE_WOOD_6SIDE = REGISTRY.register("active_ostrutene_wood_6side", () -> new ActiveOstruteneWood6sideBlock());
	public static final RegistryObject<Block> COMPRESSED_COBBLEPLATE = REGISTRY.register("compressed_cobbleplate", () -> new CompressedCobbleplateBlock());
	public static final RegistryObject<Block> ALUMINUM_PLATINUM_PLATES = REGISTRY.register("aluminum_platinum_plates", () -> new AluminumPlatinumPlatesBlock());
	public static final RegistryObject<Block> CONCRETE = REGISTRY.register("concrete", () -> new ConcreteBlock());
	public static final RegistryObject<Block> PAPERWOOD_WALL_BLOCK = REGISTRY.register("paperwood_wall_block", () -> new PaperwoodWallBlockBlock());
	public static final RegistryObject<Block> ENCASED_LAMP = REGISTRY.register("encased_lamp", () -> new EncasedLampBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_TRAPDOOR = REGISTRY.register("pure_paperwood_trapdoor", () -> new PurePaperwoodTrapdoorBlock());
	public static final RegistryObject<Block> ACTIVE_CRESIAH_SPOTTED = REGISTRY.register("active_cresiah_spotted", () -> new ActiveCresiahSpottedBlock());
	public static final RegistryObject<Block> CRESIAH_SPOTTED = REGISTRY.register("cresiah_spotted", () -> new CresiahSpottedBlock());
	public static final RegistryObject<Block> ALTAR_CLASSIC = REGISTRY.register("altar_classic", () -> new AltarClassicBlock());
	public static final RegistryObject<Block> SUN_DECORATION = REGISTRY.register("sun_decoration", () -> new SunDecorationBlock());
	public static final RegistryObject<Block> INFEST_CRYSTAL = REGISTRY.register("infest_crystal", () -> new InfestCrystalBlock());
	public static final RegistryObject<Block> TOUGH_TRAP_DOOR = REGISTRY.register("tough_trap_door", () -> new ToughTrapDoorBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD = REGISTRY.register("pure_paperwood", () -> new PurePaperwoodBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_STAIRS = REGISTRY.register("pure_paperwood_stairs", () -> new PurePaperwoodStairsBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_SLAB = REGISTRY.register("pure_paperwood_slab", () -> new PurePaperwoodSlabBlock());
	public static final RegistryObject<Block> LINE_STOP = REGISTRY.register("line_stop", () -> new LineStopBlock());
	public static final RegistryObject<Block> VERTICAL_LINE_STOP = REGISTRY.register("vertical_line_stop", () -> new VerticalLineStopBlock());
	public static final RegistryObject<Block> ACTIVE_LINE_STOP = REGISTRY.register("active_line_stop", () -> new ActiveLineStopBlock());
	public static final RegistryObject<Block> ACTIVE_VERTICAL_LINE_STOP = REGISTRY.register("active_vertical_line_stop", () -> new ActiveVerticalLineStopBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_BUTTON = REGISTRY.register("pure_paperwood_button", () -> new PurePaperwoodButtonBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_PRESSURE_PLATE = REGISTRY.register("pure_paperwood_pressure_plate", () -> new PurePaperwoodPressurePlateBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_FENCE = REGISTRY.register("pure_paperwood_fence", () -> new PurePaperwoodFenceBlock());
	public static final RegistryObject<Block> PURE_PAPERWOOD_FENCE_GATE = REGISTRY.register("pure_paperwood_fence_gate", () -> new PurePaperwoodFenceGateBlock());
	public static final RegistryObject<Block> SLIGHTLY_TINTED_GLASS_PANE_MAGENTA = REGISTRY.register("slightly_tinted_glass_pane_magenta", () -> new SlightlyTintedGlassPaneMagentaBlock());
	public static final RegistryObject<Block> OSTRUTENE_SAPLING = REGISTRY.register("ostrutene_sapling", () -> new OstruteneSaplingBlock());
	public static final RegistryObject<Block> OSTRUTENE_SAPLING_1 = REGISTRY.register("ostrutene_sapling_1", () -> new OstruteneSapling1Block());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS_FENCE = REGISTRY.register("ostrutene_planks_fence", () -> new OstrutenePlanksFenceBlock());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS_FENCE_GATE = REGISTRY.register("ostrutene_planks_fence_gate", () -> new OstrutenePlanksFenceGateBlock());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS_PRESSURE_PLATE = REGISTRY.register("ostrutene_planks_pressure_plate", () -> new OstrutenePlanksPressurePlateBlock());
	public static final RegistryObject<Block> OSTRUTENE_PLANKS_BUTTON = REGISTRY.register("ostrutene_planks_button", () -> new OstrutenePlanksButtonBlock());
	public static final RegistryObject<Block> OSTRUTENE_ACTIVATED_WOOD_ATERNOFESTATION = REGISTRY.register("ostrutene_activated_wood_aternofestation", () -> new OstruteneActivatedWoodAternofestationBlock());
	public static final RegistryObject<Block> OSTRUTENE_WOOD_ATERNOFESTATION = REGISTRY.register("ostrutene_wood_aternofestation", () -> new OstruteneWoodAternofestationBlock());
	public static final RegistryObject<Block> DARK_OAK_DESK = REGISTRY.register("dark_oak_desk", () -> new DarkOakDeskBlock());
	public static final RegistryObject<Block> DARK_OAK_DESK_1 = REGISTRY.register("dark_oak_desk_1", () -> new DarkOakDesk1Block());
	public static final RegistryObject<Block> DARK_OAK_DESK_3 = REGISTRY.register("dark_oak_desk_3", () -> new DarkOakDesk3Block());
	public static final RegistryObject<Block> DARK_OAK_DESK_2 = REGISTRY.register("dark_oak_desk_2", () -> new DarkOakDesk2Block());
	public static final RegistryObject<Block> DARK_OAK_DESK_INNER = REGISTRY.register("dark_oak_desk_inner", () -> new DarkOakDeskInnerBlock());
	public static final RegistryObject<Block> DARK_OAK_TILE = REGISTRY.register("dark_oak_tile", () -> new DarkOakTileBlock());
	public static final RegistryObject<Block> DARK_OAK_TILE_DARKENED = REGISTRY.register("dark_oak_tile_darkened", () -> new DarkOakTileDarkenedBlock());
	public static final RegistryObject<Block> DARK_OAK_TILE_SWAP_PATTERN = REGISTRY.register("dark_oak_tile_swap_pattern", () -> new DarkOakTileSwapPatternBlock());
	public static final RegistryObject<Block> BIRCH_TILE_SWAP_PATTERN = REGISTRY.register("birch_tile_swap_pattern", () -> new BirchTileSwapPatternBlock());
	public static final RegistryObject<Block> BIRCH_TILE = REGISTRY.register("birch_tile", () -> new BirchTileBlock());
	public static final RegistryObject<Block> BIRCH_TILE_DARKENED = REGISTRY.register("birch_tile_darkened", () -> new BirchTileDarkenedBlock());
	public static final RegistryObject<Block> PURG_ABYSS_SERVER_BLOCK_OFF = REGISTRY.register("purg_abyss_server_block_off", () -> new PurgAbyssServerBlockOFFBlock());
	public static final RegistryObject<Block> PURG_ABYSS_SERVER_BLOCK_ON = REGISTRY.register("purg_abyss_server_block_on", () -> new PurgAbyssServerBlockONBlock());
	public static final RegistryObject<Block> VINES = REGISTRY.register("vines", () -> new VinesBlock());
	public static final RegistryObject<Block> GRADIENTED_TILE = REGISTRY.register("gradiented_tile", () -> new GradientedTileBlock());
	public static final RegistryObject<Block> LIMBO_CLOUD = REGISTRY.register("limbo_cloud", () -> new LimboCloudBlock());
	public static final RegistryObject<Block> STARLIT_GRASS_BLOCK = REGISTRY.register("starlit_grass_block", () -> new StarlitGrassBlockBlock());
	public static final RegistryObject<Block> SUNBORN_FLOWER_TOPAZ = REGISTRY.register("sunborn_flower_topaz", () -> new SunbornFlowerTopazBlock());
	public static final RegistryObject<Block> ORNAMENTED_WHITE_GLASS = REGISTRY.register("ornamented_white_glass", () -> new OrnamentedWhiteGlassBlock());
	public static final RegistryObject<Block> ORNAMENTED_WHITE_GLASS_PANE = REGISTRY.register("ornamented_white_glass_pane", () -> new OrnamentedWhiteGlassPaneBlock());
	public static final RegistryObject<Block> ORNAMENTED_PURPLE_GLASS = REGISTRY.register("ornamented_purple_glass", () -> new OrnamentedPurpleGlassBlock());
	public static final RegistryObject<Block> ORNAMENTED_PURPLE_GLASS_PANE = REGISTRY.register("ornamented_purple_glass_pane", () -> new OrnamentedPurpleGlassPaneBlock());
	public static final RegistryObject<Block> ORNAMENTED_RED_GLASS = REGISTRY.register("ornamented_red_glass", () -> new OrnamentedRedGlassBlock());
	public static final RegistryObject<Block> ORNAMENTED_RED_GLASS_PANE = REGISTRY.register("ornamented_red_glass_pane", () -> new OrnamentedRedGlassPaneBlock());
	public static final RegistryObject<Block> CUBE_PATTERNON_SELTAR = REGISTRY.register("cube_patternon_seltar", () -> new CubePatternonSeltarBlock());
	public static final RegistryObject<Block> CAMERA_SYMBOL_ON_SELTAR = REGISTRY.register("camera_symbol_on_seltar", () -> new CameraSymbolOnSeltarBlock());
	public static final RegistryObject<Block> ULTIMACY_SYMBOL_ON_SELTAR = REGISTRY.register("ultimacy_symbol_on_seltar", () -> new UltimacySymbolOnSeltarBlock());
	public static final RegistryObject<Block> NARRATOR_SYMBOL_ON_SELTAR = REGISTRY.register("narrator_symbol_on_seltar", () -> new NarratorSymbolOnSeltarBlock());
	public static final RegistryObject<Block> OPERATOR_SYMBOL_ON_SELTAR = REGISTRY.register("operator_symbol_on_seltar", () -> new OperatorSymbolOnSeltarBlock());
	public static final RegistryObject<Block> OFFICIAL_USER_SYMBOLON_SELTAR = REGISTRY.register("official_user_symbolon_seltar", () -> new OfficialUserSymbolonSeltarBlock());
	public static final RegistryObject<Block> CREATIVE_SYMBOL_ON_SELTAR = REGISTRY.register("creative_symbol_on_seltar", () -> new CreativeSymbolOnSeltarBlock());
	public static final RegistryObject<Block> SYMBOL_OF_SELTAR = REGISTRY.register("symbol_of_seltar", () -> new SymbolOfSeltarBlock());
	public static final RegistryObject<Block> HIVEMIND_SYMBOL_ON_SELTAR = REGISTRY.register("hivemind_symbol_on_seltar", () -> new HivemindSymbolOnSeltarBlock());
	public static final RegistryObject<Block> M_WRITERYMBOL_ON_SELTAR = REGISTRY.register("m_writerymbol_on_seltar", () -> new MWriterymbolOnSeltarBlock());
	public static final RegistryObject<Block> VOID_ALITY_SYMBOL_ON_SELTAR = REGISTRY.register("void_ality_symbol_on_seltar", () -> new VoidAlitySymbolOnSeltarBlock());
	public static final RegistryObject<Block> THE_GARDEN_SIGN_SELTAR = REGISTRY.register("the_garden_sign_seltar", () -> new TheGardenSignSeltarBlock());
	public static final RegistryObject<Block> A_ROOM_SIGN_SELTAR = REGISTRY.register("a_room_sign_seltar", () -> new ARoomSignSeltarBlock());
	public static final RegistryObject<Block> STORAGE_SIGN_SELTAR = REGISTRY.register("storage_sign_seltar", () -> new StorageSignSeltarBlock());
	public static final RegistryObject<Block> SPIRAL_SYMBOL_ON_SELTAR = REGISTRY.register("spiral_symbol_on_seltar", () -> new SpiralSymbolOnSeltarBlock());
	public static final RegistryObject<Block> SELTAR_CONNECTOR = REGISTRY.register("seltar_connector", () -> new SeltarConnectorBlock());
	public static final RegistryObject<Block> SELTAR_LINE = REGISTRY.register("seltar_line", () -> new SeltarLineBlock());
	public static final RegistryObject<Block> CARVED_SELTAR_TOUGH_BRICK = REGISTRY.register("carved_seltar_tough_brick", () -> new CarvedSeltarToughBrickBlock());
	public static final RegistryObject<Block> CARVED_SELTAR_TOUGH_BRICK_1 = REGISTRY.register("carved_seltar_tough_brick_1", () -> new CarvedSeltarToughBrick1Block());
	public static final RegistryObject<Block> CARVED_SELTAR_TOUGH_BRICK_2 = REGISTRY.register("carved_seltar_tough_brick_2", () -> new CarvedSeltarToughBrick2Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK = REGISTRY.register("cracked_wall_brock", () -> new CrackedWallBrockBlock());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_1 = REGISTRY.register("cracked_wall_brock_1", () -> new CrackedWallBrock1Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_2 = REGISTRY.register("cracked_wall_brock_2", () -> new CrackedWallBrock2Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_3 = REGISTRY.register("cracked_wall_brock_3", () -> new CrackedWallBrock3Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_4 = REGISTRY.register("cracked_wall_brock_4", () -> new CrackedWallBrock4Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_5 = REGISTRY.register("cracked_wall_brock_5", () -> new CrackedWallBrock5Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_6 = REGISTRY.register("cracked_wall_brock_6", () -> new CrackedWallBrock6Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_7 = REGISTRY.register("cracked_wall_brock_7", () -> new CrackedWallBrock7Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_8 = REGISTRY.register("cracked_wall_brock_8", () -> new CrackedWallBrock8Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_9 = REGISTRY.register("cracked_wall_brock_9", () -> new CrackedWallBrock9Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_10 = REGISTRY.register("cracked_wall_brock_10", () -> new CrackedWallBrock10Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_11 = REGISTRY.register("cracked_wall_brock_11", () -> new CrackedWallBrock11Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_12 = REGISTRY.register("cracked_wall_brock_12", () -> new CrackedWallBrock12Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_13 = REGISTRY.register("cracked_wall_brock_13", () -> new CrackedWallBrock13Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_14 = REGISTRY.register("cracked_wall_brock_14", () -> new CrackedWallBrock14Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_15 = REGISTRY.register("cracked_wall_brock_15", () -> new CrackedWallBrock15Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_16 = REGISTRY.register("cracked_wall_brock_16", () -> new CrackedWallBrock16Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_17 = REGISTRY.register("cracked_wall_brock_17", () -> new CrackedWallBrock17Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_18 = REGISTRY.register("cracked_wall_brock_18", () -> new CrackedWallBrock18Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_19 = REGISTRY.register("cracked_wall_brock_19", () -> new CrackedWallBrock19Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_20 = REGISTRY.register("cracked_wall_brock_20", () -> new CrackedWallBrock20Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_21 = REGISTRY.register("cracked_wall_brock_21", () -> new CrackedWallBrock21Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_22 = REGISTRY.register("cracked_wall_brock_22", () -> new CrackedWallBrock22Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_23 = REGISTRY.register("cracked_wall_brock_23", () -> new CrackedWallBrock23Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_24 = REGISTRY.register("cracked_wall_brock_24", () -> new CrackedWallBrock24Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_25 = REGISTRY.register("cracked_wall_brock_25", () -> new CrackedWallBrock25Block());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_26 = REGISTRY.register("cracked_wall_brock_26", () -> new CrackedWallBrock26Block());
	public static final RegistryObject<Block> CARVED_SELTAR_TOUGH_BRICK_3 = REGISTRY.register("carved_seltar_tough_brick_3", () -> new CarvedSeltarToughBrick3Block());
	public static final RegistryObject<Block> POLISHED_LIMBO_CLOUD = REGISTRY.register("polished_limbo_cloud", () -> new PolishedLimboCloudBlock());
	public static final RegistryObject<Block> INFESTED_STONE = REGISTRY.register("infested_stone", () -> new InfestedStoneBlock());
	public static final RegistryObject<Block> CLASSIC_LIMBO_CROWN = REGISTRY.register("classic_limbo_crown", () -> new ClassicLimboCrownBlock());
	public static final RegistryObject<Block> SOFT_LIMBO_CROWN = REGISTRY.register("soft_limbo_crown", () -> new SoftLimboCrownBlock());
	public static final RegistryObject<Block> FLOOR_PATTERN = REGISTRY.register("floor_pattern", () -> new FloorPatternBlock());
	public static final RegistryObject<Block> CRACKED_WALL_BROCK_27 = REGISTRY.register("cracked_wall_brock_27", () -> new CrackedWallBrock27Block());
	public static final RegistryObject<Block> NICKNAME_PLUSHIE = REGISTRY.register("nickname_plushie", () -> new NicknamePlushieBlock());
	public static final RegistryObject<Block> DIVIDED_PLUSHIE = REGISTRY.register("divided_plushie", () -> new DividedPlushieBlock());
	public static final RegistryObject<Block> STRUCTURE_BUILDER = REGISTRY.register("structure_builder", () -> new StructureBuilderBlock());
	public static final RegistryObject<Block> DEV_BLOCK = REGISTRY.register("dev_block", () -> new DevBlockBlock());
	public static final RegistryObject<Block> DEV_WALL_BLOCK = REGISTRY.register("dev_wall_block", () -> new DevWallBlockBlock());
	public static final RegistryObject<Block> CHAT_BLOCK = REGISTRY.register("chat_block", () -> new ChatBlockBlock());
	public static final RegistryObject<Block> WEIRD_BRICKS = REGISTRY.register("weird_bricks", () -> new WeirdBricksBlock());
	public static final RegistryObject<Block> BALLS_ONLINE_BLOCK = REGISTRY.register("balls_online_block", () -> new BallsOnlineBlockBlock());
	public static final RegistryObject<Block> AQUA_QUARTZ = REGISTRY.register("aqua_quartz", () -> new AquaQuartzBlock());
	public static final RegistryObject<Block> AQUA_QUARTZ_COLUMN = REGISTRY.register("aqua_quartz_column", () -> new AquaQuartzColumnBlock());
	public static final RegistryObject<Block> AQUA_QUARTZ_GLASS = REGISTRY.register("aqua_quartz_glass", () -> new AquaQuartzGlassBlock());
	public static final RegistryObject<Block> AQUA_TEAL_GLASS = REGISTRY.register("aqua_teal_glass", () -> new AquaTealGlassBlock());
	public static final RegistryObject<Block> TEAL_QUARTZ_GLASS = REGISTRY.register("teal_quartz_glass", () -> new TealQuartzGlassBlock());
	public static final RegistryObject<Block> TEAL_QUARTZ = REGISTRY.register("teal_quartz", () -> new TealQuartzBlock());
	public static final RegistryObject<Block> TEAL_MARINE_COLUMN = REGISTRY.register("teal_marine_column", () -> new TealMarineColumnBlock());
	public static final RegistryObject<Block> TEAL_QUARTZ_COLUMN = REGISTRY.register("teal_quartz_column", () -> new TealQuartzColumnBlock());
	public static final RegistryObject<Block> QUARTZUM_PRISMARINE = REGISTRY.register("quartzum_prismarine", () -> new QuartzumPrismarineBlock());
	public static final RegistryObject<Block> TEAL_PRISMARINE = REGISTRY.register("teal_prismarine", () -> new TealPrismarineBlock());
	public static final RegistryObject<Block> CHISELED_TEAL_QUARTZ = REGISTRY.register("chiseled_teal_quartz", () -> new ChiseledTealQuartzBlock());
	public static final RegistryObject<Block> CHISELED_AQUA_QUARTZ = REGISTRY.register("chiseled_aqua_quartz", () -> new ChiseledAquaQuartzBlock());
	public static final RegistryObject<Block> TEAL_MARINE_QUARTZ = REGISTRY.register("teal_marine_quartz", () -> new TealMarineQuartzBlock());
	public static final RegistryObject<Block> CHISELED_TEAL_MARINE_QUARTZ = REGISTRY.register("chiseled_teal_marine_quartz", () -> new ChiseledTealMarineQuartzBlock());
	public static final RegistryObject<Block> TEST_CHAMBER_WALL_DOWN = REGISTRY.register("test_chamber_wall_down", () -> new TestChamberWallDownBlock());
	public static final RegistryObject<Block> TEST_CHAMBER_WALL_UP = REGISTRY.register("test_chamber_wall_up", () -> new TestChamberWallUpBlock());
	public static final RegistryObject<Block> TEST_CHAMBER_TILE = REGISTRY.register("test_chamber_tile", () -> new TestChamberTileBlock());
	public static final RegistryObject<Block> TEST_CHAMBER_TILE_1 = REGISTRY.register("test_chamber_tile_1", () -> new TestChamberTile1Block());
	public static final RegistryObject<Block> TEALQUARTZWALL = REGISTRY.register("tealquartzwall", () -> new TealquartzwallBlock());
	public static final RegistryObject<Block> TEAL_QUARTZ_STAIRS = REGISTRY.register("teal_quartz_stairs", () -> new TealQuartzStairsBlock());
	public static final RegistryObject<Block> TEAL_QUARTZ_SLAB = REGISTRY.register("teal_quartz_slab", () -> new TealQuartzSlabBlock());
	public static final RegistryObject<Block> QUARTZUM_PRISMARINE_SLAB = REGISTRY.register("quartzum_prismarine_slab", () -> new QuartzumPrismarineSlabBlock());
	public static final RegistryObject<Block> QUARTZUM_PRISMARINE_STAIRS = REGISTRY.register("quartzum_prismarine_stairs", () -> new QuartzumPrismarineStairsBlock());
	public static final RegistryObject<Block> QUARTZUM_PRISMARINE_FENCE = REGISTRY.register("quartzum_prismarine_fence", () -> new QuartzumPrismarineFenceBlock());
	public static final RegistryObject<Block> TEAL_PRISMARINE_SLAB = REGISTRY.register("teal_prismarine_slab", () -> new TealPrismarineSlabBlock());
	public static final RegistryObject<Block> TEAL_PRISMARINE_STAIRS = REGISTRY.register("teal_prismarine_stairs", () -> new TealPrismarineStairsBlock());
	public static final RegistryObject<Block> AQUA_QUARTZ_SLAB = REGISTRY.register("aqua_quartz_slab", () -> new AquaQuartzSlabBlock());
	public static final RegistryObject<Block> AQUA_QUARTZ_STAIRS = REGISTRY.register("aqua_quartz_stairs", () -> new AquaQuartzStairsBlock());
	public static final RegistryObject<Block> AQUA_QUARTZ_WALL = REGISTRY.register("aqua_quartz_wall", () -> new AquaQuartzWallBlock());
	public static final RegistryObject<Block> TEAL_QUARTZ_FENCE = REGISTRY.register("teal_quartz_fence", () -> new TealQuartzFenceBlock());
	public static final RegistryObject<Block> BEDROCK_GLASS = REGISTRY.register("bedrock_glass", () -> new BedrockGlassBlock());
	public static final RegistryObject<Block> DEAD_VOID_BLOCK = REGISTRY.register("dead_void_block", () -> new DeadVoidBlockBlock());
	public static final RegistryObject<Block> REDSTONELANTERN = REGISTRY.register("redstonelantern", () -> new RedstonelanternBlock());
	public static final RegistryObject<Block> VOID_TORCH = REGISTRY.register("void_torch", () -> new VoidTorchBlock());
	public static final RegistryObject<Block> RTC_DBLOCK = REGISTRY.register("rtc_dblock", () -> new RTCDblockBlock());
	public static final RegistryObject<Block> GLASS_3 = REGISTRY.register("glass_3", () -> new Glass3Block());
	public static final RegistryObject<Block> DEBUG_AREA_WALL = REGISTRY.register("debug_area_wall", () -> new DebugAreaWallBlock());
	public static final RegistryObject<Block> DEBUG_AREA_FLOOR = REGISTRY.register("debug_area_floor", () -> new DebugAreaFloorBlock());
	public static final RegistryObject<Block> PROJ_132_FLOOR = REGISTRY.register("proj_132_floor", () -> new Proj132FloorBlock());
	public static final RegistryObject<Block> RTCD_DECORATIVE_BLOCK = REGISTRY.register("rtcd_decorative_block", () -> new RtcdDecorativeBlockBlock());
	public static final RegistryObject<Block> RTCD_DECORATIVE_BLOCK_1 = REGISTRY.register("rtcd_decorative_block_1", () -> new RtcdDecorativeBlock1Block());
	public static final RegistryObject<Block> RTCD_DECORATIVE_BLOCK_2 = REGISTRY.register("rtcd_decorative_block_2", () -> new RtcdDecorativeBlock2Block());
	public static final RegistryObject<Block> RTCD_WALL = REGISTRY.register("rtcd_wall", () -> new RtcdWallBlock());
	public static final RegistryObject<Block> SWITCHSTEP_BRICKS = REGISTRY.register("switchstep_bricks", () -> new SwitchstepBricksBlock());
	public static final RegistryObject<Block> WHITE_LAMP = REGISTRY.register("white_lamp", () -> new WhiteLampBlock());
	public static final RegistryObject<Block> GRAY_LAMP = REGISTRY.register("gray_lamp", () -> new GrayLampBlock());
	public static final RegistryObject<Block> BROWN_LAMP = REGISTRY.register("brown_lamp", () -> new BrownLampBlock());
	public static final RegistryObject<Block> RED_LAMP = REGISTRY.register("red_lamp", () -> new RedLampBlock());
	public static final RegistryObject<Block> ORANGE_LAMP = REGISTRY.register("orange_lamp", () -> new OrangeLampBlock());
	public static final RegistryObject<Block> YELLOW_LAMP = REGISTRY.register("yellow_lamp", () -> new YellowLampBlock());
	public static final RegistryObject<Block> LIME_LAMP = REGISTRY.register("lime_lamp", () -> new LimeLampBlock());
	public static final RegistryObject<Block> GREEN_LAMP = REGISTRY.register("green_lamp", () -> new GreenLampBlock());
	public static final RegistryObject<Block> CYAN_LAMP = REGISTRY.register("cyan_lamp", () -> new CyanLampBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_LAMP = REGISTRY.register("light_blue_lamp", () -> new LightBlueLampBlock());
	public static final RegistryObject<Block> BLUE_LAMP = REGISTRY.register("blue_lamp", () -> new BlueLampBlock());
	public static final RegistryObject<Block> PURPLE_LAMP = REGISTRY.register("purple_lamp", () -> new PurpleLampBlock());
	public static final RegistryObject<Block> MAGENTA_LAMP = REGISTRY.register("magenta_lamp", () -> new MagentaLampBlock());
	public static final RegistryObject<Block> PINK_LAMP = REGISTRY.register("pink_lamp", () -> new PinkLampBlock());
	public static final RegistryObject<Block> RTCD_CONSOLE = REGISTRY.register("rtcd_console", () -> new RtcdConsoleBlock());
	public static final RegistryObject<Block> GLASS_4 = REGISTRY.register("glass_4", () -> new Glass4Block());
	public static final RegistryObject<Block> SWITCH_STEP_TILE = REGISTRY.register("switch_step_tile", () -> new SwitchStepTileBlock());
	public static final RegistryObject<Block> SWITCH_STEP_CHISELED_BLOCK = REGISTRY.register("switch_step_chiseled_block", () -> new SwitchStepChiseledBlockBlock());
	public static final RegistryObject<Block> MOJANG_TILE = REGISTRY.register("mojang_tile", () -> new MojangTileBlock());

	// Start of user code block custom blocks
	// End of user code block custom blocks
	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void blockColorLoad(RegisterColorHandlersEvent.Block event) {
			Door2Block.blockColorLoad(event);
		}
	}
}
