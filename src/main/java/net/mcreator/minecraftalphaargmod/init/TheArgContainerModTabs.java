
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.minecraftalphaargmod.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.event.BuildCreativeModeTabContentsEvent;

import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.CreativeModeTabs;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.network.chat.Component;
import net.minecraft.core.registries.Registries;

import net.mcreator.minecraftalphaargmod.TheArgContainerMod;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
public class TheArgContainerModTabs {
	public static final DeferredRegister<CreativeModeTab> REGISTRY = DeferredRegister.create(Registries.CREATIVE_MODE_TAB, TheArgContainerMod.MODID);
	public static final RegistryObject<CreativeModeTab> MISCELLANEOUS = REGISTRY.register("miscellaneous",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.miscellaneous")).icon(() -> new ItemStack(TheArgContainerModBlocks.MWD.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.ERROR_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINEWATCH_CAMERA_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINEWATCH_CAMERA_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ANDREWGAMING67_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DYLANDOMINECRAFT_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MWD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINE_WATCH_TROPHY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PILLARG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALLG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALLGP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CEILING_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CEILING_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOORCARPET.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOOR_CARPET_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOOR_CARPET_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOOR_NONCARPET_HARD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DOOR_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUEWOOD_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_SAPLING.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_TILE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_WALL_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_GLASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOLDEN_APPLE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IDK_SOMETHINGCOOL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BREDAS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ARG_FANS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLAYMORES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CUBE_OF_HEAVEN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MICHIGAN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFINITIES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INTEGRITIE_CUBE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CAT_CUBE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VINNY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ME_CAT_CUBE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WE_CAT_CUBE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMPRESSED_RIFT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMPRESSED_STATIC.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMPRESSED_STATIC_PORTAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEFECTED_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FRACTURED_INFLUENCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FRACTURED_MIST.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIMINISH_FLOWER.get().asItem());
				tabData.accept(TheArgContainerModItems.BRIXGOA_SPAWN_EGG.get());
				tabData.accept(TheArgContainerModBlocks.PERLIN_GEM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_LIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DBG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MONITOR_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DARK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DARK_STAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_ADMINSPACE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLINE_RED_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_KEYBLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_BLUE_STAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLINE_BLUE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DBG_BLUE_STAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DBG_BLUE_LINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DBG_RED_STAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERLIN_DBG_RED_LINE.get().asItem());
				tabData.accept(TheArgContainerModItems.KEY_DJ.get());
				tabData.accept(TheArgContainerModBlocks.JAMES_22_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModItems.SCYTHE.get());
				tabData.accept(TheArgContainerModBlocks.DEVELOPER_PORTAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHECKERBOARD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHECKERBOARD_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LILYPAD_112.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LILYPAD_1121.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LILYPAD_1122.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LILYPAD_1123.get().asItem());
				tabData.accept(TheArgContainerModItems.USER_0.get());
				tabData.accept(TheArgContainerModItems.FIND.get());
				tabData.accept(TheArgContainerModItems.ANDREWGAMES_722_ITEM.get());
				tabData.accept(TheArgContainerModBlocks.BLOCKRED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLOCKPURIFIED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ITEMCHEST.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REDLIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.EYEBLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TV.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARPET.get().asItem());
				tabData.accept(TheArgContainerModItems.THE_WINGED_CAP_HELMET.get());
				tabData.accept(TheArgContainerModItems.SPACE_TIME_DILATOR.get());
				tabData.accept(TheArgContainerModBlocks.GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SONYA.get().asItem());
				tabData.accept(TheArgContainerModItems.FUNNY_SAND.get());
				tabData.accept(TheArgContainerModItems.WAKE_UP_JAMES.get());
				tabData.accept(TheArgContainerModItems.TWO_WINGED_ANGEL.get());
				tabData.accept(TheArgContainerModItems.LAST_STAND_OF_THE_LEGENDARY_TRIO.get());
				tabData.accept(TheArgContainerModItems.DENIED.get());
				tabData.accept(TheArgContainerModItems.BELIEVEINYOURSELF.get());
				tabData.accept(TheArgContainerModItems.BALLERINAOFTHE_LAND.get());
				tabData.accept(TheArgContainerModBlocks.WHERE_IS_SKY_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModItems.NEGATIVE_SEVEN.get());
				tabData.accept(TheArgContainerModBlocks.INTEL_LEADER_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUBJECT_113_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHEATYDEVPORTAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.JLJLJLJLJL_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHTSHT_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHAMBER_SUSTAINERS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WORKPLACE_HALL_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PIPE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLWAYBLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WORKPLACE_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.B_ZONE_PANEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLWAYBLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OXIDISED_STORAGE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FORSEERS_LAYER_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_PAINTING_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_PAINTING_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_PAINTING_BLOCK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_PAINTING_BLOCK_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ELDERS_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MESSAGE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MESSAGE_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_CONSOLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STATIC_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_CHEST.get().asItem());
				tabData.accept(TheArgContainerModBlocks.C_MAILBOX.get().asItem());
				tabData.accept(TheArgContainerModItems.MAIL.get());
				tabData.accept(TheArgContainerModBlocks.COLORED_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COLORED_TILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PAVEMENT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_9.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_10.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_11.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_12.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_13.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DOOR_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRIDSTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYSTERY_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYSTERY_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ENVELOPED_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ENVELOPMENT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEV_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEV_WALL_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHAT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WEIRD_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BALLS_ONLINE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEST_CHAMBER_WALL_DOWN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEST_CHAMBER_WALL_UP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEST_CHAMBER_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEST_CHAMBER_TILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BEDROCK_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEAD_VOID_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REDSTONELANTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_TORCH.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> JOHN = REGISTRY.register("john",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.john")).icon(() -> new ItemStack(TheArgContainerModBlocks.AUTHENTICATOR.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.AUTHENTICATOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOJANG_LOGO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURPLE_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.EMPTY_LOGO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WINDOW.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRICK_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRICK_WALL_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRICK_WALL_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOOR_TILES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_MOJANG_LOGO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_PILLAR_UPDATED_VERSION.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> CONTROL = REGISTRY.register("control",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.control")).icon(() -> new ItemStack(TheArgContainerModBlocks.BRICK_TILES.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.BRICK_TILES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRICK_TILES_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARPETED_SMOOTH_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MARBLE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MARBLE_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CUT_MARBLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILED_SMOOTH_SLABS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LACUNA_KEYPAD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHAIN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LACUNA_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CUT_LACUNA_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PADDED_LACUNA_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ROSE_FLOWER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOLID_LEAVES.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> LAVACRUSADER = REGISTRY.register("lavacrusader",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.lavacrusader")).icon(() -> new ItemStack(TheArgContainerModBlocks.UNKNOWN.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.UNKNOWN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_9.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_10.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_11.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_12.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_13.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_14.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_15.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_16.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_17.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_18.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_19.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_20.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_21.get().asItem());
				tabData.accept(TheArgContainerModItems.CAT_THEME.get());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_22.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_23.get().asItem());
				tabData.accept(TheArgContainerModItems.ARRIVAL.get());
				tabData.accept(TheArgContainerModItems.DBG_SPAWN_EGG.get());
				tabData.accept(TheArgContainerModItems.BLUE_GIANT_SPAWN_EGG.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> UNUSED = REGISTRY.register("unused",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.unused")).icon(() -> new ItemStack(TheArgContainerModBlocks.CELESTIAL_FLAME.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.U_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_9.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_11.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_SHOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_SHOP_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MESH_BLOCK_DOWN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MESH_BLOCK_UP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_BLOCK_10.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNUSED_6.get().asItem());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_1.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_2.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_3.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_4.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_5.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_6.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_7.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_8.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_9.get());
				tabData.accept(TheArgContainerModItems.UNUSED_ITEM_10.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_1.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_3.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_2.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_4.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_5.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_6.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_7.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_8.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_9.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_10.get());
				tabData.accept(TheArgContainerModItems.UNUSED_TOOL_11.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> MINECRAFT_SURVIVAL_GLITCHY = REGISTRY.register("minecraft_survival_glitchy",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.minecraft_survival_glitchy")).icon(() -> new ItemStack(TheArgContainerModBlocks.CYBERSPACE_EYE.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.CYBERSPACE_EYE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CYBERSPACE_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CYBERSPACE_BODDY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CYBERSPACE_DATA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CYBERSPACE_STAND.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> THEDECAYED = REGISTRY.register("thedecayed",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.thedecayed")).icon(() -> new ItemStack(TheArgContainerModBlocks.ARCHITECT_ICON_BLOCK.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.EXEC_05_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.KARGOSH_1P_Z_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SAND_YCARPS_8_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOCHISELED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOFLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBO_FLOOR_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOFLOOR_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOPILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOPOLISHED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOPOLISHED_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOPOLISHED_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBODOORLOWER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBOLANTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABGRUNDBRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABGRUNDDARKPRISMARINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABGRUNDGROUND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABGRUND_BRICKS_BRIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABGRUND_DARK_PRISMARINE_BRIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABGRUND_GROUND_BRIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_KEEPERS_CHISELED_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_KEEPERS_GENERIC_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_KEEPERS_GLASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_KEEPERS_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_KEEPERS_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_KEEPERS_POLISHED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CREATOR_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FOUNDER_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INSTIGATOR_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SHAPER_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ARCHITECT_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AUTHOR_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INVENTOR_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORIGINATOR_ICON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_CHISELED_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_GENERIC_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_GLASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_POLISHED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_KEEPERS_SMOOTH_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_TERMINAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_SYMBOL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_LEAVES_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_CRAFTING_TABLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_OAK_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_OAK_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_OAK_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIGHT_BLUE_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_T_ILE_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_BLUE_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_GLOWSTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_LILAC.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_WALL_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OFFICE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_WALL_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_TERMINAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_LOGO.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_NUMBER_9.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICE_LANTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_SMOOTH_STONE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_TILE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_GLOWSTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_STONE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_BOOKSHELF.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECAYED_IRON_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_TILE_9.get().asItem());
				tabData.accept(TheArgContainerModItems.LIMBO_CRYSTALS.get());
				tabData.accept(TheArgContainerModItems.LIMBO_SHARD.get());
				tabData.accept(TheArgContainerModItems.RED_PAPER.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> CLASSIC_MINECRAFT = REGISTRY.register("classic_minecraft",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.classic_minecraft")).icon(() -> new ItemStack(TheArgContainerModBlocks.CLASSIC_MINECRAFT_TROPHY.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.RUBY_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RUBY_SOULER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IRON_SOULER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOLD_SOULER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PORTAL_DISABLED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PORTAL_ENABLED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PORTAL_RESTRICTED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AMONG_US_TNT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RUBY_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABCD_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.EFGH_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IJKL_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MNOP_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UVWX_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.QRST_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YZ_01_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMMUNICATION_BLOCK_2345.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMMUNICATION_BLOCK_6789.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_GRAY_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRAY_RED_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CAPS_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HAPPY_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SAD_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_BLUE_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_GREEN_COMMUNICATION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALF_SOUL_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AMONG_US_BOOKSHELF.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AMONG_US_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_BOOKSHELF.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_COAL_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_DIRT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_GOLD_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_GOLD_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_IRON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_IRON_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_PLANK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_OBSIDIAN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_SAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_TNT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_GRAVEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_SPONGE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_MOSSY_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEAD_ROSE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_WORKBENCH.get().asItem());
				tabData.accept(TheArgContainerModItems.RUBY.get());
				tabData.accept(TheArgContainerModBlocks.CLASSIC_MINECRAFT_TROPHY.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> FANMADE = REGISTRY.register("fanmade",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.fanmade")).icon(() -> new ItemStack(TheArgContainerModBlocks.FIREWOOD.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.FIREWOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FIREWOOD_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FIREWOOD_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMPACTED_CELESTIAL_FLAME.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFUSED_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFUSED_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFUSED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMOOTH_STONE_F.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMOOTH_INFUSED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WIREFRAME.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COBBLESTONE_FANCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFUSED_COBBLESTONE_FANCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STORE_BLOCK_1_F.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STORE_BLOCK_2_F.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FIREWOOD_DOOR_F.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OBSIDIAN_FORGE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AFLITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IKEN_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IKEN_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IKEN_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFUSED_AFLITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_CAGE_EMPTY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOUL_CAGE_FULL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IKEN_DOOR.get().asItem());
				tabData.accept(TheArgContainerModItems.AFLITE.get());
				tabData.accept(TheArgContainerModBlocks.GLOWING_OBSIDIAN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AFLITE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FIREWOOD_SAPLING.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOWER_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModItems.ENGINEER_HELMET.get());
				tabData.accept(TheArgContainerModItems.ENGINEER_CHESTPLATE.get());
				tabData.accept(TheArgContainerModItems.ENGINEER_LEGGINGS.get());
				tabData.accept(TheArgContainerModItems.ENGINEER_BOOTS.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> DELTA_QUEST = REGISTRY.register("delta_quest",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.delta_quest")).icon(() -> new ItemStack(TheArgContainerModBlocks.TBOTV_TROPHY.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.EXPERIMENT_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ERROR_CONTAINMENT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARD_READER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_TILE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_TILE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TERMINAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRIGHTNESS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRIGHTNESS_BLOCK_OFF.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_COLUMN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_SPACE_FLOOR_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_SPACE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_TECH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_TERMINAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.KEY_SLOTTER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOJANG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SERVER_CONTAINERS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SERVER_COOLING_FAN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PSI_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STAR_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.X_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.Y_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModItems.VOID_KEY.get());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRUPTED_CARD_READER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOON_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_SPACE_FLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_EXPOSED_PIPES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_LANTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_LIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_MACHINERY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_NETTING.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_SMOOTH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_RAILING.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_SUPPORTS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_TILED_PIPES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_TRACKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DELTA_END_SKY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DELTA_END_STONE.get().asItem());
				tabData.accept(TheArgContainerModItems.ASSETSTILESACCEPT.get());
				tabData.accept(TheArgContainerModItems.ASSETSTILESDENY.get());
				tabData.accept(TheArgContainerModBlocks.EXPERIMENT_GLASS_PANE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.JAR.get().asItem());
				tabData.accept(TheArgContainerModItems.VOID_GEM.get());
				tabData.accept(TheArgContainerModBlocks.VOID_GEM_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CREEPERS_HEART.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIVING_VOID_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SHELVE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MUSIC_PLAYER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SQUIRMING_ORGANISM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MELTED_VOID_BEING_ROCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HELL_BULB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TBOTV_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TBOTVBRICKSSTAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TBOTV_BRICKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModItems.SERVER_DRIVE.get());
				tabData.accept(TheArgContainerModBlocks.ORGANISM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_EMPTY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_MINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_TRIGGERED_MINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_FLAG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_CROSSED_MINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_QUESTIONMARK_BUTTON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MINESWEEPER_QUESTIONMARK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEBUG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEBUG_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_7.get().asItem());
				tabData.accept(TheArgContainerModItems.KEYCARD.get());
				tabData.accept(TheArgContainerModBlocks.TERREN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STAR_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AUTHOR_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_VINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TBOTV_TROPHY.get().asItem());
				tabData.accept(TheArgContainerModItems.JUMPGRADE.get());
				tabData.accept(TheArgContainerModItems.EXCHANGER.get());
				tabData.accept(TheArgContainerModBlocks.DATA_DAISY.get().asItem());
				tabData.accept(TheArgContainerModItems.NOISE_SUP.get());
				tabData.accept(TheArgContainerModBlocks.QUEST_GIVER.get().asItem());
				tabData.accept(TheArgContainerModItems.QUEST_MANAGER.get());
				tabData.accept(TheArgContainerModItems.DEV_PROMO.get());
				tabData.accept(TheArgContainerModBlocks.FF_33D_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_00.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_10.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_20.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_30.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_40.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_50.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_60.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_70.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_80.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_90.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_100.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_110.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_120.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_130.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_140.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_150.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_160.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_170.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_180.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_190.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_200.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_210.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_220.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_230.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_240.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_250.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_260.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_270.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_280.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLAIZE_290.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TBOTV_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_PSI_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_PSI_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ANKH_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UMBRELLA_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MONITOR_24.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FISH_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_STAR_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_MOJANG_BLOCK_TBOTV.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOTE_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CIRCLE_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ARROW_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DOUBLE_ARROW_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.QUESTION_MARK_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GI_4_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_SYMBOL_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWNSYMBOL_0MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWNSYMBOL_1MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWNSYMBOL_2MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWNSYMBOL_3MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_COLUMN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIGHT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLACK_FLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLACK_FLOOR_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_BLOCK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WALL_BLOCK_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOOGOGO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOOGOGO_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STAR_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GROUNDSPONGEFLAP_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BOTOM_2_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRATE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOWDEV_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PERIL_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASHES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AMBER_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_DEBUG_SPHERE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ETHEREAL_SAP_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRID_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MACHINATION_CONVERTER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MARBLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIVING_VOID_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_COLUMN_CROSS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMINCOLUMNCROSS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASH_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRAYSCALED_OAK_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRAYSCALED_OAK_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRAYSCALED_OAK_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_TILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_TILE_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_TILE_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_TILE_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_TILE_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREJANG_BASEMENT_MONITOR_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDOR_FENCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CATWALK_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CATWALK_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_SPACE_FLOOR_TILE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ADMIN_SPACE_FLOOR_TILE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDORSUPPORTS_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CORRIDORNETTING_1.get().asItem());
				tabData.accept(TheArgContainerModItems.VOID_VEST_BODY_CHESTPLATE.get());
				tabData.accept(TheArgContainerModBlocks.DELTA_QUEST_LOG.get().asItem());
				tabData.accept(TheArgContainerModItems.MOONFALL.get());
				tabData.accept(TheArgContainerModItems.SAW_13_RETURNS.get());
				tabData.accept(TheArgContainerModItems.VOID_EXP.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> CHRISTOPHER_PLAYZ = REGISTRY.register("christopher_playz",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.christopher_playz")).icon(() -> new ItemStack(TheArgContainerModBlocks.VOID_CROSS.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_MINI_TILES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_CLOSER_MINI_TILES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOISE_GEM_LARGE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DELTA_COMMAND_INTERFACE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SHATTERED_COMMAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STATIC_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUEWIRE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLITCHED_STRUCTURE_POINT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CINDER_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CINDER_BLOCK_CARVED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MESSED_UP_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLITCHED_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLITCHEDTILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLITCHEDTILE_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLITCHEDTILE_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLITCHEDTILE_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.A_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.B_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.C_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.D_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.E_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.F_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.G_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.H_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.I_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.J_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.K_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.L_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.M_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.N_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.O_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.P_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.Q_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.R_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.S_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.T_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.U_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.V_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.W_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.X_MONITOR_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.Y_MONITOR_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.Z_MONITOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_CROSS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_PATH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_LIGHT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_LIGHT_OFF.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_TILE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_PATH_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_SUPPORT_VARIENT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_SUPPORT_VARIENT_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_FENCE_VARIENT_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_FENCE_VARIENT_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_WALL_VARIENT_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_WALL_VARIENT_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_CROSS_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_PATH_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_PILLAR_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_LIGHT_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_LIGHT_OFF_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_TILE_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOIDSUPPORTVARIENT_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOIDSUPPORTVARIENT_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOIDFENCEVARIENT_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOIDFENCEVARIENT_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOIDWALLVARIENT_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOIDWALLVARIENT_4.get().asItem());
				tabData.accept(TheArgContainerModItems.AUTHOR_ATOMIZER.get());
				tabData.accept(TheArgContainerModItems.RANGER_BULLET.get());
				tabData.accept(TheArgContainerModItems.RANGER.get());
				tabData.accept(TheArgContainerModItems.GOL_FRUIT.get());
				tabData.accept(TheArgContainerModBlocks.GOL_FRUIT_SEED.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> ALPHA = REGISTRY.register("alpha",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.alpha")).icon(() -> new ItemStack(TheArgContainerModBlocks.ALPHAVER_LOGO.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MIXED_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SNOWY_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIRT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASH_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASH_GRASS_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASH_DIRT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_ASH_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BISMUTH_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MALACHITE_ORE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PYRITE_ORE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLINOHUMITE_ORE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LACE_AGATE_ORE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MALACHITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PYRITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLINOHUMITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LACE_AGATE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LR_COAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LR_IRON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LR_GOLD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LR_DIAMOND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LR_REDSTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_BUSH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEEDOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEA_WORKBENCH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DLAMEWOOD_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLAMEWOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLAMEWOOD_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLAMEWOOD_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLAMEWOOD_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLAMEWOOD_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FIREWOOD_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FIREWOOD_WORKBENCH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_CAP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLOWING_MYCON_CAP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_STEM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_PLANK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCONPLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MYCON_WORKBENCH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOODPLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOODPLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_WORKBENCH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIGHWOOD_ROOTS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FAKE_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FAKEDIRT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FAKE_SAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WATER_LILY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLAME_INFUSED_LILY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOLD_INFUSED_LILY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OBSIDIAN_INFUSED_LILY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_LILI.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CELESTIAL_FLAME.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIMENSION_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIMENSION_FLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_DIMENSION_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_DIMENSION_TILE.get().asItem());
				tabData.accept(TheArgContainerModItems.BISMUTH_INGOT.get());
				tabData.accept(TheArgContainerModBlocks.BISMUTH_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BISMUTH_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BISMUTH_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FRIGID_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SALT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SALT_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModItems.GRANULAR_SALT.get());
				tabData.accept(TheArgContainerModBlocks.ALTERNATIVE_DIMENSION_WALL.get().asItem());
				tabData.accept(TheArgContainerModItems.OBSIDIAN_INGOT.get());
				tabData.accept(TheArgContainerModBlocks.GRASS_PATHWAY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LACE_AGATE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MALACHITE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PYRITE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLINOHUMITE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_RIVER_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_RIVERBED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SNOW_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREENSTONE_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COAL_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_MYCON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ELDERSTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ELDER_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ELDER_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ELDER_DECORATED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOLD_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIAMOND_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IRON_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ELDER_SMOOTH_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLATE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LICHEN_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLATE_BEACON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLATE_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HEATER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WIREFRAME_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FAKE_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_MOJANG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_MOJANG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_MOJANG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FREEZER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OBSIDIAN_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECORATIVE_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DECORATIVE_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SKY_FLAME_IN_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_FLAME_IN_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOLD_FLAME_IN_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OBSIDIAN_FLAME_IN_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GOLD_ELDER_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LICHEN_MASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LICHEN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRUDE_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMOOTH_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMOOTH_LIMESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ESSENCE_TRANSFORMER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ESSENCE_CLONER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_DIMENSION_FLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COBBLED_LIMESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FORTIFIED_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FORTIFIED_BLUE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FORTIFIED_GREEN_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FORTIFIED_MAGENTA_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FORTIFIED_BLACK_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_WART.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOW_WINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HYDRANGEA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SAFE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BRICKS.get().asItem());
				tabData.accept(TheArgContainerModItems.HEARTHEN_MIRROR.get());
				tabData.accept(TheArgContainerModBlocks.LICHEN_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModItems.MYCON_STRAND.get());
				tabData.accept(TheArgContainerModItems.CLINOHUMITE.get());
				tabData.accept(TheArgContainerModItems.TEA_LEAF.get());
				tabData.accept(TheArgContainerModItems.TEA_BUCKET.get());
				tabData.accept(TheArgContainerModItems.PYRITE.get());
				tabData.accept(TheArgContainerModItems.MALACHITE.get());
				tabData.accept(TheArgContainerModItems.LACE_AGATE.get());
				tabData.accept(TheArgContainerModItems.OBSERVER_FUR.get());
				tabData.accept(TheArgContainerModBlocks.TARGET.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ESSENCE_CACHE.get().asItem());
				tabData.accept(TheArgContainerModItems.ESSENCE.get());
				tabData.accept(TheArgContainerModItems.LIQUIDFIED_FLAME.get());
				tabData.accept(TheArgContainerModBlocks.ROSE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DANDELION.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_HEALTH_TOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_HEALTH_BOTTOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_ARRMOR_TOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_ARMOR_BOTTOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_DASH_TOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_DASH_BOTTOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_REVIVE_TOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VENDING_MACHINE_REVIVE_BOTTOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WEAPON_UPGRADER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STAIR_LADDER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TRINITY_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LOOP_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOLAL_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASSOCIATION_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DENIAL_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIALECT_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MIRRORS_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PART_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SWITCH_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SYLLABLES_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ESSENCEFOUNTAIN.get().asItem());
				tabData.accept(TheArgContainerModItems.FRIGID_BITS.get());
				tabData.accept(TheArgContainerModBlocks.HUB_DOOR.get().asItem());
				tabData.accept(TheArgContainerModItems.SUNGLASSES_HELMET.get());
				tabData.accept(TheArgContainerModItems.HOURS_LONG_PAST_I.get());
				tabData.accept(TheArgContainerModItems.HOURS_LONG_PAST_II.get());
				tabData.accept(TheArgContainerModItems.HOURS_LONG_PAST_III.get());
				tabData.accept(TheArgContainerModItems.HOURS_LONG_PAST_IV.get());
				tabData.accept(TheArgContainerModItems.THE_ONE_TRUE_BOOK.get());
				tabData.accept(TheArgContainerModItems.CANDY_ICE.get());
				tabData.accept(TheArgContainerModItems.GRAY_GUN.get());
				tabData.accept(TheArgContainerModItems.RAIN_CONCH.get());
				tabData.accept(TheArgContainerModItems.DOWNBEAT_UPLINK.get());
				tabData.accept(TheArgContainerModItems.DESAMBRIER.get());
				tabData.accept(TheArgContainerModItems.GYLDAN_SVERD.get());
				tabData.accept(TheArgContainerModItems.JUHRY.get());
				tabData.accept(TheArgContainerModItems.HIDDENDEN.get());
				tabData.accept(TheArgContainerModItems.LEMURIA.get());
				tabData.accept(TheArgContainerModItems.CONDEMNED.get());
				tabData.accept(TheArgContainerModItems.K_2.get());
				tabData.accept(TheArgContainerModItems.SANDCASTLES.get());
				tabData.accept(TheArgContainerModBlocks.GHOST_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLOWING_CASE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NO_NAME_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLACK_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MAGENTA_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLOTH_PANEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLACK_CLOTH_PANEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_CLOTH_PANEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MAGENTA_CLOTH_PANEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_CLOTH_PANEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEBUG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEBUG_X.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEV_1_PLUSHY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BOOKSHELF_ALPHA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.EMPTY_BOOKSHELF_ALPHA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FRIGID_TRUNK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ICE_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WOODEN_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WOODEN_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRAVEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OBSIDIAN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WOODEN_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COBBLESTONE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ICE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WORKBENCH.get().asItem());
				tabData.accept(TheArgContainerModItems.PEAR.get());
				tabData.accept(TheArgContainerModItems.OBSIDIAN_PEAR.get());
				tabData.accept(TheArgContainerModItems.ESSENCE_RIFLE.get());
				tabData.accept(TheArgContainerModBlocks.GREENSCREENBLOCK.get().asItem());
				tabData.accept(TheArgContainerModItems.ROCK_BEETLE.get());
				tabData.accept(TheArgContainerModBlocks.ASH_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASH_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ASH_TORCH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ALPHAVER_LOGO.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BUGNATION_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEW_BISMUTH_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEW_PYRITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEW_CLINOHUMITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEW_LACE_AGATE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEW_MALACHITE_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_SMOOTH_STONE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OTHER_JUKEBOX.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_MOJANG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_MOJANG_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_MOJANG_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_HUB_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_SLATE_BEACON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_SLATE_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_FAKE_SAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_FAKE_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_SLATE_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_STONE_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_TILE_YELLOW.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_TILE_BLUE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_HIGHWOOD_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_HIGHWOOD_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_FAKE_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_FAKE_DIRT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HUB_HIGHWOOD_ROOTS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.IDKSK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TORCH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREENSTONE_TORCH.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> CLAYTONM_634 = REGISTRY.register("claytonm_634",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.claytonm_634")).icon(() -> new ItemStack(TheArgContainerModBlocks.SMILE.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.RED_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_LOG_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPEED_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLOW_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLASS_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ANTI_FRICTION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHARED_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHARED_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHARED_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHARED_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHARED_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMILE_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMILE_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMILE_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMILE_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SMILE_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIDDENITEORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIDDENITEOREBLOCK.get().asItem());
				tabData.accept(TheArgContainerModItems.SPEEDBRICK.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_ARRMOR_ARMOR_HELMET.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_ARRMOR_ARMOR_CHESTPLATE.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_ARRMOR_ARMOR_LEGGINGS.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_ARRMOR_ARMOR_BOOTS.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_TOOL_PICKAXE.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_TOOL_AXE.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_TOOL_SWORD.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_TOOL_SHOVEL.get());
				tabData.accept(TheArgContainerModItems.HIDDENITE_TOOL_HOE.get());
				tabData.accept(TheArgContainerModItems.GLASS_BRICK.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> VOID_ALITY = REGISTRY.register("void_ality",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.void_ality")).icon(() -> new ItemStack(TheArgContainerModBlocks.ABYSS_AAB_CORE.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.JUMPER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPEED_UP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLIMBER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POISONER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_AAB_CORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TOUGH_BLATTEA_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_LINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CONNECTOR_RHOMBUS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_CONNECTOR_RHOMBUS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NATIONAL_SYMBOL_OF_ABYSS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_BLACK_HOLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TOUGH_BRICK_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TOUGH_BRICK_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SLIGHTLY_TINTED_GLASS_MAGENTA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POLISHED_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_TOUGH_BLATTEA_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POLISHED_TOUGH_FENCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POLISHED_TOUGH_FENCE_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURG_ABYSS_SERVER_BLOCK_OFF_2D.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURG_ABYSS_SERVER_BLOCK_ON_2D.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POLISHED_TOUGH_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POLISHED_TOUGH_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFESTED_BLATTEA_ORE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YES_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModItems.BLATTEA_SHARD.get());
				tabData.accept(TheArgContainerModItems.NOTEPAD.get());
				tabData.accept(TheArgContainerModBlocks.NO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TRIANGLE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_IN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBO_SQUARE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_RESISTENCE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_EMPTY_GLASS_FRAME.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_SUPPORTER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TOUGH_GRID.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_FERTILE_SOIL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_FERTILE_SOIL_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_FERTILE_SOIL_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MEDROOM_LIT_CROSS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MEDROOM_CROSS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRADIENT_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRADIENT_LEAVES_PINK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRADIENT_LEAVES_CENTRAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRADIENT_LEAVES_BLUE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRADIENT_LEAVES_PURPLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_DOOR.get().asItem());
				tabData.accept(TheArgContainerModItems.CONTR_INFESTAS_MULTITOOL.get());
				tabData.accept(TheArgContainerModItems.ABYSS_CRYSTAL.get());
				tabData.accept(TheArgContainerModItems.CONTR_INFESTAS_BLADE.get());
				tabData.accept(TheArgContainerModItems.VITA_ABYSS_SWORD.get());
				tabData.accept(TheArgContainerModBlocks.TOUGH_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MIDGEM_SQUARED_FRAME.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MIDGEM_RHOMBD_FRAME.get().asItem());
				tabData.accept(TheArgContainerModItems.VERIFI_CARD.get());
				tabData.accept(TheArgContainerModItems.VERIFI_CARD_1.get());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_ACTIVE_BRICK_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_FLOOR_STAIRS_ACTIVE_LINED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_FLOOR_STAIRS_LINED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ABYSS_FLOOR_SLAB_LINED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_CRESIAH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRESIAH.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ATERNOSHROOM_SOIL_PURPLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ATERNOSHROOM_SOIL_PINK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ATERNOSHROOM_SOIL_BLUE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURPLE_ATERNOSHROOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PINK_ATERNOSHROOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_ATERNOSHROOM.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PAPERWOOD_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_OSTRUTENE_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_ACTIVATED_WOOD_ATERNOFESTATION.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_WOOD_ATERNOFESTATION.get().asItem());
				tabData.accept(TheArgContainerModItems.OSTRUTENE_STICK.get());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_WOOD_6SIDE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_OSTRUTENE_WOOD_6SIDE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.COMPRESSED_COBBLEPLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ALUMINUM_PLATINUM_PLATES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CONCRETE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PAPERWOOD_WALL_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ENCASED_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_TRAPDOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_CRESIAH_SPOTTED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRESIAH_SPOTTED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ALTAR_CLASSIC.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUN_DECORATION.get().asItem());
				tabData.accept(TheArgContainerModItems.CORE_CRYSTAL.get());
				tabData.accept(TheArgContainerModItems.TESTER_BULLET.get());
				tabData.accept(TheArgContainerModItems.PURIFIER_TEST_TOOL.get());
				tabData.accept(TheArgContainerModItems.MIDGEM.get());
				tabData.accept(TheArgContainerModBlocks.INFEST_CRYSTAL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TOUGH_TRAP_DOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_PRESSURE_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_FENCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_FENCE_GATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURE_PAPERWOOD_BUTTON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LINE_STOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VERTICAL_LINE_STOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_LINE_STOP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ACTIVE_VERTICAL_LINE_STOP.get().asItem());
				tabData.accept(TheArgContainerModItems.ICON.get());
				tabData.accept(TheArgContainerModItems.ICON_1.get());
				tabData.accept(TheArgContainerModItems.ICON_2.get());
				tabData.accept(TheArgContainerModItems.ICON_3.get());
				tabData.accept(TheArgContainerModItems.ICON_4.get());
				tabData.accept(TheArgContainerModItems.ICON_5.get());
				tabData.accept(TheArgContainerModItems.ICON_6.get());
				tabData.accept(TheArgContainerModItems.ICON_7.get());
				tabData.accept(TheArgContainerModItems.ICON_8.get());
				tabData.accept(TheArgContainerModItems.CUSTOM_ICON.get());
				tabData.accept(TheArgContainerModItems.CUSTOM_ICON_1.get());
				tabData.accept(TheArgContainerModItems.CUSTOM_ICON_2.get());
				tabData.accept(TheArgContainerModItems.MUSIC_BUNDLE.get());
				tabData.accept(TheArgContainerModItems.AAB_BOOK.get());
				tabData.accept(TheArgContainerModItems.RUVIOS_CLAYMORE.get());
				tabData.accept(TheArgContainerModItems.ADMIN_PANEL.get());
				tabData.accept(TheArgContainerModBlocks.SLIGHTLY_TINTED_GLASS_PANE_MAGENTA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_SAPLING.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_SAPLING_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS_FENCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS_FENCE_GATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS_PRESSURE_PLATE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OSTRUTENE_PLANKS_BUTTON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_DESK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_DESK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_DESK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_DESK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_DESK_INNER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_TILE_DARKENED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DARK_OAK_TILE_SWAP_PATTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BIRCH_TILE_SWAP_PATTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BIRCH_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BIRCH_TILE_DARKENED.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURG_ABYSS_SERVER_BLOCK_OFF.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURG_ABYSS_SERVER_BLOCK_ON.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VINES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRADIENTED_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMBO_CLOUD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STARLIT_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUNBORN_FLOWER_TOPAZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORNAMENTED_WHITE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORNAMENTED_WHITE_GLASS_PANE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORNAMENTED_PURPLE_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORNAMENTED_PURPLE_GLASS_PANE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORNAMENTED_RED_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORNAMENTED_RED_GLASS_PANE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CUBE_PATTERNON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CAMERA_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ULTIMACY_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NARRATOR_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OPERATOR_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.OFFICIAL_USER_SYMBOLON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CREATIVE_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SYMBOL_OF_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HIVEMIND_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.M_WRITERYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.VOID_ALITY_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.THE_GARDEN_SIGN_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.A_ROOM_SIGN_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STORAGE_SIGN_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPIRAL_SYMBOL_ON_SELTAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SELTAR_CONNECTOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SELTAR_LINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARVED_SELTAR_TOUGH_BRICK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARVED_SELTAR_TOUGH_BRICK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARVED_SELTAR_TOUGH_BRICK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CARVED_SELTAR_TOUGH_BRICK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_4.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_5.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_6.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_7.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_8.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_9.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_10.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_11.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_12.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_13.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_14.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_15.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_16.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_17.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_18.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_19.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_20.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_21.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_22.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_23.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_24.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_25.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_26.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CRACKED_WALL_BROCK_27.get().asItem());
				tabData.accept(TheArgContainerModBlocks.POLISHED_LIMBO_CLOUD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.INFESTED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CLASSIC_LIMBO_CROWN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SOFT_LIMBO_CROWN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOOR_PATTERN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_QUARTZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_QUARTZ_COLUMN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_QUARTZ_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_TEAL_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_QUARTZ_GLASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_QUARTZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_MARINE_COLUMN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_QUARTZ_COLUMN.get().asItem());
				tabData.accept(TheArgContainerModBlocks.QUARTZUM_PRISMARINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_PRISMARINE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHISELED_TEAL_QUARTZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHISELED_AQUA_QUARTZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_MARINE_QUARTZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHISELED_TEAL_MARINE_QUARTZ.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEALQUARTZWALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_QUARTZ_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_QUARTZ_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.QUARTZUM_PRISMARINE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.QUARTZUM_PRISMARINE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.QUARTZUM_PRISMARINE_FENCE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_PRISMARINE_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_PRISMARINE_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_QUARTZ_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_QUARTZ_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.AQUA_QUARTZ_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TEAL_QUARTZ_FENCE.get().asItem());
				tabData.accept(TheArgContainerModItems.DELETION_TOOL.get());
				tabData.accept(TheArgContainerModItems.HEALER_HEART_TOOL.get());
				tabData.accept(TheArgContainerModItems.QUARTZUM_SWORD.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> SPECIAL_THANKS = REGISTRY.register("special_thanks",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.special_thanks")).icon(() -> new ItemStack(Blocks.PLAYER_HEAD)).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.GLITCHY.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MIKI_110_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ATOM_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NICKNAME_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIVIDED_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DOTTYCH_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MARIOOOD_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GNAWMON_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ANDREWIDOT_PLUSHIE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIMINAL_PLUSHIE.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> MINECRAFT_RTCD = REGISTRY.register("minecraft_rtcd",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.minecraft_rtcd")).icon(() -> new ItemStack(TheArgContainerModBlocks.RTC_DBLOCK.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.GLASS_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLASS_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLASS_3.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRASS_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DISCO_BALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MISSING_DBG_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHECKERBOARD_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_MOJANG_LOGO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORENGE_MOJANG_LOGO_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UPDATE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PATTERN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TILE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WOOD_PILLAR_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_24.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SWITCH_STEP_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SWITCH_STEP_CHISELED_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MOJANG_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_25.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_26.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RTC_DBLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEBUG_AREA_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DEBUG_AREA_FLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PROJ_132_FLOOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RTCD_DECORATIVE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RTCD_DECORATIVE_BLOCK_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RTCD_DECORATIVE_BLOCK_2.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RTCD_WALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RTCD_CONSOLE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SWITCHSTEP_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.WHITE_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRAY_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BROWN_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.ORANGE_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.YELLOW_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIME_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CYAN_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.LIGHT_BLUE_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.BLUE_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURPLE_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.MAGENTA_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PINK_LAMP.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLASS_4.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> NEXUS = REGISTRY.register("nexus",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.nexus")).icon(() -> new ItemStack(TheArgContainerModBlocks.NEXUS_TEST.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.NEXUS_TEST.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_OLD_DATA.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_TILES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUSWALL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_DISPOSAL_SECTOR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_CAUTION_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_OLD_DATA_WOOD.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NEXUS_OLD_DATA_WALL.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> SLOTS_AVAILABLE = REGISTRY.register("slots_available",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.slots_available")).icon(() -> new ItemStack(TheArgContainerModBlocks.GREEN_BRICKS_1.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.GREEN_BRICKS_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.NOTE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_LOG_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.FLOWER_LAYER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_BRICKS_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DIRT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_BEDROCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_GRAVEL.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_ICE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.RED_ROSE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TALL_DANDELION.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_DIRT_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_GRASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_BRICKS_SUMMER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GREEN_BRICKS_SUMMER_SLAB.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PETRICHOR_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_COBBLESTONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_BEDROCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_LOG_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SPRING_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_SAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.SUMMER_LEAVES.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_PLANT.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GRASS_LAYER.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_WOOD_TILE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_WOOD_LOG.get().asItem());
				tabData.accept(TheArgContainerModBlocks.GLASS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DUTYTIME_GRASS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.STONE_WOOD_LOG_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.UNKNOWN_PLANT_1.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DUTYTIME_NOTE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DUTYTIME_SAND.get().asItem());
				tabData.accept(TheArgContainerModBlocks.TALL_RED_ROSE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.DUTYTIME_BLOCK.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> RUBY_ALPHA_VOID_DUNG = REGISTRY.register("ruby_alpha_void_dung",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.the_arg_container.ruby_alpha_void_dung")).icon(() -> new ItemStack(TheArgContainerModBlocks.PURPUR_BRICKS.get())).displayItems((parameters, tabData) -> {
				tabData.accept(TheArgContainerModBlocks.PURPUR_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.PURPURBRICKSSTAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REALITYSPACE_ARROW_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REALITYSPACE_MS_PACMAN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REALITYSPACE_PATTERN_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REALITYSPACE_TILE_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.REALITYSPACE_CROSS_BLOCK.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLOWED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLOWED_PILLAR.get().asItem());
				tabData.accept(TheArgContainerModBlocks.CHISELED_HALLOWED_STONE.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLOWED_BRICKS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLOWED_BRICKS_STAIRS.get().asItem());
				tabData.accept(TheArgContainerModBlocks.HALLOWED_BRICKS_SLAB.get().asItem());
			})

					.build());

	@SubscribeEvent
	public static void buildTabContentsVanilla(BuildCreativeModeTabContentsEvent tabData) {
		if (tabData.getTabKey() == CreativeModeTabs.REDSTONE_BLOCKS) {
			tabData.accept(TheArgContainerModBlocks.QUANTUM_BLOCK.get().asItem());
		} else if (tabData.getTabKey() == CreativeModeTabs.SPAWN_EGGS) {
			tabData.accept(TheArgContainerModItems.OBSERVER_MOB_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.RECRUITER_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.GIANT_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.SOUL_ENTITY_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.ENTITY_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.STEVEN_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.USER_0_CLONE_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.EVIL_USER_0_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.VOIDENTITY_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.PIG_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.LONG_LEGS_SPAWN_EGG.get());
			tabData.accept(TheArgContainerModItems.VOID_ENTITY_GECKOLIB_SPAWN_EGG.get());
		} else if (tabData.getTabKey() == CreativeModeTabs.FUNCTIONAL_BLOCKS) {
			tabData.accept(TheArgContainerModBlocks.STRUCTURE_BUILDER.get().asItem());
		} else if (tabData.getTabKey() == CreativeModeTabs.COMBAT) {
			tabData.accept(TheArgContainerModItems.OBSIDIAN_ARMOR_HELMET.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_ARMOR_CHESTPLATE.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_ARMOR_LEGGINGS.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_ARMOR_BOOTS.get());
			tabData.accept(TheArgContainerModItems.RAGGED_ARMOR_HELMET.get());
			tabData.accept(TheArgContainerModItems.RAGGED_ARMOR_CHESTPLATE.get());
			tabData.accept(TheArgContainerModItems.RAGGED_ARMOR_LEGGINGS.get());
			tabData.accept(TheArgContainerModItems.RAGGED_ARMOR_BOOTS.get());
			tabData.accept(TheArgContainerModItems.MYCON_TOOL_SET_SWORD.get());
			tabData.accept(TheArgContainerModItems.FLAMEBERGE.get());
			tabData.accept(TheArgContainerModItems.STYLISHARMOR_HELMET.get());
			tabData.accept(TheArgContainerModItems.STYLISHARMOR_CHESTPLATE.get());
			tabData.accept(TheArgContainerModItems.STYLISHARMOR_LEGGINGS.get());
			tabData.accept(TheArgContainerModItems.STYLISHARMOR_BOOTS.get());
			tabData.accept(TheArgContainerModItems.SPEAR.get());
			tabData.accept(TheArgContainerModItems.REPELLER.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_SWORD.get());
			tabData.accept(TheArgContainerModItems.ENVELOPMENT_DIAMOND_ARMOR_HELMET.get());
			tabData.accept(TheArgContainerModItems.ENVELOPMENT_DIAMOND_ARMOR_CHESTPLATE.get());
			tabData.accept(TheArgContainerModItems.ENVELOPMENT_DIAMOND_ARMOR_LEGGINGS.get());
			tabData.accept(TheArgContainerModItems.ENVELOPMENT_DIAMOND_ARMOR_BOOTS.get());
		} else if (tabData.getTabKey() == CreativeModeTabs.TOOLS_AND_UTILITIES) {
			tabData.accept(TheArgContainerModItems.MYCON_TOOL_SET_AXE.get());
			tabData.accept(TheArgContainerModItems.MYCON_TOOL_SET_PICKAXE.get());
			tabData.accept(TheArgContainerModItems.MYCON_TOOL_SET_SHOVEL.get());
			tabData.accept(TheArgContainerModItems.MYCON_TOOL_SET_HOE.get());
			tabData.accept(TheArgContainerModItems.ERASER.get());
			tabData.accept(TheArgContainerModItems.DISMANTLER.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_PICKAXE.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_AXE.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_SHOVEL.get());
			tabData.accept(TheArgContainerModItems.OBSIDIAN_HOE.get());
		} else if (tabData.getTabKey() == CreativeModeTabs.FOOD_AND_DRINKS) {
			tabData.accept(TheArgContainerModItems.FRYSHROOM.get());
		}
	}
}
